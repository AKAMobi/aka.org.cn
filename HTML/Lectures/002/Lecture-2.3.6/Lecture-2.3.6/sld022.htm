
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>Microkernel</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img022.gif" usemap="#Objmap" WIDTH=768 HEIGHT=576 BORDER=0>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm">First</A>&nbsp;&nbsp;
         <A HREF="sld021.htm">Previous</A>&nbsp;&nbsp;
         <A HREF="sld023.htm">Next</A>&nbsp;&nbsp;
         <A HREF="sld024.htm">Last</A>&nbsp;&nbsp;
&nbsp;&nbsp;         <A HREF="index.htm">Index</A>&nbsp;&nbsp;
         <A HREF="http://www.lisoleg.org">Home</A>&nbsp;&nbsp;
         <A HREF="tsld022.htm">Text</A>&nbsp;&nbsp;
     </TD> </TR>
</TABLE>
<P>Slide 22 of 24</P>
</CENTER>
<!-- <UL>
<H2>Microkernel</H2>
</UL></P>
<P><UL>
<LI><H2>A microkernel architecture is basically a way of abstracting the details of process control, memory allocation, and resource allocation so that a port to another chipset would require minimal changes.
</H2>
</UL><UL>
<LI><H2>Linus thoughts about microkernel
</H2>
<UL>
(a) were experimental 
<BR><BR>(b) were obviously more complex than monolithic Kernels, and 
<BR>(c) executed notably slower than monolithic kernels.
</UL></UL><UL>
<LI><H2>Linux design principle
</H2>
<UL>
If you want code to be portable, you shouldn't necessarily create an abstraction layer to achieve portability. Instead you should just program intelligently. Essentially, trying to make microkernels portable is a waste of time. It's like building an exceptionally fast car and putting square tires on it. The idea of abstracting away the one thing that must be blindingly fast--the kernel--is inherently counter-productive.
<BR><BR>So in this sane architecture you know you need to have a few machine-specific parts in the kernel, but most of the code is based on the general mechanisms by which something like the TLB works.</UL></UL></P>
<P>  -->
</Body>
</HTML>
