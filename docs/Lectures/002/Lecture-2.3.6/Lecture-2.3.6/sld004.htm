
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>Memory Consistency</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img004.gif" usemap="#Objmap" WIDTH=768 HEIGHT=576 BORDER=0>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm">First</A>&nbsp;&nbsp;
         <A HREF="sld003.htm">Previous</A>&nbsp;&nbsp;
         <A HREF="sld005.htm">Next</A>&nbsp;&nbsp;
         <A HREF="sld024.htm">Last</A>&nbsp;&nbsp;
&nbsp;&nbsp;         <A HREF="index.htm">Index</A>&nbsp;&nbsp;
         <A HREF="http://www.lisoleg.org">Home</A>&nbsp;&nbsp;
         <A HREF="tsld004.htm">Text</A>&nbsp;&nbsp;
     </TD> </TR>
</TABLE>
<P>Slide 4 of 24</P>
</CENTER>
<!-- <UL>
<H2>Memory Consistency</H2>
</UL></P>
<P><UL>
<LI><H2>Cache coherence is not enough
</H2>
<UL>
Cache密致性主要关心不同处理器上执行的，对同一个内存位置的读写操作的顺序。而我们有时候希望内存系统，能保证对不同内存位置的读写操作的顺序。
<BR><BR>(Goodman)
<BR>Processor Consistency: A multiprocessor is said to be processor consistency if the result of any execution is the same as if the operations of each individual processor appear in the sequential order specified by its program。
<BR>(Gharachorloo)
<LI>在任一取数操作LOAD允许执行之前，所有在同一处理机中先于这一LOAD的取数操作都以完成；
<LI>在任一存数操作STORE允许执行之前，所有在同一处理机中先于这一STORE的访存操作（包括取数操作和存数操作）都已完成。
<BR>在处理机一致性模型中，每个处理机内的W→R访存次序是可以违反的，从而使得一些读操作得以绕过以前的写操作先被执行，在不破坏正确性的前提下提高系统的性能。最近的研究结果表明，处理机一致性模型下的程序的性能比在顺序一致性下要高出大约30%。
<BR>Release Consistency: Spinlock in Linux</UL></UL></P>
<P>  -->
</Body>
</HTML>
