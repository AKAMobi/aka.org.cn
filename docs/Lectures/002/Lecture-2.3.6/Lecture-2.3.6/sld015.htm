
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>True Linux Kernel Threads</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img015.gif" usemap="#Objmap" WIDTH=768 HEIGHT=576 BORDER=0>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm">First</A>&nbsp;&nbsp;
         <A HREF="sld014.htm">Previous</A>&nbsp;&nbsp;
         <A HREF="sld016.htm">Next</A>&nbsp;&nbsp;
         <A HREF="sld024.htm">Last</A>&nbsp;&nbsp;
&nbsp;&nbsp;         <A HREF="index.htm">Index</A>&nbsp;&nbsp;
         <A HREF="http://www.lisoleg.org">Home</A>&nbsp;&nbsp;
         <A HREF="tsld015.htm">Text</A>&nbsp;&nbsp;
     </TD> </TR>
</TABLE>
<P>Slide 15 of 24</P>
</CENTER>
<!-- <UL>
<H2>True Linux Kernel Threads</H2>
</UL></P>
<P><UL>
432 int kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)
<BR>433 { long retval, d0; 
<BR>436         __asm__ __volatile__(
<BR>437                 "movl %%esp,%%esi\n\t"
<BR>438                 "int $0x80\n\t"         /* Linux/i386 system call */
<BR>439                 "cmpl %%esp,%%esi\n\t"  /* child or parent? */
<BR>440                 "je 1f\n\t"             /* parent - jump */
<BR>444                 "movl %4,%%eax\n\t"
<BR>445                 "pushl %%eax\n\t"               
<BR>446                 "call *%5\n\t"          /* call fn */
<BR>447                 "movl %3,%0\n\t"        /* exit */
<BR>448                 "int $0x80\n"
<BR>449                 "1:\t" 
<BR>450                 :"=&a" (retval), "=&S" (d0)  :"" (__NR_clone), "i" (__NR_exit), "r" (arg), "r" (fn),
<BR>453                  "b" (flags | CLONE_VM) : "memory");
<BR>455         return retval;
<BR>456 }/* Linux/arch/i386/kernel/process.c */</UL></P>
<P><UL>
int kernel_thread() 
</UL><UL>
{ 
</UL><UL>
   pid=clone(flags); 
</UL><UL>
   if(child) 
</UL><UL>
   { 
</UL><UL>
     fn(arg); 
</UL><UL>
     exit(0); 
</UL><UL>
   } 
</UL><UL>
   return pid; 
</UL><UL>
} </UL></P>
<P>  -->
</Body>
</HTML>
