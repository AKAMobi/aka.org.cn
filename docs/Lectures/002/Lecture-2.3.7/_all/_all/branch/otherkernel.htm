<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=GB2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./otherkernel.files/filelist.xml">
<title>1</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>何碧筠</o:Author>
  <o:LastAuthor>何碧筠</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>38</o:TotalTime>
  <o:Created>2000-12-12T17:28:00Z</o:Created>
  <o:LastSaved>2000-12-12T17:28:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>644</o:Words>
  <o:Characters>3671</o:Characters>
  <o:Company>清华大学</o:Company>
  <o:Lines>30</o:Lines>
  <o:Paragraphs>7</o:Paragraphs>
  <o:CharactersWithSpaces>4508</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimHei;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:楷体_GB2312;
	panose-1:2 1 6 9 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@楷体_GB2312";
	panose-1:2 1 6 9 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
h1
	{mso-style-next:正文;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:12.0pt;
	margin-left:0cm;
	text-align:center;
	text-indent:0cm;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	mso-list:l1 level1 lfo3;
	font-size:22.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:22.0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-next:正文（首行缩进两字）;
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:173%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	mso-list:l1 level2 lfo3;
	font-size:16.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	mso-bidi-font-weight:normal;}
h3
	{mso-style-next:正文（首行缩进两字）;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:3;
	mso-list:l1 level3 lfo3;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	mso-bidi-font-weight:normal;}
h4
	{mso-style-next:正文（首行缩进两字）;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	mso-list:l1 level4 lfo3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	mso-bidi-font-weight:normal;}
h5
	{mso-style-next:正文（首行缩进两字）;
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:156%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:5;
	mso-list:l1 level5 lfo3;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	mso-bidi-font-weight:normal;}
h6
	{mso-style-next:正文（首行缩进两字）;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:133%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:6;
	mso-list:l1 level6 lfo3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	mso-bidi-font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-next:正文（首行缩进两字）;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:133%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:7;
	mso-list:l1 level7 lfo3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-next:正文（首行缩进两字）;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:133%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:8;
	mso-list:l1 level8 lfo3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-next:正文（首行缩进两字）;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:133%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:9;
	mso-list:l1 level9 lfo3;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.L1, li.L1, div.L1
	{mso-style-name:L1;
	mso-style-next:正文;
	margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:17.0pt;
	margin-left:0cm;
	text-align:center;
	page-break-before:always;
	mso-pagination:none;
	page-break-after:avoid;
	font-size:16.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:宋体;
	mso-hansi-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:blue;
	mso-font-kerning:1.0pt;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.L2, li.L2, div.L2
	{mso-style-name:L2;
	mso-style-update:auto;
	mso-style-next:正文;
	margin-top:5.0pt;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	text-indent:0cm;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-list:l0 level2 lfo2;
	tab-stops:list 36.0pt;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	color:fuchsia;
	mso-font-kerning:1.0pt;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.L3, li.L3, div.L3
	{mso-style-name:L3;
	mso-style-next:正文;
	margin-top:8.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:7.1pt;
	margin-bottom:.0001pt;
	text-indent:-7.1pt;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-list:l0 level3 lfo2;
	tab-stops:list 54.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	color:red;
	mso-font-kerning:1.0pt;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:448280101;
	mso-list-template-ids:1062761370;}
@list l0:level1
	{mso-level-number-format:none;
	mso-level-style-link:L2;
	mso-level-tab-stop:21.25pt;
	mso-level-number-position:left;
	margin-left:21.25pt;
	text-indent:-21.25pt;}
@list l0:level2
	{mso-level-start-at:7;
	mso-level-style-link:L2;
	mso-level-text:"%1%2\.";
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l0:level3
	{mso-level-style-link:L3;
	mso-level-text:"%1%2\.%3\.";
	mso-level-tab-stop:54.0pt;
	mso-level-number-position:left;
	margin-left:7.1pt;
	text-indent:-7.1pt;}
@list l0:level4
	{mso-level-text:"%1%2\.%3\.%4\.";
	mso-level-tab-stop:54.0pt;
	mso-level-number-position:left;
	margin-left:14.2pt;
	text-indent:-14.2pt;}
@list l0:level5
	{mso-level-number-format:none;
	mso-level-text:"%1%2\.%3\.%4\.%5\.";
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	margin-left:49.6pt;
	text-indent:-49.6pt;}
@list l0:level6
	{mso-level-number-format:none;
	mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.";
	mso-level-tab-stop:90.0pt;
	mso-level-number-position:left;
	margin-left:2.0cm;
	text-indent:-2.0cm;}
@list l0:level7
	{mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.";
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	margin-left:63.8pt;
	text-indent:-63.8pt;}
@list l0:level8
	{mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.";
	mso-level-tab-stop:70.9pt;
	mso-level-number-position:left;
	margin-left:70.9pt;
	text-indent:-70.9pt;}
@list l0:level9
	{mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.%9\.";
	mso-level-tab-stop:77.95pt;
	mso-level-number-position:left;
	margin-left:77.95pt;
	text-indent:-77.95pt;}
@list l1
	{mso-list-id:774327653;
	mso-list-template-ids:-1434950870;}
@list l1:level1
	{mso-level-start-at:2;
	mso-level-style-link:"标题 1";
	mso-level-suffix:none;
	mso-level-text:"第%1章  ";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level2
	{mso-level-number-format:none;
	mso-level-style-link:"标题 2";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level3
	{mso-level-number-format:none;
	mso-level-style-link:"标题 3";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level4
	{mso-level-number-format:none;
	mso-level-style-link:"标题 4";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level5
	{mso-level-number-format:none;
	mso-level-style-link:"标题 5";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level6
	{mso-level-number-format:none;
	mso-level-style-link:"标题 6";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level7
	{mso-level-number-format:none;
	mso-level-style-link:"标题 7";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level8
	{mso-level-number-format:none;
	mso-level-style-link:"标题 8";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1:level9
	{mso-level-number-format:none;
	mso-level-style-link:"标题 9";
	mso-level-suffix:none;
	mso-level-text:"";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<p class=L2 style='margin-left:0cm;text-indent:0cm'><![if !supportLists]><span
lang=EN-US style='color:windowtext'>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";color:windowtext'>其他核心机制在进程调度中的运用</span><span
lang=EN-US style='color:windowtext'><o:p></o:p></span></p>

<p class=L3><a name="_Toc447417762"></a><a name="_Toc480934319"></a><a
name="_Toc480968275"></a><a name="_Toc481512123"><span style='mso-bookmark:
_Toc480968275'><span style='mso-bookmark:_Toc480934319'><span style='mso-bookmark:
_Toc447417762'><![if !supportLists]><span lang=EN-US style='color:windowtext'>7.1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='color:windowtext'>bottom half</span></span></span></span></a><span
style='mso-bookmark:_Toc481512123'><span style='mso-bookmark:_Toc480968275'><span
style='mso-bookmark:_Toc480934319'><span style='mso-bookmark:_Toc447417762'><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";color:windowtext'>处理</span></span></span></span></span><span
style='mso-bookmark:_Toc447417762'></span><span style='mso-bookmark:_Toc480934319'></span><span
style='mso-bookmark:_Toc480968275'></span><span style='mso-bookmark:_Toc481512123'></span><span
lang=EN-US style='color:windowtext'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>do_bottom_half</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>。</span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>相关的源代码文件是的</span><span lang=EN-US>hardirq.h</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>，</span><span lang=EN-US>softirq.h</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>和</span><span lang=EN-US>softirq.c</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>。</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>bottom half</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>是</span><span
lang=EN-US>Linux</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>提高系统中断响应和处理能力的有效机制。</span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>我们知道，发生中断时，处理器要停止当前正在执行的指令，而操作系统负责将中断发送到对应的设备驱动程序去处理。在中断的处理过程中，系统不能进行其他任何工作，因此，在这段时间内，设备驱动程序要以最快的速度完成中断处理，而其他大部分工作在中断处理过程之外进行。</span><span
lang=EN-US>Linux </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>内核利用<span
lang=EN-US>bottom half处理过程帮助实现中断的快速处理。</span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>bh_base</span><span lang=EN-US> </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>数组的索引是静态定义的，定时器<span
lang=EN-US>bottom half处理过程的地址保存在第</span></span><span lang=EN-US> 0 </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>个元素中，控制台<span
lang=EN-US>bottom half处理过程的地址保存在第</span></span><span lang=EN-US> 1 </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>个元素中等等。典型来说，每个<span
lang=EN-US>bottom half处理过程和相应的任务队列关联。当</span></span> <span lang=EN-US
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_mask</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>和</span>
<span lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>表明第</span><span
lang=EN-US> N </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>个<span
lang=EN-US>bottom half处理过程已被安装且处于活动状态，则调度程序会调用第</span></span><span lang=EN-US>
N </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>个<span
lang=EN-US>bottom half处理过程，该bottom half处理过程最终会处理与之相关的任务队列中的各个任务。因为调度程序从第</span></span><span
lang=EN-US> 0 </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>个元素开始依次检查每个<span
lang=EN-US>bottom half处理过程，因此，第</span></span><span lang=EN-US> 0 </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>个<span
lang=EN-US>bottom half处理过程具有最高的优先级，第</span></span><span lang=EN-US> 31 </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>个<span
lang=EN-US>bottom half处理过程的优先级最低。<o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>内核中的某些<span
lang=EN-US>bottom half处理过程是和特定设备相关的，而其他一些则更一般一些。下面列出了内核中通用的bottom half处理过程。<o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:Arial;mso-bidi-font-family:
"Times New Roman"'>Linux </span><span style='font-family:楷体_GB2312'>中通用的<span
lang=EN-US>bottom half处理过程<o:p></o:p></span></span></p>

<table border=0 cellspacing=0 cellpadding=0 style='margin-left:5.25pt;
 border-collapse:collapse;mso-padding-alt:0cm 5.25pt 0cm 5.25pt'>
 <tr>
  <td width=168 style='width:126.0pt;border:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>TIMER</span><span
  style='font-size:9.0pt;mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:
  "Times New Roman"'>（定时器）</span></p>
  </td>
  <td width=372 style='width:279.0pt;border:solid black 1.5pt;border-left:none;
  mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>在每次系统的周期性定时器中断中，该<span
  lang=EN-US>bottom half处理过程被标记为活动状态，并用来驱动内核的定时器队列机制。</span></span></p>
  </td>
 </tr>
 <tr>
  <td width=168 style='width:126.0pt;border:solid black 1.5pt;border-top:none;
  mso-border-top-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>CONSOLE</span><span
  style='font-size:9.0pt;mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:
  "Times New Roman"'>（控制台）</span></p>
  </td>
  <td width=372 style='width:279.0pt;border-top:none;border-left:none;
  border-bottom:solid black 1.5pt;border-right:solid black 1.5pt;mso-border-top-alt:
  solid black 1.5pt;mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>该处理过程用来处理控制台消息。</span></p>
  </td>
 </tr>
 <tr>
  <td width=168 style='width:126.0pt;border:solid black 1.5pt;border-top:none;
  mso-border-top-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>TQUEUE</span><span
  style='font-size:9.0pt;mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:
  "Times New Roman"'>（</span><span lang=EN-US style='font-size:9.0pt;
  mso-bidi-font-size:12.0pt'>TTY </span><span style='font-size:9.0pt;
  mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:"Times New Roman"'>消息队列）</span></p>
  </td>
  <td width=372 style='width:279.0pt;border-top:none;border-left:none;
  border-bottom:solid black 1.5pt;border-right:solid black 1.5pt;mso-border-top-alt:
  solid black 1.5pt;mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>该处理过程用来处理</span><span
  lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:12.0pt'> tty </span><span
  style='font-size:9.0pt;mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:
  "Times New Roman"'>消息。</span></p>
  </td>
 </tr>
 <tr>
  <td width=168 style='width:126.0pt;border:solid black 1.5pt;border-top:none;
  mso-border-top-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>NET</span><span
  style='font-size:9.0pt;mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:
  "Times New Roman"'>（网络）</span></p>
  </td>
  <td width=372 style='width:279.0pt;border-top:none;border-left:none;
  border-bottom:solid black 1.5pt;border-right:solid black 1.5pt;mso-border-top-alt:
  solid black 1.5pt;mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>该处理过程用于一般网络处理。</span></p>
  </td>
 </tr>
 <tr>
  <td width=168 style='width:126.0pt;border:solid black 1.5pt;border-top:none;
  mso-border-top-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>IMMEDIATE</span><span
  style='font-size:9.0pt;mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:
  "Times New Roman"'>（立即）</span></p>
  </td>
  <td width=372 style='width:279.0pt;border-top:none;border-left:none;
  border-bottom:solid black 1.5pt;border-right:solid black 1.5pt;mso-border-top-alt:
  solid black 1.5pt;mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>这是一个一般性处理过程，许多设备驱动程序利用该过程对自己要在随后处理的任务进行排队。</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>当某个设备驱动程序，或内核的其他部分需要将任务排队进行处理时，它将任务添加到适当的系统队列中（例如，添加到系统的定时器队列中），然后通知内核，表明需要进行<span
lang=EN-US>bottom half处理。<o:p></o:p></span></span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span style='font-family:黑体;
mso-ascii-font-family:Arial'>◎</span> <span lang=EN-US>do_bottom_half(void)@softirq.c</span></h4>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>static inline void run_bottom_halves(void)<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>{<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>unsigned
long active;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>void
(**bh)(void);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>active
= get_active_bhs();<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>clear_active_bhs(active);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>bh =
bh_base;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>do {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if
(active &amp; 1)<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>(*bh)();<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>bh++;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>active
&gt;&gt;= 1;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>}
while (active);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>asmlinkage void do_bottom_half(void)<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>{<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>int
cpu = smp_processor_id();<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>if
(softirq_trylock(cpu)) {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if
(hardirq_trylock(cpu)) {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>__sti();<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>run_bottom_halves();<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>__cli();<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>hardirq_endlock(cpu);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>softirq_endlock(cpu);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>}<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>为了通知内核，使用<span
lang=EN-US>mark_bh(irq)将</span></span> <span lang=EN-US style='font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>的相应数据位置为</span><span
lang=EN-US> 1</span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>。例如，如果驱动程序在</span>
<span lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>immediate</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>队列中将某任务排队，并希望运行</span>
<span lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>IMMEDIATE</span><span
lang=EN-US> </span><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>bottom half处理过程来处理排队任务，则只需将</span> <span lang=EN-US
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>的第</span><span
lang=EN-US> 8 </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>位置为</span><span
lang=EN-US> 1</span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>在每个系统调用和中断调用结束并返回之前，调度程序要检验</span>
<span lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>中的每个位，如果有任何一位为</span><span
lang=EN-US> 1</span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>，则相应的<span
lang=EN-US>bottom half处理过程被调用。（根据开发者的计划，将来的处理方法可能是可以由用户程序或中断处理例程指示是否在此时执行bottom
half。）<o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>每个<span
lang=EN-US>bottom half处理过程被调用时，</span></span><span lang=EN-US style='font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>中的相应为被清除。</span><span
lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>中的置位只是暂时的，在两次调用调度程序之间</span>
<span lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>的值才有意义，如果</span>
<span lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>bh_active</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>中没有置位，则不需要调用任何<span
lang=EN-US>bottom half处理过程。<o:p></o:p></span></span></p>

<p class=L3><a name="_Toc447417763"></a><a name="_Toc480934320"></a><a
name="_Toc480968276"></a><a name="_Toc481512124"><span style='mso-bookmark:
_Toc480968276'><span style='mso-bookmark:_Toc480934320'><span style='mso-bookmark:
_Toc447417763'><![if !supportLists]><span lang=EN-US style='color:windowtext'>7.2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";color:windowtext'>任务队列</span></span></span></span></a><span
style='mso-bookmark:_Toc447417763'></span><span style='mso-bookmark:_Toc480934320'></span><span
style='mso-bookmark:_Toc480968276'></span><span style='mso-bookmark:_Toc481512124'></span><span
lang=EN-US style='color:windowtext'><o:p></o:p></span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span style='font-family:黑体;
mso-ascii-font-family:Arial'>◎</span> <span lang=EN-US>tq_struct</span><span
lang=EN-US style='font-weight:normal'>@</span><span lang=EN-US>tqueue.h</span></h4>

<p class=MsoNormal><span lang=EN-US>struct tq_struct {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct
tq_struct *next;<span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/*
linked list of active bh's */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>unsigned
long sync;<span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/*
must be initialized to zero */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>void
(*routine)(void *);<span style='mso-tab-count:1'>&nbsp; </span>/* function to
call */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>void
*data;<span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/*
argument to function */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>};</span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>任务队列是内核将任务延迟到以后处理的一种方法。任务队列和<span
lang=EN-US>bottom half处理过程经常结合起来使用，例如，定时器任务队列在定时器bottom half处理过程中进行处理。任务队列的数据结构很简单，实际就是普通的单向链表结构，每个</span></span>
<span lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>tq_struct</span><span
lang=EN-US> </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>数据结构作为任务队列的节点，包含了一个例程地址和指向一些数据的指针。当任务队列中的节点被处理时，将调用例程并传递数据指针。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>内核中的任何部分（例如驱动程序）都可以建立并使用任何队列，由内核建立并维护的三个一般性任务队列在表</span><span
lang=EN-US> 15-2 </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman"'>中列出。<span
lang=EN-US><o:p></o:p></span></span></p>

<h4 style='margin-left:0cm;text-indent:0cm'><span style='font-family:黑体;
mso-ascii-font-family:Arial'>◎</span><span lang=EN-US>Linux </span><span
style='font-family:黑体;mso-ascii-font-family:Arial'>内核中三个一般性任务队列</span></h4>

<p class=MsoNormalIndent><span lang=EN-US>@sched.c</span></p>

<p class=MsoNormalIndent><span lang=EN-US>DECLARE_TASK_QUEUE(tq_timer);<o:p></o:p></span></p>

<p class=MsoNormalIndent><span lang=EN-US>DECLARE_TASK_QUEUE(tq_immediate);<o:p></o:p></span></p>

<p class=MsoNormalIndent><span lang=EN-US>DECLARE_TASK_QUEUE(tq_scheduler);<o:p></o:p></span></p>

<p class=MsoNormalIndent><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<table border=0 cellspacing=0 cellpadding=0 style='margin-left:5.25pt;
 border-collapse:collapse;mso-padding-alt:0cm 5.25pt 0cm 5.25pt'>
 <tr>
  <td width=132 style='width:99.0pt;border:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>TIMER<o:p></o:p></span></p>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>（定时器）</span></p>
  </td>
  <td width=408 style='width:306.0pt;border:solid black 1.5pt;border-left:none;
  mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>该队列用来排队需要在系统时钟滴答之后尽可能快地完成的任务。每次时钟滴答时，如果该队列中包含有元素，则定时器队列<span
  lang=EN-US>bottom half处理例程标记为活动状态。在随后运行的调度程序中，定时器队列bottom half处理例程被调用，从而定时器队列中排队的任务也被处理。</span></span></p>
  </td>
 </tr>
 <tr>
  <td width=132 style='width:99.0pt;border:solid black 1.5pt;border-top:none;
  mso-border-top-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>IMMEDIATE<o:p></o:p></span></p>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>（立即）</span></p>
  </td>
  <td width=408 style='width:306.0pt;border-top:none;border-left:none;
  border-bottom:solid black 1.5pt;border-right:solid black 1.5pt;mso-border-top-alt:
  solid black 1.5pt;mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>该队列在调度程序处理活动的<span
  lang=EN-US>bottom half处理程序时处理。因为</span></span><span style='font-size:9.0pt;
  mso-bidi-font-size:12.0pt'> </span><span lang=EN-US style='font-size:9.0pt;
  mso-bidi-font-size:12.0pt;font-family:"Courier New";mso-bidi-font-family:
  "Times New Roman"'>IMMEDIATE</span><span lang=EN-US style='font-size:9.0pt;
  mso-bidi-font-size:12.0pt'> </span><span lang=EN-US style='font-size:9.0pt;
  mso-bidi-font-size:12.0pt;font-family:宋体;mso-hansi-font-family:"Times New Roman"'>bottom
  half处理过程的优先级较低，因此比起定时器bottom half处理过程，对这些任务的处理要稍微拖后一些。</span></p>
  </td>
 </tr>
 <tr>
  <td width=132 style='width:99.0pt;border:solid black 1.5pt;border-top:none;
  mso-border-top-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;mso-bidi-font-size:
  12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>SCHEDULER<o:p></o:p></span></p>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>（调度程序）</span></p>
  </td>
  <td width=408 style='width:306.0pt;border-top:none;border-left:none;
  border-bottom:solid black 1.5pt;border-right:solid black 1.5pt;mso-border-top-alt:
  solid black 1.5pt;mso-border-left-alt:solid black 1.5pt;padding:0cm 5.25pt 0cm 5.25pt'>
  <p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
  font-family:宋体;mso-hansi-font-family:"Times New Roman"'>该任务队列由调度程序直接处理。该队列用来支持系统中的其他任务队列，这种情况下，要运行的任务实际是处理某个任务队列的例程。</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>　在处理任务队列时，队列中第一个元素从队列中移出，并用空指针代替。移出操作必须是一个原子操作，也就是说，是不能被中断的操作。队列中每个处理例程依次调用。队列中的元素通常是静态分配的数据，因为没有内建用来丢弃已分配内存的机制，因此，任务队列的处理过程简单移向后续的链表元素。对已分配内核内存的清除工作由任务本身完成。</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>@ Linux/include/linux/interrutp.h<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>enum {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>TIMER_BH
= 0,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>CONSOLE_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>TQUEUE_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>DIGI_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>SERIAL_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>RISCOM8_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>SPECIALIX_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>AURORA_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>ESP_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>NET_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>SCSI_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>IMMEDIATE_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>KEYBOARD_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>CYCLADES_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>CM206_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>JS_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>MACSERIAL_BH,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>ISICOM_BH<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman"'>};</span></p>

<p class=L3><![if !supportLists]><span lang=EN-US style='color:windowtext'>7.3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";color:windowtext'>等待队列</span><span
lang=EN-US style='color:windowtext'><o:p></o:p></span></p>

<p class=MsoNormalIndent style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>前一节我们曾简要的提到进程（也就是正在运行的程序）可以转入休眠状态以等待某个特定事件，当该事件发生时这些进程能够被再次唤醒。内核实现这一功能的技术要点是把等待队列（</span><span
lang=EN-US>wait queue</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>）和每一个事件联系起来。需要等待事件的进程在转入休眠状态后插入到队列中。当事件发生之后，内核遍历相应队列，唤醒休眠的任务让它投入运行状态。任务负责将自己从等待队列中清除。</span></p>

<p class=MsoNormalIndent style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>等待队列的功能强大得令人吃惊，它们被广泛应用于整个内核中。更重要的是，实现等待队列的代码量并不大。</span></p>

<h4 style='margin-left:0cm;text-indent:23.05pt;mso-char-indent-count:1.95;
mso-char-indent-size:11.8pt'><span style='font-family:黑体;mso-ascii-font-family:
Arial'>◎</span> <span lang=EN-US>wait_queue</span><span style='font-family:
黑体;mso-ascii-font-family:Arial'>结构</span><span lang=EN-US>: </span><span
style='font-family:黑体;mso-ascii-font-family:Arial'>单链</span></h4>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span lang=EN-US>@ include/linux/wait.h </span></p>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct
wait_queue {</span></p>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct
task_struct * task;</span></p>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct
wait_queue * next;</span></p>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>};</span></p>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>进程（也就是正在运行的程序）可以转入休眠状态以等待某个特定事件，当该事件发生时这些进程能够被再次唤醒。内核实现这一功能的技术要点是把等待队列（</span><span
lang=EN-US>wait queue</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>）和每一个事件联系起来。需要等待事件的进程在转入休眠状态后插入到队列中。当事件发生之后，内核遍历相应队列，唤醒休眠的任务让它投入运行状态。任务负责将自己从等待队列中清除。</span></p>

<p class=MsoNormal style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>等待队列的功能强大得令人吃惊，它们被广泛应用于整个内核中。更重要的是，实现等待队列的代码量并不大。</span><span
lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span></span></p>

<h4 style='margin-left:0cm;text-indent:23.05pt;mso-char-indent-count:1.95;
mso-char-indent-size:11.8pt'><span style='font-family:黑体;mso-ascii-font-family:
Arial'>◎</span> <span lang=EN-US>wait_event @sched.h</span></h4>

<p class=MsoNormalIndent style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>通过使用这个宏，内核代码能够使当前执行的进程在等待队列</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US>wq</span></b><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>中等待直至给定</span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US>condition</span></b><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>（可能是任何的表达式）得到满足。</span></p>

<p class=MsoNormalIndent style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>如果条件已经为真，当前进程显然也就无需等待了。</span></p>

<p class=MsoNormalIndent style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>否则，进程必须等待给定条件转变为真。这可以通过调用</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US>__wait_event</span></b><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>来实现（</span><span lang=EN-US>16824</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>行），我们将在下一节介绍它。由于</span> <b style='mso-bidi-font-weight:normal'><span
lang=EN-US>__wait_event</span></b><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>已经同</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US>wait_event</span></b><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>分离，已知条件为假的部分内核代码可以直接调用</span><b style='mso-bidi-font-weight:
normal'><span lang=EN-US>__wait_queue</span></b><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>，而不用通过宏来进行冗余的（特别是在这些情况下）测试，实际上也没有代码会真正这样处理。更为重要的是，如果条件已经为真，</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US>wait_event</span></b><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>会跳过将进程插入等待队列的代码。</span></p>

<h4 style='margin-left:0cm;text-indent:23.05pt;mso-char-indent-count:1.95;
mso-char-indent-size:11.8pt'><span style='font-family:黑体;mso-ascii-font-family:
Arial'>◎</span> <span lang=EN-US>__wait_event@sched.c</span></h4>

<p class=MsoNormalIndent style='text-indent:20.15pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.3pt'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US>__wait_event</span></b><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>使当前进程在等待队列</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US>wq</span></b><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>中等待直至</span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US>condition</span></b><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>为真。</span></p>

<h4 style='margin-left:0cm;text-indent:23.05pt;mso-char-indent-count:1.95;
mso-char-indent-size:11.8pt'><span style='font-family:黑体;mso-ascii-font-family:
Arial'>◎</span> <span lang=EN-US>__wake_up@sched.c</span></h4>

<p class=MsoNormalIndent style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>该函数用来唤醒等待队列中正在休眠的进程。它由</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US>wake_up</span></b><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>和</span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US>wake_up_interruptible</span></b><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>调用（请分别参看</span><span
lang=EN-US>16612</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>行和</span><span lang=EN-US>16614</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>行）。这些宏提供</span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US>mode</span></b><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>参数，只有状态满足</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US>mode</span></b><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>所包含的状态之一的进程才可能被唤醒。</span></p>

<p class=MsoNormalIndent style='text-indent:20.45pt;mso-char-indent-count:1.95;
mso-char-indent-size:10.45pt'><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
