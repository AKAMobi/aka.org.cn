%!PS-Adobe-3.0
%%Title: (saintro.word)
%%Creator: (Microsoft Word: LaserWriter 8 8.1.1)
%%CreationDate: (8:00 PM Wednesday, April 3, 1996)
%%For: (shaw)
%%Pages: 42
%%DocumentFonts: Palatino-Bold Palatino-Roman Palatino-Italic Palatino-BoldItalic Helvetica Helvetica-Bold Helvetica-Oblique Courier-Bold NewCenturySchlbk-Bold
%%DocumentNeededFonts: Palatino-Bold Palatino-Roman Palatino-Italic Palatino-BoldItalic Helvetica Helvetica-Bold Helvetica-Oblique Courier-Bold NewCenturySchlbk-Bold
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -31 -30 761 582
%ADO_ImageableArea: 0 0 730 552
%%EndComments
/md 246 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
level2 startnoload
%%BeginFile: adobe_psp_patterns_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/patfreq Z
/patangle Z
/bk Z
/fg Z
/docolorscreen Z
/graystring Z
/pattransf{}def
/initQDpatterns
{
/patfreq 9.375 store
/patangle
1 0 $m defaultmatrix dtransform
exch atan
por not
{90 add}if
normland{180 add}if
store
:a
}def
/docolorscreen
/setcolorscreen where
{
pop/currentcolorscreen where
{
pop/setcmykcolor where
{
pop true
}{
false
}ifelse
}{
false
}ifelse
}{
false
}ifelse
def
/setgraypattern
{
/graystring xs
patfreq
patangle
{
1 add
4 mul
cvi
graystring
exch get
exch
1 add 4 mul
cvi
7 sub
bitshift
1 and
}setscreen
64 div setgray
}bd
/:b
{
/pattransf load settransfer
pop pop pop
setgraypattern
}bd
docolorscreen startnoload
/screensave 5 array def
/:a{currentgray currentscreen currenttransfer screensave astore pop}bd
/:e{screensave aload pop settransfer setscreen setgray}bd
/:d
{
pop pop pop
/pattransf load settransfer
setgraypattern 8{pop}repeat
}bd
/:c
/:d ld
docolorscreen endnoload docolorscreen not startnoload
/screensave 20 array def
/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd
/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd
/rstring Z
/grstring Z
/blstring Z
/convroll{64 div 4 -1 roll}bd
/setcolorpattern
{
/graystring xs
/blstring xs
/grstring xs
/rstring xs
patfreq
patangle
{
1 add 4 mul cvi rstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi grstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi blstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi graystring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
setcolorscreen
convroll convroll convroll convroll
setcmykcolor
}bd
/:d
{
pop pop pop
/pattransf load settransfer
pop pop setcolorpattern
}bd
/:c
/:d ld
docolorscreen not endnoload
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_patterns_level2
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
%%EndFile
level2 not endnoload
level2 startnoload
%%BeginFile: adobe_psp_level1_basicimages
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$i false def
/flipinvert
statusdict begin
version cvr 47.0 lt
end
def
/iw Z
/ih Z
/im_save Z
/setupimageproc Z
/polarity Z
/smoothflag Z
/$z Z
/bpc Z
/smooth_moredata Z
/datatype Z
/:f
{
/im_save save store
/datatype xs
$i flipinvert
and
xor
/polarity xs
/smoothflag xs
:T
scale
/$z exch string store
/bpc xs
/ih xs
/iw xs
/smoothflag
smoothflag
bpc 1 eq and
smoothflag and
userdict/sc_smooth known and
vmstatus pop exch pop iw 3 mul sub 1000 gt and
iw 4 mul 7 add 8 idiv 4 mul 65535 le and
store
smoothflag{
iw
ih
$z
iw 7 add 8 idiv 4 mul string
iw 4 mul 7 add 8 idiv 4 mul string
true
false
sc_initsmooth
/iw iw 4 mul store
/ih ih 4 mul store
}if
/setupimageproc datatype 0 eq datatype 1 eq or{
smoothflag{
{
[
/smooth_moredata cvx[
currentfile
$z
{readstring readhexstring}datatype get
/pop cvx
]cvx[
$z
]cvx/ifelse cvx
/sc_smooth cvx
/smooth_moredata/exch cvx/store cvx
]cvx bind
/smooth_moredata true store
dup exec pop dup exec pop
}
}{
{
[
currentfile
$z
{readstring readhexstring}datatype get
/pop cvx
]cvx bind
}
}ifelse
}{
(error, can't use level2 data acquisition procs for level1)print flush stop
}ifelse
store
}bd
/:j{im_save restore}bd
/:g
{
1 setgray
0 0 1 1 rF
0 setgray
iw ih polarity[iw 0 0 ih 0 0]setupimageproc
imagemask
}bd
/:h
{
setrgbcolor
0 0 1 1 rF
setrgbcolor
iw ih polarity[iw 0 0 ih 0 0]setupimageproc
imagemask
}bd
/:i
{
setrgbcolor
iw ih polarity[iw 0 0 ih 0 0]setupimageproc
imagemask
}bd
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_level2_basicimage
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$j 9 dict dup
begin
/ImageType 1 def
/MultipleDataSource false def
end
def
/im_save Z
/setupimageproc Z
/polarity Z
/smoothflag Z
/bpc Z
/ih Z
/iw Z
/datatype Z
/:f
{
/im_save save store
/datatype xs
datatype 0 lt datatype 4 gt or{
(error, datatype out of range)print flush stop
}if
/setupimageproc{
{
currentfile
}
{
currentfile 0(%ADOeod)/SubFileDecode filter/ASCIIHexDecode filter
}
{
currentfile/RunLengthDecode filter
}
{
currentfile/ASCII85Decode filter/RunLengthDecode filter
}
{
currentfile/ASCII85Decode filter
}
}datatype get store
{
[1 0]
}{
[0 1]
}ifelse
/polarity xs
/smoothflag xs
:T
scale
pop
/bpc xs
/ih xs
/iw xs
$c setcolorspace
}bd
/:j{im_save restore}bd
/:g
{
1 G
0 0 1 1 rF
0 G
$j dup begin
/Width iw def
/Height ih def
/Decode polarity def
/ImageMatrix[iw 0 0 ih 0 0]def
/DataSource setupimageproc def
/BitsPerComponent 1 def
/Interpolate smoothflag def
end
imagemask
}bd
/:h
{
:F
0 0 1 1 rF
:F
$j dup begin
/Width iw def
/Height ih def
/Decode polarity def
/ImageMatrix[iw 0 0 ih 0 0]def
/DataSource setupimageproc def
/BitsPerComponent 1 def
/Interpolate smoothflag def
end
imagemask
}bd
/:i
{
:F
$j dup begin
/Width iw def
/Height ih def
/Decode polarity def
/ImageMatrix[iw 0 0 ih 0 0]def
/DataSource setupimageproc def
/BitsPerComponent 1 def
/Interpolate smoothflag def
end
imagemask
}bd
%%EndFile
level2 not endnoload
%%BeginFile: adobe_psp_smooth
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/junk Z
/$z Z
userdict/sc_smooth known not
save
systemdict/eexec known
systemdict/cexec known and{
countdictstack mark
false
<1861AEDAE118A9F95F1629C0137F8FE656811DD93DFBEA65E947502E78BA12284B8A58EF0A3
2E272778DAA2ABEC72A84102D591E11D96BA61F57877B895A752D9BEAAC3DFD7D3220E2BDE7
C036467464E0E836748F1DE7AB6216866F130CE7CFCEC8CE050B870C11881EE3E9D70919>
{eexec}stopped{
cleartomark
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse
false
}{
{cleartomark pop true}{cleartomark pop false}ifelse
}ifelse
}{false}ifelse
exch restore and
level2 not and
vmstatus exch sub exch pop 15000 gt and
{
currentfile eexec
}{
/junk save store
/$z 4795 string store
currentfile $z readhexstring pop pop
{
currentfile $z readline not
{
stop
}if
(%ADOendeexec)eq
{
exit
}if
}bind loop
junk restore
}ifelse
bc89dd93a62e673f17beaf79fc308801f2548cc0804b6e7e7211db7d71dcacee61d4db4b
cc4c192da6ec1c558421396b4eb1944f656db0dda1626374294528747cd1ee8e10b15c5c
60b4182960a4687e44c92cff1b5d29a6b48ab8be9f8115c642241a4901d75a2b2ba55d27
0620b884f37689503d9c3a603e89a1f7de7447e2b23145af7219c13aad065fe60313c4f1
7d1959166b8493e26ee828d6e76ac472747b40432571d2d101dd3e8696849eb59b70c328
a0d1978eea220593cb3024a3cdecb89dcfa2d5ab3990b0bbc1a0c3351bfbd614917e7ede
ef79cb8843325e4a81a80e809250ce8cf7297b5c684b53a56538b373cb085ec7436f82a2
e48b4789de5ac368defd97ca81e1e7a584b7e40bcf852c3d4f6cc387172784295be04ca2
0793987d64efc3cec658553cbe610fa9ebfe74341192cfcc6ecfd0a4843b740cbfd5ba5f
4c076050268792190676f76cacc26be628f8ae1c48419803c2a5108f6b1bec6664b06248
6a083d8092cb3c82b90bded3eed0387490fe971d6614c5d0259a846d43abb22e0dc06aa5
6911c9f53cf5524e138662db3fa2e6cdfe30873d916ed70e4962ed78b32491bee9a20a36
8be439dc6245d5751e6899e2214c07df7a87b66b1aba9a8196db2add3d3c4e3057dc9a9c
dae1cc7884a6f29a5568b1ad64143fd479b8b4a8fbef4db889fe42edaadef0276f79d192
245b64299ad347b03ecf887db96b16fc319a1c7e59718ac7ff7bc7bafd4523bd88fd5ba8
1730817c2f529d3060cb591fe565d778fc989e7e14f7c2a7b85785c53af35fbe738da838
cdf80c9a048f4d7dbd58e2c9f527d2d3b2ad633da1005036298ec8533b94f84e9246289c
f03336f4a7f657afbcbdd7b5e16187273c459f5626a5667db4fbf8b85ef2363ee6d89bd0
f402408cae3065fecf609fa290047e9656d853739f33b06d64a4a57f66f37f7da39fa89d
28962fddb76e8d05683c090664175dda6a1be57698894fd9f0f9d8da411b3f33b3b9c8d4
50a27c37e4a0e503418cd6c02cf60fa7fbb6f6f3e7509a45a54343ba3361168d895a27eb
6923ab65b019b188fe21c804629f2be2a20e6417841b4c8d5d68fb38db71ac7174e68d03
0611ea29f9ca740d0aef611a1f0003e1d136a539ed28d956a2a36bc7ae0ee290bd818175
3537e39be7777de1004964c769ec7e933b17c852cbd2da4cc100d9d3e141106eea9cc29a
b1c910ead768527a02711ac035262c93a4548f67fb501a971e0a86d819547bac7c09f5fb
aec454c9c7276f5e317cc8fd8876e7f90dc128f03052a756cf6db9876fe5a31c9d6a139b
d46eb34272ff7992b86c88420ab07e801a39e91afb3c048b40913dc2d984e0c347b3daea
4e1ce5a15c8df7b65a0b89136f6a48a92b8f096d708a2bea4390f0454dcc3d9cd4f6b24d
8f06faa17694172213c481ceaa1f7fe33f1389142f017874560e1b0272385585fc5681de
4a909566cdcf9af80dfde23e9ad55083bb9422ae57b99bf3d5f081a4cbe0172f236abbb5
06fbbee46987543fc545e81ecd61477fadec55640ce9e41f8cbcd409f0e64c1b83193885
dffe0c4c383de781943a2a73ad1e0cbee0dccdbc3bbbc010f3adc8aa597210cae47003d2
952b8e874e1dee33ef1a78180a3ef6b22e1a66385147f550678510b15ed1a02fc85e736e
818f03b188d6a23f070e5720195a8e4c295d27129a5adedc1a95145d5e758649acebaec5
3d14cbc9feaf3abcecc976c03d00ea640c3b852baad7d8ab28c593cb74cbe2e98ea0b35c
8827eb3def1a79af837fb8468b2042acaf226b1f6d11abab2884f3fe49772325d273f893
82badc7b3b26e43c3f6170eec2c607cbe22225b9469de5509d31bafa1729c416089aeb1b
3b5477a985acdce47557bf29130d6232d2003a4314bf46c9c9383c437f1f2597f361405a
b92f371458f13d8d400d78140df094a559bec9d240993f2d811f0d4eba7678773bb6c765
caf33bc77c0e2e156538b04423e513cb933d9ac8cec0444e0309bdb5c70f02a71f49cc99
7b8d98ecbaad1d53daa2811b07df94b2ec574326d760892fd1886703eed816bf2db96bbe
f2ea914cef918d251a1203d93d549aa438a1309ce179c233111175d9e8bb6064dc2d52db
0976650b1d5d194eab20ed3e500db4410852390e69e56e4ab71e97a87680fa620d8d32d5
b93e40cdec16ed20af734e792ddb938b8a65ccb811f369cc1e9e8819e76d7908e310e5ea
018c05d2db74abc0e8e5da75431324a3ba298820009d6fcc9d5693ec900aab8745112928
ef24a8da713dc8ecebb84394f0058335dafb459971cf20e8c15d40f35643a0c56c95bd86
faefe8e251fb9f79a6db5e481032f812454181a73375ab1efe575d745fe7073adaf60865
e992c7f5e969f4e267b323bb022a7f8b1b480a97ca735212b4d47aff196f37fa177c765a
f03487b323f2ce11314906d04dcb0c3c770ea581fcff70cc1553b4615a6d8dfd69001581
77a9fcc035cb44d630b99cdae09de33c09c9ab8bcc021e72fd88cccf3a9cd578a34a3f96
ae636047fc5f468d22cea0cf509e1588563c7e25d4f0d41b30373dfd1cb69a8e37a51a57
5d1cab7a3c9d04f3d388db04ed78d3e81e7b53dffa94507df197e467565d4169fc996e46
671f62236b00f4e9dc36bd3709400771ed4b335bcdb3c2974c0a00c03717ed980e98dc1b
2473f38bd1e1fe4da0fea5169aa1e06054315579a5898bbe3c9fabb829485562e9d25248
142575f3bfd311dde2297c7883b0b9ed0c3ffe3358880c8c77be01cd6408dc743634006f
d888ffc1e4562ed1166bbdcbe971a269afae52a8a384eaf8880433a053bd072accc62214
04bb18e98b9cebb3c05e56216b56174bd432e41b8c82c82d7114adb16ad941fe87c0657e
03203fc26ed43096e7e262a8f86fc07506b3ffcb5888bcbd3482977716a337a54c0649c1
2579b4322afcb34486a5593fb9d58cb16a0368f593c3c52608bf31c6a3b48a04be605c60
b15ea2670c3e89d293ba065db7d5471d3f56d7ffe3ba48814d5a1f4a81d9865d1f2340cc
3e5ced23ce6827065312bb9ae13e0d3cc53e79aaa764a229be203d1b45963d17e983f72a
f97bac50984a360768f459585745d94f7b77457bb8bc802332aef4e65ae7200d94750aea
b4ede71ade6ee000cf122866f514747784f7e497a6e48b82467515f474d38ec690bac331
d8246eacf2b10d7f1b1b74b1020843b3d934115e23fc1845e5161f5d494badc22f5e68fa
4d1cb3933ac6467e3cc58099adcf4832c156ce1714ee44c6368dee76483e47260dda3af1
97f938530475ede86f1b7ccfeeaeab2518f1c05ba983ada09c069d0f5e7e34c7832ec4c1
9e68e78a51e25540cadf7b64d1eca1141816aba211cea9b8aa4ff9542f26cd6adabe28bc
03c20d2fded392cc160e5ca6f8216611e41b504567927a560537a57e09dd8db552fab25d
59318ad3f7e6b6e10ad49fbb4caf8d5205d494666f5c51a599df65d2c89fe65c92ec733d
78205e987659e02d244684cff18d2b6f1d0d33ccae32339b840246a50cccebc952c7e705
d30fcb5dc94da2eab7ba3c7f9fe536eba4971a8b8e0744a0a094d531ae611042c347fac7
3b770c445121464594a2c5eb9d923f0fe2f33500b403e4b5daf64acd4a4a89d8469be57f
a393a844e082dec5af117b77e7be0eb6474eb47b00503bc68c809f0de147f7d0f1f68798
89b1781d09c0dc12c882dba17e23de1311321fa851a94c51a8801a4bf7c888e4805b1fc8
2fe638aaabb33b13ab0ae024b0b767108a068d562ebd11a91ad8706df9360a914927b752
ddb4d176f72661d12a6349a58a8d688b311ec8e1797b011dbb47760765b88a651b42cace
e60730553040e64711fff10e3285171ed1dae0545b6cfe3503b24f9d135d04d467372b11
ef3c1b9aa7c4272e281df0b6e7cc7e7984b00cbda5bbd81c939213c32176b5e062660e54
8943afe1e39a38cb171d7591c01ac4eea3963572ce008d48727ec8efc0ead1cc4c86d9ce
3d9d5c21f58a41359f2599d4cb15762366c3d3c5b7abe7970a312ea2fb14f5e74f78284a
624fe71f362f4b4d892ac6a87cf8794982964aa0e6153477da1484d35787edb8a2aad90b
3cada91934c118098617e1254d834d86154e6585628663741ae0d7bf339b168d4acec9da
94c12bd5449ecf97a7483e27c47160f838ac076f79b82fc0bd8a3b0011bd0bbb2e6a38ff
a7a63daf463cacb10f56c459bec699ecbcc52be2e5c57bd013c4682b01199cdd89ad2bd1
8584b05e6178c2d6fdc6e19a375ae4a91428d4c0aff2d07e5b6d159351475e57419f2ec8
a343d209e36ddb078027e03d4f179fbf675373c485be1a147ffda00821aba79187471ef9
55f197d6bf0f442244d5b4d1e8392ba11965b6bfa8db30c0e48984883a9b6ec840a9b6fc
93df40c82906dac253e0afd633c336cedac8dd7213e4766761ec3cf3a8aacb1fe1bf2d61
d64c5addaf1d836e199df0ef5e61029f1e6a28c17eba0d8bdf81f358058086ee365b4127
a1bb4b273b84a825fdcc4ebd3abdd7ca243788e1eb48aed96626bd2f2ef8a2e1a082acb6
64b5af60797d9ad021ac616e4d65c1ddbc4a74928b7ab089a10db9312a18d682cccce0b5
53e2f454af0ca21f59b96ee7d71a97db2607dba56daad1bef91c66c44f6fc53d2b4bfebb
876cd478243a9454e8864f65067787b96cb4b3f92a7c90f959ce3324c94590348a8d2709
f4feea7adaf4c56199da203d8f4b9866fe7362d86401b0cfe1913476eb9f7f4d4df0f2f3
8e7ee153c99dda1ccc6eec2cd1b76c52c553ceca04ad525fc17a4a7af197d158c02e6469
cd7e3be4b934ed0e1499153bb98b4363159a60c9ce892af085511cfc31cfa7fa1baf0e22
d138b6a54e93532486b633024d18afd6a610ede93b2a554abc44da890144ff060d1db1e3
e57df15229afe56c49e3c7f68e6ef0221942945f3c6675b498e94fd834bfcd869bba0a90
179d3eb859ea6b749871a62c0e8513ab69b63e35b5bf8060f25442a6670293cee9a86928
997a54929695b3eda64483ecdf8cfb2732729a652e08a3aa82ecb5ac45aad7227f7f7ee9
1d8c222933cfac18561f27939ca29fbf5eebd634555856519cd2f1573281514aff3c6091
5142196c57177ef2086958fbb3fae8f448118c435ae82b7b17a8445e0806b8442e1f9347
c7940af7342dc3d5638958f9a3952768f6c244920e281a163cc87fbdbec99080b8d7e24b
9e35e152aa600a6a4faebb140857e536bb819f4cd9992b9dfaa60ac33a8ff2ed14c791e7
0290e5f6d810488d672224bfeeca6907b41f46489091322b6830a8424fa2a0061151ee61
ef1cfb1a83c4538025605554ed3c734fd8e39bd6da4af6e5a57593da83fd9f511af49b84
5ef7cb34495b54070ea204daff2e266f5a1619928e73de256979f4afdeb42b889064461b
f7263f82a2c233d113de9ba4bc415ed68241bc3862a34050479aa86eabb80cef561ad640
80be73a5da7fbb4905bee2fbbbc7c85a5512c6e747a5eb18942e47c17e5da1127910d8e6
ed7a37d3b846cfda6b0adc8dd594ffe14995b32babcb4d99869090abd57e8ab397e33406
2c7790b673d184738a9e9d578f54ccfcdcc46200d2bb07c5dea46261680dccb4f011428f
289c2049ff81040685aec9ae8c9016c491d02f14f2c4fd79e053147520d59d034c470569
e602c662af4aafc5d2fb0d3af218b26b769ac25fe9999ba3c2eaa8a9ffa93a6f4b743608
f5797772e53cfd2f3c6a45b1a843fcfc6aedc66bc35db923bea051301fa5a959a11eb0b6
f02f7c4e6b004ce548b77e032e36f93cce55f507d5892b32da81a7ce5016326aacd06dd5
0a1b3c615abf06ab6eb1bd643f3c3d7fbc9e18bc11ee29b2113d5c458f20713d3b811da8
883f8b95557ffb1eaf229b89fc98f7623ff9140bcebc6b8677ad7d99373e5757292a3d6a
83a5c053e61224b4dc14e42626637e714c514092e569101ce75f0533605802455f03bf0e
336c0f9788569f3b2b4b79c01628abc3b243decb3c55e1273ff7b83ae61d936bd413580f
3f279437da1fdad63d785ff7bedd815a6d6e4964231adf28640794c33a30686e5f60fe78
c5e87ffd27a84452dc111bbd7c2d0b4e7781c102547f5533ea676a33b8d58918f197a8cd
a1e90be9620e43af9d5b07ee2ae5d702683c9a6973fdaafaec74d62cb29b18272b3f8840
a1a8372ddf4bfee1b7ea037ed41fdc2cb1cb4da3ccb3e121354db0d5bc83c4d4c323083d
75dd32c20607f81fcd221751c5af21775659e804b9941cf6fbe4c8846be20e546f88a588
7bbff8cab4489883fdd2be613313174c015d69eee40eee4242e173aaac87585597feff69
a64f4ef2dbf00dbfe9ad946892816711c7199d4068d8494ba1df614d9bbe1c7b63996e98
12b913966a42a41be0dc85feff232e625f4dd0b01cb7674b232e89d5da143f9d12a9d8a9
aa8b62038721ad9e4a6438cb842d1828458fc25e5b0b6ea795f7a14d2f55f1451c615f4c
211469611d1348952e655e1d93188c0dc6dd719630a42fe5baf8cde0c03b1e0aa76a2cd4
fec86a3042f8a2ea5af50a43af52c1217f6be45b152e47d165b89a54ede432f1eb3ed3ef
428c228dd53c44db15541704b99413b465ff65ca0e9d6be932a18eca713c71ba7dc89238
1e0c2c62cf8567df2f997e58ed2c1ffe17d2fc96db942ce3950e28d1287b85ff7d07adb9
059629dc89b9b0ed2213e45d8a20188cae18f3391887387bf8ba0a12fe21fa0aa521bfa3
718f7abe76388e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%ADOendeexec

%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
%%BeginFile: adobe_psp_dashes
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/:q/setdash ld
/:r{
np
:M
:L
stroke
}bd
/nodash[]def
/qdenddash
{
nodash 0 setdash
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion LetterSmall
level2 {
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/lettersmall where {pop lettersmall} {letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(shaw)setjob
/pT[1 0 0 -1 30 761]def/mT[1 0 0 -1 30 761]def
initQDpatterns
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Palatino-Bold
%%IncludeFont: Palatino-Roman
%%IncludeFont: Palatino-Italic
%%IncludeFont: Palatino-BoldItalic
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Helvetica-Oblique
%%IncludeFont: Courier-Bold
%%IncludeFont: NewCenturySchlbk-Bold
/f0_1/Palatino-Bold :mre
/f0_18 f0_1 18 scf
/f0_14 f0_1 14 scf
/f0_12 f0_1 12 scf
/f1_1/Palatino-Roman :mre
/f1_14 f1_1 14 scf
/f1_13 f1_1 13 scf
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1/Palatino-Italic :mre
/f2_12 f2_1 12 scf
/f2_10 f2_1 10 scf
/f3_1/Palatino-BoldItalic :mre
/f3_12 f3_1 12 scf
/f4_1/Helvetica :mre
/f4_176 f4_1 176 scf
/f4_136 f4_1 136 scf
/f4_18 f4_1 18 scf
/f4_14 f4_1 14 scf
/f4_8 f4_1 8 scf
/f4_7 f4_1 7 scf
/f4_6 f4_1 6 scf
/f5_1/Helvetica-Bold :mre
/f5_176 f5_1 176 scf
/f5_128 f5_1 128 scf
/f5_18 f5_1 18 scf
/f5_14 f5_1 14 scf
/f5_8 f5_1 8 scf
/f7_1/Helvetica-Oblique :mre
/f7_18 f7_1 18 scf
/f7_8 f7_1 8 scf
/f8_1/Courier-Bold :mre
/f8_288 f8_1 288 scf
/f9_1/NewCenturySchlbk-Bold :mre
/f9_9 f9_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(shaw; page: 1 of 42)setjob
%%EndPageSetup
gS 0 0 552 730 rC
88 132 :M
f0_18 sf
4.574 .457(An Introduction to Software Architecture)J
178 198 :M
f1_14 sf
1.353 .135(David Garlan and Mary Shaw)J
235 214 :M
.451 .045(January 1994)J
238 243 :M
f1_10 sf
.196(CMU-CS-94-166)A
197 301 :M
f1_12 sf
1.429 .143(School of Computer Science)J
197 315 :M
1.843 .184(Carnegie Mellon University)J
203 329 :M
.277 .028(Pittsburgh, PA  15213-3890)J
57 354 :M
f1_10 sf
.803 .08(Also published as \322An Introduction to Software Architecture,\323 )J
f2_10 sf
.94 .094(Advances in Software Engineering)J
64 366 :M
1.193 .119(and Knowledge Engineering, Volume I,)J
f1_10 sf
1.118 .112( edited by V.Ambriola and G.Tortora, World Scientific)J
186 378 :M
.119 .012(Publishing Company, New Jersey, 1993.)J
116 404 :M
.436 .044(Also appears as CMU Software Engineering Institute Technical Report)J
194 416 :M
1.34 .134(CMU/SEI-94-TR-21, ESC-TR-94-21.)J
184 468 :M
.685 .068(\2511994 by David Garlan and Mary Shaw)J
56 518 :M
f1_9 sf
.212 .021(This work was funded in part by the Department of Defense Advanced Research Project Agency under grant)J
56 528 :M
.582 .058(MDA972-92-J-1002, by National Science Foundation Grants CCR-9109469 and CCR-9112880, and by a grant)J
56 538 :M
.589 .059(from Siemens Corporate Research.  It was also funded in part by the Carnegie Mellon University School of)J
56 548 :M
-.023(Computer Science and Software Engineering Institute \(which is sponsored by the U.S. Department of Defense\).)A
56 558 :M
.164 .016(The views and conclusions contained in this document are those of the authors and should not be interpreted)J
56 568 :M
.478 .048(as representing the official policies, either expressed or implied, of the U.S. Government, the Department of)J
56 578 :M
-.009(Defense, the National Science Foundation, Siemens Corporation, or Carnegie Mellon University.)A
56 635 :M
f0_12 sf
.17(Keywords:)A
f1_12 sf
.648 .065(  Software architecture, software design, software engineering)J
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(shaw; page: 2 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
283 246 :M
f0_12 sf
-.138(Abstract)A
86 280 :M
f1_12 sf
1.026 .103(As the size of software systems increases, the algorithms and data structures of)J
86 294 :M
3.414 .341(the computation no longer constitute the major design problems.  When)J
86 308 :M
3.542 .354(systems are constructed from many components, the organization of the)J
86 322 :M
3.884 .388(overall system\321the software architecture\321presents a new set of design)J
86 336 :M
2.948 .295(problems.  This level of design has been addressed in a number of ways)J
86 350 :M
2.492 .249(including informal diagrams and descriptive terms, module interconnection)J
86 364 :M
3.034 .303(languages, templates and frameworks for systems that serve the needs of)J
86 378 :M
1.463 .146(specific domains, and formal models of component integration mechanisms.)J
86 426 :M
2.393 .239(In this paper we provide an introduction to the emerging field of software)J
86 440 :M
2.82 .282(architecture.  We begin by considering a number of common architectural)J
86 454 :M
1.556 .156(styles upon which many systems are currently based and show how different)J
86 468 :M
1.182 .118(styles can be combined in a single design.  Then we present six case studies to)J
86 482 :M
1.577 .158(illustrate how architectural representations can improve our understanding of)J
86 496 :M
3.666 .367(complex software systems.  Finally, we survey some of the outstanding)J
86 510 :M
.884 .088(problems in the field, and consider a few of the promising research directions.)J
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(shaw; page: 3 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 87 :M
f0_18 sf
1.291(Contents)A
86 167 :M
f0_12 sf
(1.)S
122 167 :M
.154(Introduction)A
195 167 :M
(.....................................................................................................)S
193 167 :M
( )S
500 167 :M
(2)S
86 189 :M
(2.)S
122 189 :M
.639 .064(From Programming Languages to Software Architecture)J
435 189 :M
(.....................)S
434 189 :M
( )S
500 189 :M
(3)S
86 208 :M
f2_10 sf
.333(2.1.)A
131 208 :M
3.292 .329(High-level Programming Languages)J
297 208 :M
.508(...................................................................)A
295 208 :M
( )S
500 208 :M
(3)S
86 225 :M
.333(2.2.)A
131 225 :M
4.329 .433(Abstract Data Types...........................................................................................)J
225 225 :M
( )S
500 225 :M
(4)S
86 242 :M
.333(2.3.)A
131 242 :M
4.351 .435(Software Architecture)J
234 242 :M
.506(........................................................................................)A
233 242 :M
( )S
500 242 :M
(4)S
86 262 :M
f0_12 sf
(3.)S
122 262 :M
.35 .035(Common Architectural Styles......................................................................)J
288 262 :M
( )S
500 262 :M
(5)S
86 281 :M
f2_10 sf
.333(3.1.)A
131 281 :M
2.563 .256(Pipes and Filters)J
210 281 :M
.505(................................................................................................)A
208 281 :M
( )S
500 281 :M
(6)S
86 298 :M
.357 .036(3.2. )J
131 298 :M
2.627 .263(Data Abstraction and Object-Oriented Organization)J
369 298 :M
.512(...........................................)A
367 298 :M
( )S
500 298 :M
(8)S
86 315 :M
.357 .036(3.3. )J
131 315 :M
3.464 .346(Event-based, Implicit Invocation)J
282 315 :M
.507(........................................................................)A
280 315 :M
( )S
500 315 :M
(9)S
86 332 :M
.357 .036(3.4. )J
131 332 :M
3.959 .396(Layered Systems)J
210 332 :M
.505(................................................................................................)A
208 332 :M
( )S
500 332 :M
(11)S
86 349 :M
.357 .036(3.5. )J
131 349 :M
.738(Repositories)A
189 349 :M
.505(.......................................................................................................)A
188 349 :M
( )S
500 349 :M
(12)S
86 366 :M
.333(3.6.)A
131 366 :M
2.84 .284(Table Driven Interpreters)J
249 366 :M
.506(...................................................................................)A
247 366 :M
( )S
500 366 :M
(13)S
86 383 :M
.333(3.7.)A
131 383 :M
4.546 .455(Other Familiar Architectures.............................................................................)J
267 383 :M
( )S
500 383 :M
(14)S
86 400 :M
.357 .036(3.8. )J
131 400 :M
4.588 .459(Heterogeneous Architectures...............................................................................)J
261 400 :M
( )S
500 400 :M
(15)S
86 420 :M
f0_12 sf
(4.)S
122 420 :M
-.117(Case Studies)A
192 420 :M
(......................................................................................................)S
191 420 :M
( )S
500 420 :M
(16)S
86 439 :M
f2_10 sf
.357 .036(4.1. )J
131 439 :M
1.445 .144(Case Study 1: Key Word in Context)J
291 439 :M
.507(.....................................................................)A
289 439 :M
( )S
500 439 :M
(16)S
86 456 :M
.357 .036(4.2. )J
131 456 :M
2.075 .208(Case Study 2: Instrumentation Software)J
312 456 :M
.508(..............................................................)A
310 456 :M
( )S
500 456 :M
(22)S
86 473 :M
.357 .036(4.3. )J
131 473 :M
1.576 .158(Case 3:  A Fresh View of Compilers)J
291 473 :M
.507(.....................................................................)A
290 473 :M
( )S
500 473 :M
(26)S
86 490 :M
.357 .036(4.4. )J
131 490 :M
1.925 .192(Case 4:  A Layered Design with Different Styles for the Layers)J
417 490 :M
.519(...........................)A
415 490 :M
( )S
500 490 :M
(28)S
86 507 :M
.333(4.5.)A
131 507 :M
1.68 .168(Case 5: An Interpreter Using Different Idioms for the Components)J
426 507 :M
.522(........................)A
425 507 :M
( )S
500 507 :M
(30)S
86 524 :M
.333(4.6.)A
131 524 :M
2.343 .234(Case 6: A Blackboard Globally Recast as Interpreter)J
369 524 :M
.512(...........................................)A
367 524 :M
( )S
500 524 :M
(33)S
86 544 :M
f0_12 sf
(5.)S
122 544 :M
.38 .038(Past, Present, and Future)J
261 544 :M
(...............................................................................)S
259 544 :M
( )S
500 544 :M
(36)S
86 566 :M
.114(Acknowledgements)A
198 566 :M
(....................................................................................................)S
197 566 :M
( )S
500 566 :M
(37)S
86 588 :M
-.15(Bibliography)A
159 588 :M
(.................................................................................................................)S
157 588 :M
( )S
500 588 :M
(37)S
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(shaw; page: 4 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(1)S
86 87 :M
f0_18 sf
3.836 .384(List of Figures)J
86 165 :M
f2_12 sf
(1)S
108 165 :M
2.687 .269(Pipes and Filters)J
201 165 :M
(.......................................................................................................)S
199 165 :M
( )S
512 165 :M
(7)S
86 184 :M
(2)S
108 184 :M
.902 .09(Abstract Data Types and Objects............................................................................)J
282 184 :M
( )S
512 184 :M
(8)S
86 203 :M
(3)S
108 203 :M
4.168 .417(Layered Systems)J
201 203 :M
(.....................................................................................................)S
199 203 :M
( )S
506 203 :M
(11)S
86 222 :M
(4)S
108 222 :M
5.186 .519(The Blackboard)J
195 222 :M
(.......................................................................................................)S
194 222 :M
( )S
506 222 :M
(13)S
86 241 :M
(5)S
108 241 :M
.06(Interpreter................................................................................................................)A
168 241 :M
( )S
506 241 :M
(14)S
86 260 :M
(6)S
108 260 :M
2.734 .273(KWIC - Shared Data Solution)J
273 260 :M
(.............................................................................)S
272 260 :M
( )S
506 260 :M
(18)S
86 279 :M
(7)S
108 279 :M
2.244 .224(KWIC - Abstract Data Type Solution)J
309 279 :M
(.................................................................)S
308 279 :M
( )S
506 279 :M
(19)S
86 298 :M
(8)S
108 298 :M
3.598 .36(KWIC - Implicit Invocation Solution)J
315 298 :M
(...............................................................)S
313 298 :M
( )S
506 298 :M
(20)S
86 317 :M
(9)S
108 317 :M
2.545 .254(KWIC - Pipe and Filter Solution)J
288 317 :M
(........................................................................)S
286 317 :M
( )S
506 317 :M
(20)S
86 336 :M
(10)S
108 336 :M
3.532 .353(KWIC - Comparison of Solutions)J
294 336 :M
(......................................................................)S
293 336 :M
( )S
506 336 :M
(21)S
86 355 :M
(11)S
108 355 :M
1.964 .196(Oscilloscopes - An Object-oriented Model........................................................)J
336 355 :M
( )S
506 355 :M
(23)S
86 374 :M
(12)S
108 374 :M
2.895 .29(Oscilloscopes - A Layered Model)J
288 374 :M
(........................................................................)S
286 374 :M
( )S
506 374 :M
(24)S
86 393 :M
(13)S
108 393 :M
1.536 .154(Oscilloscopes - A Pipe and Filter Model............................................................)J
324 393 :M
( )S
506 393 :M
(24)S
86 412 :M
(14)S
108 412 :M
2.009 .201(Oscilloscopes - A Modified Pipe and Filter Model..........................................)J
378 412 :M
( )S
506 412 :M
(25)S
86 431 :M
(15)S
108 431 :M
4.897 .49(Traditional Compiler Model)J
267 431 :M
(...............................................................................)S
266 431 :M
( )S
506 431 :M
(26)S
86 450 :M
(16)S
108 450 :M
3.753 .375(Traditional Compiler Model with Shared Symbol Table)J
417 450 :M
(.............................)S
415 450 :M
( )S
506 450 :M
(26)S
86 469 :M
(17)S
108 469 :M
4.955 .495(Modern Canonical Compiler)J
270 469 :M
(..............................................................................)S
268 469 :M
( )S
506 469 :M
(27)S
86 488 :M
(18)S
108 488 :M
1.934 .193(Canonical Compiler, Revisited...........................................................................)J
279 488 :M
( )S
506 488 :M
(27)S
86 507 :M
(19)S
108 507 :M
1.289 .129(PROVOX - Hierarchical Top Level.....................................................................)J
297 507 :M
( )S
506 507 :M
(28)S
86 526 :M
(20)S
108 526 :M
2.832 .283(PROVOX - Object-oriented Elaboration)J
324 526 :M
(............................................................)S
322 526 :M
( )S
506 526 :M
(29)S
86 545 :M
(21)S
108 545 :M
3.683 .368(Basic Rule-Based System)J
246 545 :M
(......................................................................................)S
245 545 :M
( )S
506 545 :M
(31)S
86 564 :M
(22)S
108 564 :M
1.985 .199(Sophistocated Rule-Based System......................................................................)J
294 564 :M
( )S
506 564 :M
(32)S
86 583 :M
(23)S
108 583 :M
1.843 .184(Simplified Rule-Based System............................................................................)J
276 583 :M
( )S
506 583 :M
(33)S
86 602 :M
(24)S
108 602 :M
.448(Hearsay-II)A
165 602 :M
(.................................................................................................................)S
164 602 :M
( )S
506 602 :M
(34)S
86 621 :M
(25)S
108 621 :M
3.271 .327(Blackboard View of Hearsay-II)J
276 621 :M
(............................................................................)S
275 621 :M
( )S
506 621 :M
(35)S
86 640 :M
(26)S
108 640 :M
3.118 .312(Interpreter View of Hearsay-II)J
276 640 :M
(............................................................................)S
274 640 :M
( )S
506 640 :M
(36)S
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(shaw; page: 5 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(2)S
86 94 :M
f0_14 sf
.5(1.)A
122 94 :M
-.168(Introduction)A
86 119 :M
f1_12 sf
1.529 .153(As the size and complexity of software systems increases, the design problem)J
86 133 :M
1.368 .137(goes beyond the algorithms and data structures of the computation: designing)J
86 147 :M
1.146 .115(and specifying the overall system structure emerges as a new kind of problem.)J
86 161 :M
3.51 .351(Structural issues include gross organization and global control structure;)J
86 175 :M
1.634 .163(protocols for communication, synchronization, and data access; assignment of)J
86 189 :M
1.861 .186(functionality to design elements; physical distribution; composition of design)J
86 203 :M
1.241 .124(elements; scaling and performance; and selection among design alternatives.)J
108 227 :M
1.925 .193(This is the software architecture level of design.  There is a considerable)J
86 241 :M
3.268 .327(body of work on this topic, including module interconnection languages,)J
86 255 :M
.896 .09(templates and frameworks for systems that serve the needs of specific domains,)J
86 269 :M
2.629 .263(and formal models of component integration mechanisms.  In addition, an)J
86 283 :M
.933 .093(implicit body of work exists in the form of descriptive terms used informally to)J
86 297 :M
1.212 .121(describe systems.  And while there is not currently a well-defined terminology)J
86 311 :M
2.415 .241(or notation to characterize architectural structures, good software engineers)J
86 325 :M
4.405 .44(make common use of architectural principles when designing complex)J
86 339 :M
3.47 .347(software.  Many of the principles represent rules of thumb or idiomatic)J
86 353 :M
1.973 .197(patterns that have emerged informally over time.  Others are more carefully)J
86 367 :M
.837 .084(documented as industry and scientific standards.)J
108 391 :M
.854 .085(It is increasingly clear that effective software engineering requires facility in)J
86 405 :M
2.492 .249(architectural software design.  First, it is important to be able to recognize)J
86 419 :M
2.771 .277(common paradigms so that high-level relationships among systems can be)J
86 433 :M
1.225 .123(understood and so that new systems can be built as variations on old systems.)J
86 447 :M
.746 .075(Second, getting the right architecture is often crucial to the success of a software)J
86 461 :M
1.871 .187(system design; the wrong one can lead to disastrous results.  Third, detailed)J
86 475 :M
5.129 .513(understanding of software architectures allows the engineer to make)J
86 489 :M
1.525 .152(principled choices among design alternatives.  Fourth, an architectural system)J
86 503 :M
2.273 .227(representation is often essential to the analysis and description of the high-)J
86 517 :M
.882 .088(level properties of a complex system.)J
108 541 :M
4.472 .447(In this paper we provide an introduction to the field of software)J
86 555 :M
1.169 .117(architecture.  The purpose is to illustrate the current state of the discipline and)J
86 569 :M
2.037 .204(examine the ways in which architectural design can impact software design.)J
86 583 :M
1.735 .173(The material presented here is selected from a semester course, Architectures)J
86 597 :M
2.062 .206(for Software Systems, taught at CMU by the authors [1].  Naturally, a short)J
86 611 :M
1.757 .176(paper such as this can only briefly highlight the main features of the terrain.)J
86 625 :M
1.448 .145(This selection emphasizes informal descriptions omitting much of the course\325s)J
86 639 :M
1.589 .159(material on specification, evaluation, and selection among design alternatives.)J
86 653 :M
3.788 .379(We hope, nonetheless, that this will serve to illuminate the nature and)J
86 667 :M
1.03 .103(significance of this emerging field.)J
108 691 :M
2.749 .275(In the following section we outline a number of common architectural)J
86 705 :M
4.554 .455(styles upon which many systems are currently based, and show how)J
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(shaw; page: 6 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(3)S
86 82 :M
1.069 .107(heterogeneous styles can be combined in a single design.  Next we use six case)J
86 96 :M
1.299 .13(studies to illustrate how architectural representations of a software system can)J
86 110 :M
1.8 .18(improve our understanding of complex systems.  Finally, we survey some of)J
86 124 :M
2.317 .232(the outstanding problems in the field, and consider a few of the promising)J
86 138 :M
1.378 .138(research directions.)J
108 162 :M
3.129 .313(The text that makes up the bulk of this article has been drawn from)J
86 176 :M
2.145 .214(numerous other publications by the authors.  The taxonomy of architectural)J
86 190 :M
1.101 .11(styles and the case studies have incorporated parts of several published papers)J
86 204 :M
.712 .071([1, 2, 3, 4].  To a lesser extent material has been drawn from other articles by the)J
86 218 :M
.109 .011(authors [5, 6, 7].)J
86 248 :M
f0_14 sf
.5(2.)A
122 248 :M
.045 .004(From Programming Languages to Software Architecture)J
86 273 :M
f1_12 sf
1.007 .101(One characterization of progress in programming languages and tools has been)J
86 287 :M
3.472 .347(regular increases in abstraction level\321or the conceptual size of software)J
86 301 :M
2.459 .246(designers building blocks.  To place the field of Software Architecture into)J
86 315 :M
1.135 .113(perspective let us begin by looking at the historical development of abstraction)J
86 329 :M
1.384 .138(techniques in computer science.)J
86 353 :M
f3_12 sf
(2.1.)S
122 353 :M
1.967 .197(High-level Programming Languages)J
86 377 :M
f1_12 sf
3.855 .385(When digital computers emerged in the 1950s, software was written in)J
86 391 :M
1.163 .116(machine language; programmers placed instructions and data individually and)J
86 405 :M
3.08 .308(explicitly in the computer's memory.  Insertion of a new instruction in a)J
86 419 :M
4.153 .415(program might require hand-checking of the entire program to update)J
86 433 :M
2.57 .257(references to data and instructions that moved as a result of the insertion.)J
86 447 :M
1.242 .124(Eventually it was recognized that the memory layout and update of references)J
86 461 :M
1.116 .112(could be automated, and also that symbolic names could be used for operation)J
86 475 :M
.678 .068(codes, and memory addresses.  Symbolic assemblers were the result.  They were)J
86 489 :M
.924 .092(soon followed by macro processors, which allowed a single symbol to stand for)J
86 503 :M
4.126 .413(a commonly-used sequence of instructions.  The substitution of simple)J
86 517 :M
.91 .091(symbols for machine operation codes, machine addresses yet to be defined, and)J
86 531 :M
3.348 .335(sequences of instructions was perhaps the earliest form of abstraction in)J
86 545 :M
.121(software.)A
108 569 :M
2.849 .285(In the latter part of the 1950s, it became clear that certain patterns of)J
86 583 :M
1.693 .169(execution were commonly useful\321indeed, they were so well understood that)J
86 597 :M
3.861 .386(it was possible to create them automatically from a notation more like)J
86 611 :M
2.938 .294(mathematics than machine language.  The first of these patterns were for)J
86 625 :M
1.973 .197(evaluation of arithmetic expressions, for procedure invocation, and for loops)J
86 639 :M
1.662 .166(and conditional statements.  These insights were captured in a series of early)J
86 653 :M
1.404 .14(high-level languages, of which Fortran was the main survivor.)J
108 677 :M
4.548 .455(Higher-level languages allowed more sophisticated programs to be)J
86 691 :M
1.418 .142(developed, and patterns in the use of data emerged.  Whereas in Fortran data)J
86 705 :M
1.966 .197(types served primarily as cues for selecting the proper machine instructions,)J
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(shaw; page: 7 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(4)S
86 82 :M
.964 .096(data types in Algol and it successors serve to state the programmer\325s intentions)J
86 96 :M
.893 .089(about how data should be used.  The compilers for these languages could build)J
86 110 :M
4.611 .461(on experience with Fortran and tackle more sophisticated compilation)J
86 124 :M
2.121 .212(problems.  Among other things, they checked adherence to these intentions,)J
86 138 :M
1.191 .119(thereby providing incentives for the programmers to use the type mechanism.)J
108 162 :M
1.074 .107(Progress in language design continued with the introduction of modules to)J
86 176 :M
3.951 .395(provide protection for related procedures and data structures, with the)J
86 190 :M
1.908 .191(separation of a module\325s specification from its implementation, and with the)J
86 204 :M
.466 .047(introduction of abstract data types.)J
86 228 :M
f3_12 sf
(2.2.)S
122 228 :M
-.172(Abstract Data Types)A
86 252 :M
f1_12 sf
3.496 .35(In the late 1960s, good programmers shared an intuition about software)J
86 266 :M
3.58 .358(development:  If you get the data structures right, the effort will make)J
86 280 :M
1.822 .182(development of the rest of the program much easier.  The abstract data type)J
86 294 :M
1.789 .179(work of the 1970s can be viewed as a development effort that converted this)J
86 308 :M
2.706 .271(intuition into a real theory.  The conversion from an intuition to a theory)J
86 322 :M
2.703 .27(involved understanding)J
113 345 :M
.811 .081(\245 )J
f2_12 sf
2.396 .24(the software structure)J
f1_12 sf
2.323 .232( \(which included a representation packaged with)J
122 359 :M
1.488 .149(its primitive operators\),)J
113 381 :M
.585 .059(\245 )J
f2_12 sf
.315(specifications)A
f1_12 sf
1.674 .167( \(mathematically expressed as abstract models or algebraic)J
122 395 :M
.3(axioms\),)A
113 417 :M
.45 .045(\245 )J
f2_12 sf
1.592 .159(language issues)J
f1_12 sf
1.373 .137( \(modules, scope, user-defined types\),)J
113 439 :M
.743 .074(\245 )J
f2_12 sf
1.687 .169(integrity of the result)J
f1_12 sf
1.923 .192( \(invariants of data structures and protection from)J
122 453 :M
2.811 .281(other manipulation\),)J
113 475 :M
.822 .082(\245 )J
f2_12 sf
1.83 .183(rules for combining types )J
f1_12 sf
.519(\(declarations\),)A
113 497 :M
(\245)S
-100 -100 :M
1 .1( )J
119 497 :M
1 .1( )J
-100 -100 :M
1 .1( )J
122 497 :M
f2_12 sf
(i)S
-100 -100 :M
2 .2( )J
125 497 :M
3.987 .399(nformation hiding)J
f1_12 sf
2.68 .268( \(protection of properties not explicitly included in)J
122 511 :M
.155(specifications\).)A
86 534 :M
2.411 .241(The effect of this work was to raise the design level of certain elements of)J
86 548 :M
1.34 .134(software systems, namely abstract data types, above the level of programming)J
86 562 :M
1.489 .149(language statements or individual algorithms.  This form of abstraction led to)J
86 576 :M
1.408 .141(an understanding of a good organization for an entire module that serves one)J
86 590 :M
3.302 .33(particular purpose.  This involved combining representations, algorithms,)J
86 604 :M
1.225 .123(specifications, and functional interfaces in uniform ways.  Certain support was)J
86 618 :M
1.113 .111(required from the programming language, of course, but the abstract data type)J
86 632 :M
1.036 .104(paradigm allowed some parts of systems to be developed from a vocabulary of)J
86 646 :M
.857 .086(data types rather than from a vocabulary of programming-language constructs.)J
86 670 :M
f3_12 sf
(2.3.)S
122 670 :M
1.457 .146(Software Architecture)J
86 694 :M
f1_12 sf
1.558 .156(Just as good programmers recognized useful data structures in the late 1960s,)J
86 708 :M
2.223 .222(good software system designers now recognize useful system organizations.)J
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(shaw; page: 8 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(5)S
86 82 :M
1.449 .145(One of these is based on the theory of abstract data types.  But this is not the)J
86 96 :M
.446 .045(only  way to organize a software system.)J
108 120 :M
2.142 .214(Many other organizations have developed informally over time, and are)J
86 134 :M
1.088 .109(now part of the vocabulary of software system designers.  For example, typical)J
86 148 :M
.782 .078(descriptions of software architectures include synopses such as \(italics ours\):)J
113 171 :M
1.482 .148(\245\322Camelot is based on the )J
f2_12 sf
2.502 .25(client-server model)J
f1_12 sf
1.79 .179( and uses remote procedure)J
122 185 :M
4.016 .402(calls both locally and remotely to provide communication among)J
122 199 :M
.634 .063(applications and servers.\323[8])J
113 221 :M
.429(\245\322)A
f2_12 sf
2.155 .215(Abstraction layering)J
f1_12 sf
1.652 .165( and system decomposition provide the appearance)J
122 235 :M
3.358 .336(of system uniformity to clients, yet allow Helix to accommodate a)J
122 249 :M
1.719 .172(diversity of autonomous devices.  The architecture encourages a )J
f2_12 sf
.397(client-)A
122 263 :M
1.91 .191(server model)J
f1_12 sf
1.415 .141(  for the structuring of applications.\323[9])J
113 285 :M
2.871 .287(\245\322We have chosen a )J
f2_12 sf
4.717 .472(distributed, object-oriented approach)J
f1_12 sf
3.433 .343( to managing)J
122 299 :M
1.384 .138(information.\323 [10])J
113 321 :M
3.405 .34(\245\322The easiest way to make the canonical sequential compiler into a)J
122 335 :M
1.656 .166(concurrent compiler is to )J
f2_12 sf
.383(pipeline)A
f1_12 sf
1.5 .15(  the execution of the compiler phases)J
122 349 :M
1.433 .143(over a number of processors.  . . . A more effective way [is to] split the)J
122 363 :M
3.188 .319(source code into many segments, which are concurrently processed)J
122 377 :M
4.195 .419(through the various phases of compilation [by multiple compiler)J
122 391 :M
1.122 .112(processes] before a final, merging pass recombines the object code into a)J
122 405 :M
.363 .036(single program.\323[11])J
108 428 :M
2.268 .227(Other software architectures are carefully documented and often widely)J
86 442 :M
2.895 .289(disseminated.  Examples include the International Standard Organization's)J
86 456 :M
6.149 .615(Open Systems Interconnection Reference Model \(a layered network)J
86 470 :M
3.754 .375(architecture\) [12], the NIST/ECMA Reference Model \(a generic software)J
86 484 :M
4.686 .469(engineering environment architecture based on layered communication)J
86 498 :M
1.739 .174(substrates\) [13, 14], and the X Window System \(a distributed windowed user)J
86 512 :M
.542 .054(interface architecture based on event triggering and callbacks\) [15].)J
108 536 :M
.977 .098(We are still far from having a well-accepted taxonomy of such architectural)J
86 550 :M
1.151 .115(paradigms, let alone a fully-developed theory of software architecture.  But we)J
86 564 :M
2.706 .271(can now clearly identify a number of architectural patterns, or styles, that)J
86 578 :M
.756 .076(currently form the basic repertoire of a software architect.)J
86 608 :M
f0_14 sf
.5(3.)A
122 608 :M
-.151(Common Architectural Styles)A
86 633 :M
f1_12 sf
3.098 .31(We now examine some of these representative, broadly-used architectural)J
86 647 :M
1.418 .142(styles.  Our purpose is to illustrate the rich space of architectural choices, and)J
86 661 :M
.971 .097(indicate what are some of the tradeoffs in choosing one style over another.)J
108 685 :M
.928 .093(To make sense of the differences between styles, it helps to have a common)J
86 699 :M
1.07 .107(framework from which to view them.  The framework we will adopt is to treat)J
86 713 :M
4.99 .499(an architecture of a specific system as a collection of computational)J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(shaw; page: 9 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(6)S
86 82 :M
4.857 .486(components\321or simply )J
f2_12 sf
.876(components)A
f1_12 sf
3.452 .345(-\321together with a description of the)J
86 96 :M
1.754 .175(interactions between these components\321the )J
f2_12 sf
.31(connectors)A
f1_12 sf
1.746 .175(. Graphically speaking,)J
86 110 :M
1.072 .107(this leads to a view of an abstract architectural description as a graph in which)J
86 124 :M
1.222 .122(the nodes represent the components and the arcs represent the connectors.  As)J
86 138 :M
1.618 .162(we will see, connectors can represent interactions as varied as procedure call,)J
86 152 :M
.398 .04(event broadcast, database queries, and pipes.)J
108 176 :M
1.328 .133(An architectural style, then, defines a family of such systems in terms of a)J
86 190 :M
2.722 .272(pattern of structural organization.  More specifically, an architectural style)J
86 204 :M
1.652 .165(determines the vocabulary of components and connectors that can be used in)J
86 218 :M
1.75 .175(instances of that style, together with a set of )J
f2_12 sf
.507(constraints)A
f1_12 sf
1.42 .142(  on how they can be)J
86 232 :M
4.92 .492(combined.  These can include topological constraints on architectural)J
86 246 :M
3.443 .344(descriptions \(e.g., no cycles\).  Other constraints\321say, having to do with)J
86 260 :M
1.095 .11(execution semantics\321might also be part of the style definition.)J
108 284 :M
1.043 .104(Given this framework, we can understand what a style is by answering the)J
86 298 :M
4.703 .47(following questions:  What is the structural pattern\321the components,)J
86 312 :M
2.37 .237(connectors, and constraints?  What is the underlying computational model?)J
86 326 :M
3.438 .344(What are the essential invariants of the style?  What are some common)J
86 340 :M
1.139 .114(examples of its use?  What are the advantages and disadvantages of using that)J
86 354 :M
1.257 .126(style?  What are some of the common specializations?)J
86 378 :M
f3_12 sf
(3.1.)S
122 378 :M
.284 .028(Pipes and Filters)J
86 402 :M
f1_12 sf
2.617 .262(In a pipe and filter style each component has a set of inputs and a set of)J
86 416 :M
3.336 .334(outputs. A component reads streams of data on its inputs and produces)J
86 430 :M
1.159 .116(streams of data on its outputs, delivering a complete instance of the result in a)J
86 444 :M
5.721 .572(standard order.  This is usually accomplished by applying a local)J
86 458 :M
2.239 .224(transformation to the input streams and computing incrementally so output)J
86 472 :M
1.068 .107(begins before input is consumed.  Hence components are termed \322filters\323.  The)J
86 486 :M
1.366 .137(connectors of this style serve as conduits for the streams, transmitting outputs)J
86 500 :M
.878 .088(of one filter to inputs of another.  Hence the connectors are termed \322pipes\323.)J
108 524 :M
1.824 .182(Among the important invariants of the style, filters must be independent)J
86 538 :M
1.536 .154(entities:  in particular, they should not share state with other filters.  Another)J
86 552 :M
1.817 .182(important invariant is that filters do not know the identity of their upstream)J
86 566 :M
.934 .093(and downstream filters.  Their specifications might restrict what appears on the)J
86 580 :M
1.661 .166(input pipes or make guarantees about what appears on the output pipes, but)J
86 594 :M
.962 .096(they may not identify the components at the ends of those pipes.  Furthermore,)J
86 608 :M
.891 .089(the correctness of the output of a pipe and filter network should not depend on)J
86 622 :M
1.684 .168(the order in which the filters perform their incremental processing\321although)J
86 636 :M
.879 .088(fair scheduling can be assumed.  \(See [5] for an in-depth discussion of this style)J
86 650 :M
.755 .075(and its formal properties.\)  Figure 1 illustrates this style.)J
108 674 :M
2.149 .215(Common specializations of this style include )J
f2_12 sf
.446(pipelines)A
f1_12 sf
1.886 .189(, which restrict the)J
86 688 :M
2.815 .281(topologies to linear sequences of filters; bounded pipes, which restrict the)J
86 702 :M
1.37 .137(amount of data that can reside on a pipe; and typed pipes, which require that)J
86 716 :M
.572 .057(the data passed between two filters have a well-defined type.)J
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(shaw; page: 10 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
.86 0 .504 :F
0 G
(7)S
.86 0 .504 :F
95 72 420 130 rC
11 156 204 164 134 @k
103 134 -1 1 154 133 1 103 133 @a
1 G
163 120 54 28 rF
.86 0 .504 :F
163.5 120.5 53 27 rS
1 G
275 120 54 28 rF
.86 0 .504 :F
275.5 120.5 53 27 rS
11 156 204 276 134 @k
215 134 -1 1 266 133 1 215 133 @a
1 G
387 120 54 28 rF
.86 0 .504 :F
387.5 120.5 53 27 rS
11 156 204 388 134 @k
327 134 -1 1 378 133 1 327 133 @a
11 156 204 500 132 @k
439 133 -1 1 490 132 1 439 132 @a
439 141 -1 1 454 153 1 439 140 @a
-1 -1 440 167 1 1 453 153 @b
275 167 -1 1 440 166 1 275 166 @a
261 154 -1 1 276 166 1 261 153 @a
-1 -1 262 154 1 1 275 140 @b
11 -24 24 355 167 @k
363 167 -1 1 375 166 1 363 166 @a
gR
0 .872 .792 :F
gS 95 72 420 134 rC
-77 -29 36 37 344 135.5 @l
gS
.076 .076 scale
4161.641 1294.764 :M
f4_176 sf
-.049(Data flow)A
4857.436 1373.235 :M
-.022(ASCII stream)A
gR
-5 -5 356 124 5 5 361 107 @b
gS
.076 .076 scale
2625.641 2602.607 :M
.716 .376 .976 :F
f4_176 sf
-.064(filter)A
1588.513 2511.058 :M
-.052(Computation)A
gR
.716 .376 .976 :F
119 167 37 36 192.5 156 @l
-5 -5 168 178 5 5 176 164 @b
gR
gS 30 31 552 730 rC
234 222 :M
0 G
f2_12 sf
2.07 .207(Figure 1: Pipes and Filters)J
108 244 :M
f1_12 sf
3.62 .362(A degenerate case of a pipeline architecture occurs when each filter)J
86 258 :M
1.722 .172(processes all of its input data as a single entity.)J
f1_9 sf
0 -3 rm
.441(1)A
0 3 rm
f1_12 sf
1.828 .183( In this case the architecture)J
86 272 :M
1.577 .158(becomes a \322batch sequential\323 system.  In these systems pipes no longer serve)J
86 286 :M
1.5 .15(the function of providing a stream of data, and therefore are largely vestigial.)J
86 300 :M
.53 .053(Hence such systems are best treated as instances of a separate architectural style.)J
108 324 :M
2.507 .251(The best known examples of pipe and filter architectures are programs)J
86 338 :M
1.047 .105(written in the Unix shell [16].  Unix supports this style by providing a notation)J
86 352 :M
1.739 .174(for connecting components \(represented as Unix processes\) and by providing)J
86 366 :M
4.017 .402(run time mechanisms for implementing pipes.  As another well-known)J
86 380 :M
3.338 .334(example, traditionally compilers have been viewed as a pipeline systems)J
86 394 :M
2.787 .279(\(though the phases are often not incremental\).  The stages in the pipeline)J
86 408 :M
3.065 .306(include lexical analysis, parsing, semantic analysis, code generation.  \(We)J
86 422 :M
1.077 .108(return to this example in the case studies.\)  Other examples of pipes and filters)J
86 436 :M
2.67 .267(occur in signal processing domains [17], functional programming [18], and)J
86 450 :M
-.003(distributed systems [19].)A
108 474 :M
1.16 .116(Pipe and filter systems have a number of nice properties.  First, they allow)J
86 488 :M
1.304 .13(the designer to understand the overall input/output behavior of a system as a)J
86 502 :M
2.415 .241(simple composition of the behaviors of the individual filters.  Second, they)J
86 516 :M
1.34 .134(support reuse: any two filters can be hooked together, provided they agree on)J
86 530 :M
1.366 .137(the data that is being transmitted between them.  Third, systems can be easily)J
86 544 :M
.948 .095(maintained and enhanced: new filters can be added to existing systems and old)J
86 558 :M
1.24 .124(filters can be replaced by improved ones.  Fourth, they permit certain kinds of)J
86 572 :M
1.667 .167(specialized analysis, such as throughput and deadlock analysis.  Finally, they)J
86 586 :M
1.85 .185(naturally support concurrent execution.  Each filter can be implemented as a)J
86 600 :M
.85 .085(separate task and potentially executed in parallel with other filters.)J
108 624 :M
2.825 .282(But these systems also have their disadvantages.)J
f1_9 sf
0 -3 rm
.534(2)A
0 3 rm
f1_12 sf
1.808 .181(  First, pipe and filter)J
86 638 :M
1.417 .142(systems often lead to a batch organization of processing.  Although filters can)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
86 653.24 -.24 .24 229.24 653 .24 86 653 @a
86 666 :M
f1_9 sf
.055(1)A
f1_10 sf
0 3 rm
.188 .019(In general, we find that the boundaries of styles can overlap.  This should not deter us from)J
0 -3 rm
86 681 :M
.609 .061(identifying the main features of a style with its central examples of use.)J
86 690 :M
f1_9 sf
.226(2)A
f1_10 sf
0 3 rm
.678 .068(This is true in spite of the fact that pipes and filters, like every style, has a set of devout)J
0 -3 rm
86 705 :M
.318 .032(religious followers\321people who believe that all problems worth solving can best be solved using)J
86 717 :M
2.187 .219(that particular style.)J
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(shaw; page: 11 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(8)S
86 82 :M
3.978 .398(process data incrementally, since filters are inherently independent, the)J
86 96 :M
5.749 .575(designer is forced to think of each filter as providing a complete)J
86 110 :M
2.284 .228(transformation of input data to output data.  In particular, because of their)J
86 124 :M
2.245 .225(transformational character, pipe and filter systems are typically not good at)J
86 138 :M
4.718 .472(handling interactive applications.  This problem is most severe when)J
86 152 :M
3.339 .334(incremental display updates are required, because the output pattern for)J
86 166 :M
2.358 .236(incremental updates is radically different from the pattern for filter output.)J
86 180 :M
3.885 .388(Second, they may be hampered by having to maintain correspondences)J
86 194 :M
4.631 .463(between two separate, but related streams.  Third, depending on the)J
86 208 :M
1.178 .118(implementation, they may force a lowest com-)J
86 232 :M
2.922 .292(mon denominator on data transmission, resulting in added work for each)J
86 246 :M
2.361 .236(filter to parse and unparse its data.  This, in turn, can lead both to loss of)J
86 260 :M
1.164 .116(performance and to increased complexity in writing the filters themselves.)J
86 284 :M
f3_12 sf
(3.2. )S
122 284 :M
-.032(Data Abstraction and Object-Oriented Organization)A
86 308 :M
f1_12 sf
1.484 .148(In this style data representations and their associated primitive operations are)J
86 322 :M
.608 .061(encapsulated in an abstract data type or object.  The components of this style are)J
86 336 :M
2.015 .201(the objects\321or, if you will, instances of the abstract data types.  Objects are)J
86 350 :M
.878 .088(examples of a sort of component we call a manager because it is responsible for)J
86 364 :M
.946 .095(preserving the integrity of a resource \(here the representation\).  Objects interact)J
86 378 :M
2.122 .212(through function and procedure invocations.  Two important aspects of this)J
86 392 :M
2.538 .254(style are \(a\) that an object is responsible for preserving the integrity of its)J
86 406 :M
2.331 .233(representation \(usually by maintaining some invariant over it\), and \(b\) that)J
86 420 :M
.962 .096(the representation is hidden from other objects.  Figure 2 illustrates this style.)J
f1_9 sf
0 -3 rm
(3)S
0 3 rm
167 432 276 162 rC
377 470.5 :M
377 474.16 379.661 476 385 476 :C
390.327 476 392.161 473.326 390.5 468 :C
388.827 462.659 388.827 457.326 390.5 452 :C
392.161 446.66 391.161 444 387.5 444 :C
383.827 444 379.328 443.16 374 441.5 :C
368.661 439.827 366 441.493 366 446.5 :C
366 451.493 367.828 455.826 371.5 459.5 :C
375.161 463.16 377 466.826 377 470.5 :C
:K
stroke
-1 -1 361 460 1 1 366 454 @b
366 471 -1 1 377 470 1 366 470 @a
-1 -1 367 466 1 1 371 459 @b
-1 -1 372 481 1 1 376 475 @b
328 561 :M
328 557.658 325.328 556 320 556 :C
314.662 556 312.995 558.658 315 564 :C
316.995 569.325 316.995 574.491 315 579.5 :C
312.995 584.491 313.828 587 317.5 587 :C
321.162 587 325.662 587.991 331 590 :C
336.328 591.991 339 590.324 339 585 :C
339 579.658 337.162 575.158 333.5 571.5 :C
329.828 567.825 328 564.325 328 561 :C
:K
stroke
-1 -1 340 577 1 1 344 571 @b
328 561 -1 1 340 560 1 328 560 @a
-1 -1 334 572 1 1 339 566 @b
-1 -1 329 556 1 1 333 550 @b
409.5 492 :M
405.827 492 404 494.659 404 500 :C
404 505.326 406.66 506.992 412 505 :C
417.327 502.992 422.66 502.992 428 505 :C
433.327 506.992 436 506.159 436 502.5 :C
436 498.826 436.993 494.326 439 489 :C
440.993 483.659 439.327 481 434 481 :C
428.66 481 424.16 482.826 420.5 486.5 :C
416.827 490.159 413.16 492 409.5 492 :C
:K
stroke
420 476 -1 1 426 480 1 420 475 @a
-1 -1 410 492 1 1 409 480 @b
414 481 -1 1 421 486 1 414 480 @a
398 487 -1 1 404 491 1 398 486 @a
344.5 513 :M
340.828 513 339 515.659 339 521 :C
339 526.325 341.661 528.159 347 526.5 :C
352.328 524.825 357.828 524.825 363.5 526.5 :C
369.161 528.159 372 527.159 372 523.5 :C
372 519.825 372.828 515.326 374.5 510 :C
376.161 504.659 374.328 502 369 502 :C
363.661 502 359.161 503.826 355.5 507.5 :C
351.828 511.159 348.161 513 344.5 513 :C
:K
stroke
355 497 -1 1 361 502 1 355 496 @a
-1 -1 345 513 1 1 344 502 @b
349 503 -1 1 356 507 1 349 502 @a
333 508 -1 1 340 512 1 333 507 @a
258 481 :M
258 477.659 255.33 476 250 476 :C
244.663 476 242.83 478.659 244.5 484 :C
246.163 489.326 246.163 494.659 244.5 500 :C
242.83 505.326 243.83 508 247.5 508 :C
251.163 508 255.663 508.826 261 510.5 :C
266.329 512.159 269 510.326 269 505 :C
269 499.659 267.163 495.159 263.5 491.5 :C
259.829 487.826 258 484.326 258 481 :C
:K
stroke
-1 -1 269 497 1 1 274 491 @b
258 481 -1 1 269 480 1 258 480 @a
-1 -1 264 492 1 1 268 486 @b
-1 -1 259 476 1 1 263 470 @b
274 534.5 :M
274 530.825 276.829 529 282.5 529 :C
288.162 529 289.996 531.658 288 537 :C
285.996 542.325 285.996 547.658 288 553 :C
289.996 558.325 289.162 561 285.5 561 :C
281.829 561 277.329 561.825 272 563.5 :C
266.662 565.158 264 563.325 264 558 :C
264 552.658 265.663 548.325 269 545 :C
272.329 541.658 274 538.159 274 534.5 :C
:K
stroke
258 545 -1 1 264 550 1 258 544 @a
263 535 -1 1 275 534 1 263 534 @a
263 540 -1 1 269 544 1 263 539 @a
268 524 -1 1 275 528 1 268 523 @a
409 561 :M
409 564.325 411.827 566 417.5 566 :C
423.16 566 424.994 563.325 423 558 :C
420.994 552.658 420.994 547.325 423 542 :C
424.994 536.658 424.16 534 420.5 534 :C
416.827 534 412.327 533.159 407 531.5 :C
401.66 529.825 399 531.658 399 537 :C
399 542.325 400.66 546.825 404 550.5 :C
407.327 554.158 409 557.658 409 561 :C
:K
stroke
-1 -1 394 551 1 1 398 544 @b
398 561 -1 1 410 560 1 398 560 @a
-1 -1 399 556 1 1 403 550 @b
-1 -1 404 572 1 1 409 566 @b
323 449 :M
326.328 449 328 451.66 328 457 :C
328 462.326 325.328 464.16 320 462.5 :C
314.662 460.826 309.329 460.826 304 462.5 :C
298.662 464.16 296 463.16 296 459.5 :C
296 455.826 295.162 451.493 293.5 446.5 :C
291.829 441.493 293.662 439 299 439 :C
304.329 439 308.829 440.66 312.5 444 :C
316.162 447.327 319.662 449 323 449 :C
:K
stroke
-1 -1 307 439 1 1 312 433 @b
-1 -1 323 450 1 1 322 438 @b
-1 -1 313 444 1 1 317 438 @b
-1 -1 329 450 1 1 333 443 @b
90 180 75 84 399 518.5 @n
90 172 54 74 393.5 513.5 @n
-90 0 54 53 382.5 481 @n
382.5 481.5 32 -90 0 @m
90 180 21 64 264 502.5 @n
90 180 21 42 269 502.5 @n
14 90 75 42 264 449.5 @n
9 90 75 64 269 449.5 @n
90 180 43 106 334 454.5 @n
90 180 86 31 366.5 455 @n
90 180 53 95 345 455 @n
-90 0 65 117 372 540 @n
0 90 118 95 274.5 508 @n
-90 0 21 84 275 534.5 @n
247 492 17 9 rC
gS
.6 .591 scale
425.673 838.309 :T
-425.673 -838.309 :T
416.673 842.309 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 269 545 17 9 rC
gS
.6 .591 scale
460.674 927.952 :T
-460.674 -927.952 :T
451.674 931.952 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 318 577 16 9 rC
gS
.6 .591 scale
543.341 982.076 :T
-543.341 -982.076 :T
533.341 986.076 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 355 508 17 9 rC
gS
.6 .591 scale
605.676 865.371 :T
-605.676 -865.371 :T
596.676 869.371 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 404 540 17 8 rC
gS
.6 .591 scale
686.677 919.495 :T
-686.677 -919.495 :T
676.677 923.495 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 415 492 17 9 rC
gS
.6 .591 scale
705.011 838.309 :T
-705.011 -838.309 :T
695.011 842.309 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 366 444 17 9 rC
gS
.6 .591 scale
624.009 757.122 :T
-624.009 -757.122 :T
615.009 761.122 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 296 444 17 9 rC
gS
.6 .591 scale
506.674 757.122 :T
-506.674 -757.122 :T
496.674 761.122 :M
f5_14 sf
-.496(obj)A
gR
gR
gS 275 460 13 9 rC
gS
.6 .591 scale
468.674 784.184 :T
-468.674 -784.184 :T
461.674 788.184 :M
f4_14 sf
-.565(op)A
gR
gR
gS 275 470 13 9 rC
gS
.6 .591 scale
468.674 802.789 :T
-468.674 -802.789 :T
461.674 806.789 :M
f4_14 sf
-.565(op)A
gR
gR
gS 243 518 13 9 rC
gS
.6 .591 scale
413.673 883.976 :T
-413.673 -883.976 :T
406.673 887.976 :M
f4_14 sf
-.565(op)A
gR
gR
gS 264 513 13 9 rC
gS
.6 .591 scale
450.34 875.519 :T
-450.34 -875.519 :T
443.34 879.519 :M
f4_14 sf
-.565(op)A
gR
gR
gS 286 508 13 9 rC
gS
.6 .591 scale
487.007 865.371 :T
-487.007 -865.371 :T
480.007 869.371 :M
f4_14 sf
-.565(op)A
gR
gR
gS 302 534 13 9 rC
gS
.6 .591 scale
514.674 911.038 :T
-514.674 -911.038 :T
506.674 915.038 :M
f4_14 sf
-.565(op)A
gR
gR
gS 334 540 14 8 rC
gS
.6 .591 scale
568.009 919.495 :T
-568.009 -919.495 :T
560.009 923.495 :M
f4_14 sf
-.565(op)A
gR
gR
gS 351 556 13 8 rC
gS
.6 .591 scale
593.676 946.557 :T
-593.676 -946.557 :T
586.676 950.557 :M
f4_14 sf
-.565(op)A
gR
gR
gS 378 561 13 9 rC
gS
.6 .591 scale
639.676 955.014 :T
-639.676 -955.014 :T
631.676 959.014 :M
f4_14 sf
-.565(op)A
gR
gR
gS 372 534 13 9 rC
gS
.6 .591 scale
630.343 911.038 :T
-630.343 -911.038 :T
623.343 915.038 :M
f4_14 sf
-.565(op)A
gR
gR
gS 388 508 14 9 rC
gS
.6 .591 scale
658.01 865.371 :T
-658.01 -865.371 :T
650.01 869.371 :M
f4_14 sf
-.565(op)A
gR
gR
gS 394 465 13 9 rC
gS
.6 .591 scale
667.01 794.333 :T
-667.01 -794.333 :T
660.01 798.333 :M
f4_14 sf
-.565(op)A
gR
gR
gS 405 454 13 9 rC
gS
.6 .591 scale
683.677 775.727 :T
-683.677 -775.727 :T
676.677 779.727 :M
f4_14 sf
-.565(op)A
gR
gR
gS 340 460 13 9 rC
gS
.6 .591 scale
577.009 784.184 :T
-577.009 -784.184 :T
570.009 788.184 :M
f4_14 sf
-.565(op)A
gR
gR
gS 324 476 13 9 rC
gS
.6 .591 scale
549.675 811.246 :T
-549.675 -811.246 :T
541.675 815.246 :M
f4_14 sf
-.565(op)A
gR
gR
gS 307 497 14 9 rC
gS
.6 .591 scale
522.008 848.457 :T
-522.008 -848.457 :T
515.008 852.457 :M
f4_14 sf
-.565(op)A
gR
gR
gS 168 551 84 27 rC
gS
.6 .591 scale
350.004 954.791 :T
-350.004 -954.791 :T
295.004 943.791 :M
f5_14 sf
-.031(obj is a manager)A
286.671 974.236 :M
-.043(op is an invocation)A
gR
gR
gS 167 432 276 162 rC
0 90 21 106 345 518.5 @n
0 90 22 84 339.5 518.5 @n
227 444 25 10 rC
gS
.6 .591 scale
399.006 758.505 :T
-399.006 -758.505 :T
380.006 764.505 :M
f4_18 sf
-.498(ADT)A
gR
gR
gS 181 439 46 10 rC
gS
.6 .591 scale
339.005 751.048 :T
-339.005 -751.048 :T
305.005 756.048 :M
f4_18 sf
(Manager)S
gR
gR
.5 G
gS 167 432 276 162 rC
np 242 481 :M
226 475 :L
229 472 :L
231 468 :L
242 481 :L
eofill
202 457 -4 4 231 470 4 202 453 @a
np 291 454 :M
274 454 :L
274 450 :L
276 446 :L
291 454 :L
4 lw
eofill
251 446 -4 4 277 448 4 251 442 @a
172 497 45 11 rC
gS
.6 .591 scale
324.004 848.148 :T
-324.004 -848.148 :T
290.004 854.148 :M
0 G
f4_18 sf
-.125(Proc call)A
gR
gR
gS 167 432 276 162 rC
np 258 524 :M
241 525 :L
242 521 :L
243 517 :L
258 524 :L
4 lw
eofill
192 515 -4 4 244 519 4 192 511 @a
gR
gS 30 31 552 730 rC
193 610 :M
0 G
f2_12 sf
1.717 .172(Figure 2: Abstract Data Types and Objects)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
86 641.24 -.24 .24 229.24 641 .24 86 641 @a
86 654 :M
f1_9 sf
.198(3)A
f1_10 sf
0 3 rm
.829 .083(We haven't mentioned inheritance in this description.  While inheritance is an important)J
0 -3 rm
86 669 :M
.223 .022(organizing principle for defining the types of objects in a system, it does not have a direct)J
86 681 :M
.429 .043(architectural function.  In particular, in our view, an inheritance relationship is not a connector,)J
86 693 :M
.139 .014(since it does not define the interaction between components in a system.  Also, in an architectural)J
86 705 :M
.07 .007(setting inheritance of properities is not restricted to object types\321but may include connectors and)J
86 717 :M
1.495 .149(even architectural styles.)J
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(shaw; page: 12 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
512 752 :M
(9)S
108 82 :M
1.585 .158(The use of abstract data types, and increasingly the use of object-oriented)J
86 96 :M
2.247 .225(systems, is, of course, widespread. There are many variations. For example,)J
86 110 :M
2.11 .211(some systems allow \322objects\323 to be concurrent tasks; others allow objects to)J
86 124 :M
.867 .087(have multiple interfaces [20, 21].)J
108 148 :M
1.109 .111(Object-oriented systems have many nice properties, most of which are well)J
86 162 :M
.98 .098(known.  Because an object hides its representation from its clients, it is possible)J
86 176 :M
2.299 .23(to change the implementation without affecting those clients.  Additionally,)J
86 190 :M
2.815 .281(the bundling of a set of accessing routines with the data they manipulate)J
86 204 :M
.946 .095(allows designers to decompose problems into collections of interacting agents.)J
108 228 :M
3.183 .318(But object-oriented systems also have some disadvantages.  The most)J
86 242 :M
4.009 .401(significant is that in order for one object to interact with another \(via)J
86 256 :M
2.91 .291(procedure call\) it must know the identity of that other object.  This is in)J
86 270 :M
2.486 .249(contrast, for example, to pipe and filter systems, where filters do need not)J
86 284 :M
1.453 .145(know what other filters are in the system in order to interact with them.  The)J
86 298 :M
2.615 .262(significance of this is that whenever the identity of an object changes it is)J
86 312 :M
2.134 .213(necessary to modify all other objects that explicitly invoke it.  In a module-)J
86 326 :M
1.558 .156(oriented language this manifests itself as the need to change the \322import\323 list)J
86 340 :M
2.267 .227(of every module that uses the changed module.  Further there can be side-)J
86 354 :M
.916 .092(effect problems:  if A uses object B and C also uses B, then C's effects on B look)J
86 368 :M
.693 .069(like unexpected side effects to A, and vice versa.)J
86 392 :M
f3_12 sf
(3.3. )S
122 392 :M
.833 .083(Event-based, Implicit Invocation)J
86 416 :M
f1_12 sf
3.807 .381(Traditionally, in a system in which the component interfaces provide a)J
86 430 :M
1.148 .115(collection of procedures and functions, components interact with each other by)J
86 444 :M
4.742 .474(explicitly invoking those routines.  However, recently there has been)J
86 458 :M
1.352 .135(considerable interest in an alternative integration technique, variously referred)J
86 472 :M
2.308 .231(to as implicit invocation, reactive integration, and selective broadcast.  This)J
86 486 :M
1.024 .102(style has historical roots in systems based on actors [22], constraint satisfaction,)J
86 500 :M
1.041 .104(daemons, and packet-switched networks.)J
108 524 :M
4.759 .476(The idea behind implicit invocation is that instead of invoking a)J
86 538 :M
2.687 .269(procedure directly, a component can announce \(or broadcast\) one or more)J
86 552 :M
1.049 .105(events.  Other components in the system can register an interest in an event by)J
86 566 :M
2.552 .255(associating a procedure with the event.  When the event is announced the)J
86 580 :M
2.168 .217(system itself invokes all of the procedures that have been registered for the)J
86 594 :M
2.726 .273(event.  Thus an event announcement ``implicitly'' causes the invocation of)J
86 608 :M
1.381 .138(procedures in other modules.)J
108 632 :M
2.074 .207(For example, in the Field system [23], tools such as editors and variable)J
86 646 :M
.661 .066(monitors register for a debugger\325s breakpoint events.  When a debugger stops at)J
86 660 :M
2.193 .219(a breakpoint, it announces an event that allows the system to automatically)J
86 674 :M
2.908 .291(invoke methods in those registered tools.  These methods might scroll an)J
86 688 :M
3.109 .311(editor to the appropriate source line or redisplay the value of monitored)J
86 702 :M
1.569 .157(variables.  In this scheme, the debugger simply announces an event, but does)J
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(shaw; page: 13 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(10)S
86 82 :M
1.095 .109(not know what other tools \(if any\) are concerned with that event, or what they)J
86 96 :M
1.277 .128(will do when that event is announced.)J
108 120 :M
2.303 .23(Architecturally speaking, the components in an implicit invocation style)J
86 134 :M
1.377 .138(are modules whose interfaces provide both a collection of procedures \(as with)J
86 148 :M
1.082 .108(abstract data types\) and a set of events.  Procedures may be called in the usual)J
86 162 :M
1.859 .186(way.  But in addition, a component can register some of its procedures with)J
86 176 :M
2.09 .209(events of the system.  This will cause these procedures to be invoked when)J
86 190 :M
2.026 .203(those events are announced at run time.  Thus the connectors in an implicit)J
86 204 :M
3.657 .366(invocation system include traditional procedure call as well as bindings)J
86 218 :M
1.405 .141(between event announcements and procedure calls.)J
108 242 :M
1.497 .15(The main invariant of this style is that announcers of events do not know)J
86 256 :M
1.487 .149(which components will be affected by those events.  Thus components cannot)J
86 270 :M
1.691 .169(make assumptions about order of processing, or even about what processing,)J
86 284 :M
1.298 .13(will occur as a result of their events.  For this reason, most implicit invocation)J
86 298 :M
3.253 .325(systems also include explicit invocation \(i.e., normal procedure call\) as a)J
86 312 :M
1.731 .173(complementary form of interaction.)J
108 336 :M
2.985 .298(Examples of systems with implicit invocation mechanisms abound [7].)J
86 350 :M
2.604 .26(They are used in programming environments to integrate tools [23, 24], in)J
86 364 :M
.81 .081(database management systems to ensure consistency constraints [22, 25], in user)J
86 378 :M
1.869 .187(interfaces to separate presentation of data from applications that manage the)J
86 392 :M
1.837 .184(data [26, 27], and by syntax-directed editors to support incremental semantic)J
86 406 :M
-.01(checking [28, 29].)A
108 430 :M
2.924 .292(One important benefit of implicit invocation is that it provides strong)J
86 444 :M
1.461 .146(support for reuse. Any component can be introduced into a system simply by)J
86 458 :M
1.895 .189(registering it for the events of that system.  A second benefit is that implicit)J
86 472 :M
1.129 .113(invocation eases system evolution [30].  Components may be replaced by other)J
86 486 :M
3.818 .382(components without affecting the interfaces of other components in the)J
86 500 :M
.151(system.)A
108 524 :M
1.123 .112(In contrast, in a system based on explicit invocation, whenever the identity)J
86 538 :M
2.323 .232(of a that provides some system function is changed, all other modules that)J
86 552 :M
1.05 .105(import that module must also be changed.)J
108 576 :M
3.879 .388(The primary disadvantage of implicit invocation is that components)J
86 590 :M
2.315 .231(relinquish control over the computation performed by the system.  When a)J
86 604 :M
2.351 .235(component announces an event, it has no idea what other components will)J
86 618 :M
3.387 .339(respond to it.  Worse, even if it does know what other components are)J
86 632 :M
1.189 .119(interested in the events it announces, it cannot rely on the order in which they)J
86 646 :M
2.763 .276(are invoked.  Nor can it know when they are finished.  Another problem)J
86 660 :M
1.101 .11(concerns exchange of data.  Sometimes data can be passed with the event.  But)J
86 674 :M
4.004 .4(in other situations event systems must rely on a shared repository for)J
86 688 :M
2.005 .2(interaction. In these cases global performance and resource management can)J
86 702 :M
4.943 .494(become a serious issue.  Finally, reasoning about correctness can be)J
86 716 :M
2.866 .287(problematic, since the meaning of a procedure that announces events will)J
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(shaw; page: 14 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(11)S
86 82 :M
.998 .1(depend on the context of bindings in which it is invoked.  This is in contrast to)J
86 96 :M
3.688 .369(traditional reasoning about procedure calls, which need only consider a)J
86 110 :M
1.031 .103(procedure\325s pre- and post-conditions when reasoning about an invocation of it.)J
86 134 :M
f3_12 sf
(3.4. )S
122 134 :M
.565 .057(Layered Systems)J
86 158 :M
f1_12 sf
1.932 .193(A layered system is organized hierarchically, each layer providing service to)J
86 172 :M
1.466 .147(the layer above it and serving as a client to the layer below.  In some layered)J
86 186 :M
1.063 .106(systems inner layers are hidden from all except the adjacent outer layer, except)J
86 200 :M
1.862 .186(for certain functions carefully selected for export.  Thus in these systems the)J
86 214 :M
1.712 .171(components implement a virtual machine at some layer in the hierarchy.  \(In)J
86 228 :M
1.056 .106(other layered systems the layers may be only partially opaque.\) The connectors)J
86 242 :M
3.241 .324(are defined by the protocols that determine how the layers will interact.)J
86 256 :M
1.382 .138(Topological constraints include limiting interactions to adjacent layers.  Figure)J
86 270 :M
.824 .082(3 illustrates this style.)J
194 282 223 185 rC
356 424 -1 1 374 450 1 356 423 @a
-1 -1 287 451 1 1 303 423 @b
1 G
119 120 329.5 375 @j
0 G
118 119 329.5 375 @f
64 65 329.5 375 @f
120 419 172 173 329.5 375 @n
316 365 27 18 rC
gS
.599 .601 scale
548.817 620.683 :T
-548.817 -620.683 :T
533.817 617.683 :M
f5_14 sf
-.295(Core)A
532.148 634.332 :M
-.197(Level)A
gR
gR
gS 303 327 53 9 rC
gS
.599 .601 scale
550.462 552.081 :T
-550.462 -552.081 :T
510.462 556.081 :M
f5_14 sf
-.009(Basic Utility)A
gR
gR
gS 295 300 69 9 rC
gS
.599 .601 scale
548.117 507.129 :T
-548.117 -507.129 :T
497.117 511.129 :M
f5_14 sf
-.018(Useful Systems)A
gR
gR
gS 315 451 29 9 rC
gS
.599 .601 scale
548.48 758.53 :T
-548.48 -758.53 :T
530.48 762.53 :M
f5_14 sf
-.225(Users)A
gR
gR
gS 195 445 93 21 rC
gS
.599 .601 scale
402.294 758.206 :T
-402.294 -758.206 :T
325.294 754.206 :M
f5_18 sf
-.081(Composites of)A
325.294 772.52 :M
(various elements)S
gR
gR
.5 G
gS 194 282 223 185 rC
np 324 391 :M
313 404 :L
311 401 :L
308 397 :L
324 391 :L
eofill
-4 -4 262 442 4 4 309 399 @b
np 286 375 :M
280 391 :L
277 388 :L
274 386 :L
286 375 :L
4 lw
eofill
-4 -4 245 442 4 4 276 387 @b
np 259 364 :M
256 381 :L
253 379 :L
249 378 :L
259 364 :L
eofill
-4 -4 229 442 4 4 251 377 @b
195 283 84 21 rC
gS
.599 .601 scale
394.294 488.49 :T
-394.294 -488.49 :T
325.294 484.49 :M
0 G
f5_18 sf
(Usually)S
325.294 502.804 :M
(procecure calls)S
gR
gR
gS 194 282 223 185 rC
np 308 320 :M
291 320 :L
292 316 :L
294 311 :L
308 320 :L
4 lw
eofill
252 306 -4 4 295 314 4 252 302 @a
np 313 347 :M
297 343 :L
299 340 :L
301 336 :L
313 347 :L
eofill
231 306 -4 4 301 338 4 231 302 @a
gR
gS 30 31 552 730 rC
234 483 :M
0 G
f2_12 sf
2.591 .259(Figure 3: Layered Systems)J
108 505 :M
f1_12 sf
2.262 .226(The most widely known examples of this kind of architectural style are)J
86 519 :M
3.304 .33(layered communication protocols [31]. In this application area each layer)J
86 533 :M
1.997 .2(provides a substrate for communication at some level of abstraction.  Lower)J
86 547 :M
1.572 .157(levels define lower levels of interaction, the lowest typically being defined by)J
86 561 :M
1.323 .132(hardware connections.  Other appli-cation areas for this style include database)J
86 575 :M
.183 .018(systems and operating systems [9, 32, 33 ].)J
108 599 :M
2.709 .271(Layered systems have several desirable properties.  First, they support)J
86 613 :M
1.456 .146(design based on increasing levels of abstraction.  This allows implementors to)J
86 627 :M
2.367 .237(partition a complex problem into a sequence of incremental steps.  Second,)J
86 641 :M
1.071 .107(they support enhancement.  Like pipelines, because each layer interacts with at)J
86 655 :M
1.162 .116(most the layers below and above, changes to the function of one layer affect at)J
86 669 :M
2.007 .201(most two other layers.  Third, they support reuse.  Like abstract data types,)J
86 683 :M
3.143 .314(different implementations of the same layer can be used interchangeably,)J
86 697 :M
1.454 .145(provided they support the same interfaces to their adjacent layers.  This leads)J
86 711 :M
3.296 .33(to the possibility of defining standard layer interfaces to which different)J
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(shaw; page: 15 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(12)S
86 82 :M
1.447 .145(implementors can build.  \(A good example is the OSI ISO model and some of)J
86 96 :M
1.184 .118(the X Window System protocols.\))J
108 120 :M
1.936 .194(But layered systems also have disadvantages.  Not all systems are easily)J
86 134 :M
1.882 .188(structured in a layered fashion.  \(We will see an example of this later in the)J
86 148 :M
2.478 .248(case studies.\)  And even if a system )J
f2_12 sf
.856(can)A
f1_12 sf
3.146 .315( logically be structured as layers,)J
86 162 :M
1.953 .195(considerations of performance may require closer coupling between logically)J
86 176 :M
2.301 .23(high-level functions and their lower-level implementations.  Additionally, it)J
86 190 :M
1.361 .136(can be quite difficult to find the right levels of abstraction. This is particularly)J
86 204 :M
2.611 .261(true for standardized layered models.  One notes that the communications)J
86 218 :M
2.087 .209(community has had some difficulty mapping existing protocols into the ISO)J
86 232 :M
.839 .084(framework: many of those protocols bridge several layers.)J
108 256 :M
1.349 .135(In one sense this is similar to the benefits of implementation hiding found)J
86 270 :M
1.618 .162(in abstract data types.  However, here there are multiple levels of abstraction)J
86 284 :M
2.1 .21(and implementation.  They are also similar to pipelines, in that components)J
86 298 :M
1.412 .141(communicate at most with one other component on either side. But instead of)J
86 312 :M
1.574 .157(simple pipe read/write protocol of pipes, layered systems can provide  much)J
86 326 :M
4.548 .455(richer forms of interaction.  This makes it difficult to define system-)J
86 340 :M
2.261 .226(independent layers \(as with filters\)\321since a layer must support the specific)J
86 354 :M
1.938 .194(protocols at its upper and lower boundaries.  But it also allows much closer)J
86 368 :M
1.248 .125(interaction between layers, and permits two-way transmission of information.)J
86 392 :M
f3_12 sf
(3.5. )S
122 392 :M
.154(Repositories)A
86 416 :M
f1_12 sf
.881 .088(In a repository style there are two quite distinct kinds of components:  a central)J
86 430 :M
2.556 .256(data structure represents the current state, and a collection of independent)J
86 444 :M
3.609 .361(components operate on the central data store.  Interactions between the)J
86 458 :M
.883 .088(repository and its external components can vary significantly between systems.)J
108 482 :M
.813 .081(The choice of control discipline leads to major subcategories.  If the types of)J
86 496 :M
1.322 .132(transactions in an input stream of transactions trigger selection of processes to)J
86 510 :M
1.14 .114(execute, the repository can be a traditional database.  If the current state of the)J
86 524 :M
1.493 .149(central data structure is the main trigger of selecting processes to execute, the)J
86 538 :M
.178 .018(repository can be a blackboard.)J
108 562 :M
1.884 .188(Figure 4 illustrates a simple view of a blackboard architecture.  \(We will)J
86 576 :M
1.697 .17(examine more detailed models in the case studies.\)  The blackboard model is)J
86 590 :M
1.129 .113(usually presented with three major parts:)J
86 614 :M
f0_12 sf
5.183 .518(The knowledge sources:)J
f1_12 sf
3.798 .38(  separate, independent parcels of application-)J
122 628 :M
3.181 .318(dependent knowledge.  Interaction among knowledge sources takes)J
122 642 :M
.682 .068(place solely through the blackboard.)J
86 666 :M
f0_12 sf
1.642 .164(The blackboard data structure:)J
f1_12 sf
1.256 .126(  problem-solving state data, organized into an)J
122 680 :M
1.797 .18(application-dependent hierarchy.  Knowledge sources make changes to)J
122 694 :M
.937 .094(the blackboard that lead incrementally to a solution to the problem.)J
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(shaw; page: 16 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(13)S
86 82 :M
f0_12 sf
.407(Control:)A
f1_12 sf
1.492 .149(  driven entirely by state of blackboard.  Knowledge sources respond)J
122 96 :M
.996 .1(opportunistically when changes in the blackboard make them applicable.)J
1 G
145 108 320 159 rC
259 152 87 71 rF
0 G
259.5 152.5 86 70 rS
1 G
264 158 76 60 rF
0 G
264.5 158.5 75 59 rS
276 175 52 27 rC
gS
.599 .6 scale
503.587 314.353 :T
-503.587 -314.353 :T
465.587 303.353 :M
f5_14 sf
-.025(Blackboard)A
478.937 318.354 :M
-.093(\(shared)A
487.281 333.355 :M
-.109(data\))A
gR
gR
1 G
gS 145 108 320 159 rC
237 109 280 131 8 @q
0 G
237.5 109.5 280.5 130.5 8 @s
250 116 18 9 rC
gS
.599 .6 scale
431.53 199.347 :T
-431.53 -199.347 :T
420.53 203.347 :M
f5_14 sf
-.174(ks1)A
gR
gR
gS 145 108 320 159 rC
324 109 367 131 8 @q
0 G
323.5 109.5 366.5 130.5 8 @s
336 116 18 9 rC
gS
.599 .6 scale
576.714 199.347 :T
-576.714 -199.347 :T
565.714 203.347 :M
f5_14 sf
-.174(ks2)A
gR
gR
gS 145 108 320 159 rC
372 152 415 174 8 @q
0 G
372.5 152.5 415.5 174.5 8 @s
385 159 18 9 rC
gS
.599 .6 scale
655.815 272.685 :T
-655.815 -272.685 :T
645.815 276.685 :M
f5_14 sf
-.174(ks3)A
gR
gR
gS 145 108 320 159 rC
372 201 415 223 8 @q
0 G
372.5 200.5 415.5 222.5 8 @s
385 208 18 9 rC
gS
.599 .6 scale
655.815 352.69 :T
-655.815 -352.69 :T
645.815 356.69 :M
f5_14 sf
-.174(ks4)A
gR
gR
gS 145 108 320 159 rC
324 244 367 266 8 @q
0 G
323.5 244.5 366.5 265.5 8 @s
336 251 18 9 rC
gS
.599 .6 scale
576.714 424.362 :T
-576.714 -424.362 :T
565.714 428.362 :M
f5_14 sf
-.174(ks5)A
gR
gR
gS 145 108 320 159 rC
237 244 280 266 8 @q
0 G
237.5 244.5 280.5 265.5 8 @s
250 251 18 9 rC
gS
.599 .6 scale
431.53 424.362 :T
-431.53 -424.362 :T
420.53 428.362 :M
f5_14 sf
-.174(ks6)A
gR
gR
gS 145 108 320 159 rC
189 201 232 223 8 @q
0 G
188.5 200.5 231.5 222.5 8 @s
201 208 18 9 rC
gS
.599 .6 scale
350.429 352.69 :T
-350.429 -352.69 :T
340.429 356.69 :M
f5_14 sf
-.174(ks7)A
gR
gR
gS 145 108 320 159 rC
189 152 232 174 8 @q
0 G
188.5 152.5 231.5 174.5 8 @s
201 159 18 9 rC
gS
.599 .6 scale
350.429 272.685 :T
-350.429 -272.685 :T
340.429 276.685 :M
f5_14 sf
-.174(ks8)A
gR
gR
0 G
gS 145 108 320 159 rC
np 259 131 :M
268 136 :L
266 138 :L
264 140 :L
259 131 :L
eofill
np 280 152 :M
271 147 :L
273 145 :L
275 143 :L
280 152 :L
eofill
265 138 -1 1 274 145 1 265 137 @a
np 345 131 :M
340 140 :L
338 138 :L
336 136 :L
345 131 :L
eofill
np 324 152 :M
329 143 :L
331 145 :L
333 147 :L
324 152 :L
eofill
-1 -1 331 146 1 1 337 137 @b
np 372 163 :M
364 169 :L
363 167 :L
362 164 :L
372 163 :L
eofill
np 345 174 :M
354 168 :L
355 170 :L
355 173 :L
345 174 :L
eofill
-1 -1 355 171 1 1 362 166 @b
np 372 212 :M
362 211 :L
363 208 :L
364 206 :L
372 212 :L
eofill
np 345 201 :M
355 202 :L
355 205 :L
354 207 :L
345 201 :L
eofill
354 205 -1 1 363 208 1 354 204 @a
np 345 244 :M
336 239 :L
338 237 :L
340 235 :L
345 244 :L
eofill
np 324 223 :M
333 228 :L
331 230 :L
329 232 :L
324 223 :L
eofill
330 230 -1 1 338 236 1 330 229 @a
np 259 244 :M
264 235 :L
266 237 :L
268 239 :L
259 244 :L
eofill
np 280 223 :M
275 232 :L
273 230 :L
271 228 :L
280 223 :L
eofill
-1 -1 266 237 1 1 273 229 @b
np 232 212 :M
240 206 :L
241 208 :L
242 211 :L
232 212 :L
eofill
np 259 201 :M
250 207 :L
249 205 :L
249 202 :L
259 201 :L
eofill
-1 -1 242 209 1 1 249 204 @b
np 232 163 :M
242 164 :L
241 167 :L
240 169 :L
232 163 :L
eofill
np 259 174 :M
249 173 :L
249 170 :L
250 168 :L
259 174 :L
eofill
241 167 -1 1 250 170 1 241 166 @a
394 109 70 11 rC
gS
.599 .6 scale
715.496 190.68 :T
-715.496 -190.68 :T
657.496 196.68 :M
f5_18 sf
-.096(Computation)A
gR
gR
gS 404 255 46 11 rC
gS
.599 .6 scale
712.852 433.362 :T
-712.852 -433.362 :T
675.852 438.362 :M
f5_18 sf
-.2(Memory)A
gR
gR
.5 G
gS 145 108 320 159 rC
np 329 206 :M
345 211 :L
343 215 :L
342 218 :L
329 206 :L
eofill
342 217 -4 4 407 248 4 342 213 @a
np 367 120 :M
382 113 :L
383 117 :L
384 121 :L
367 120 :L
4 lw
eofill
-4 -4 385 119 4 4 392 113 @b
np 388 152 :M
394 136 :L
397 139 :L
401 141 :L
388 152 :L
eofill
-4 -4 399 141 4 4 408 118 @b
146 109 75 11 rC
gS
.599 .6 scale
304.641 190.68 :T
-304.641 -190.68 :T
243.641 196.68 :M
0 G
f5_18 sf
(Direct access)S
gR
gR
gS 145 108 320 159 rC
np 264 142 :M
247 140 :L
249 136 :L
250 133 :L
264 142 :L
4 lw
eofill
198 122 -4 4 251 134 4 198 118 @a
np 248 163 :M
232 158 :L
234 155 :L
236 151 :L
248 163 :L
eofill
176 122 -4 4 236 153 4 176 118 @a
gR
gS 30 31 552 730 rC
237 283 :M
0 G
f2_12 sf
3.003 .3(Figure 4: The Blackboard)J
108 305 :M
f1_12 sf
5.175 .518(In the diagram there is no explicit representation of the control)J
86 319 :M
1.492 .149(component.  Invocation of a knowledge source is triggered by the state of the)J
86 333 :M
1.414 .141(blackboard.  The actual locus of control, and hence its implementation, can be)J
86 347 :M
4.029 .403(in the knowledge sources, the blackboard, a separate module, or some)J
86 361 :M
1.619 .162(combination of these.)J
108 385 :M
1.233 .123(Blackboard systems have traditionally been used for applications requiring)J
86 399 :M
3.457 .346(complex interpretations of signal processing, such as speech and pattern)J
86 413 :M
.652 .065(recognition.  Several of these are surveyed by Nii [34].  They have also appeared)J
86 427 :M
2.999 .3(in other kinds of systems that involve shared access to data with loosely)J
86 441 :M
-.014(coupled agents [35].)A
108 465 :M
1.853 .185(There are, of course, many other examples of repository systems.  Batch-)J
86 479 :M
2.625 .262(sequential systems with global databases are a special case.  Programming)J
86 493 :M
3.106 .311(environments are often organized as a collection of tools together with a)J
86 507 :M
1.212 .121(shared repository of programs and program fragments [36].  Even applications)J
86 521 :M
2.514 .251(that have been traditionally viewed as pipeline architectures, may be more)J
86 535 :M
1.068 .107(accurately interpreted as repository systems.  For example, as we will see later,)J
86 549 :M
.958 .096(while a compiler architecture has traditionally been presented as a pipeline, the)J
86 563 :M
1.892 .189(\322phases\323 of most modern compilers operate on a base of shared information)J
86 577 :M
.167 .017(\(symbol tables, abstract syntax tree, etc.\).)J
86 601 :M
f3_12 sf
(3.6.)S
122 601 :M
1.347 .135(Table Driven Interpreters)J
86 625 :M
f1_12 sf
1.636 .164(In an interpreter organization a virtual machine is produced in software.  An)J
86 639 :M
6.274 .627(interpreter includes the pseudo-program being interpreted and the)J
86 653 :M
1.868 .187(interpretation engine itself.  The pseudo-program includes the program itself)J
86 667 :M
3.097 .31(and the interpreter\325s analog of its execution state \(activation record\). The)J
86 681 :M
2.361 .236(interpretation engine includes both the definition of the interpreter and the)J
86 695 :M
3.885 .388(current state of )J
f2_12 sf
.881(its)A
f1_12 sf
4.489 .449( execution.  Thus an interpreter generally has four)J
86 709 :M
1.287 .129(components:  an interpretation engine to do the work, a memory that contains)J
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(shaw; page: 17 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(14)S
86 82 :M
1.691 .169(the pseudo-code to be interpreted, a representation of the control state of the)J
86 96 :M
1.418 .142(interpretation engine, and a representation of the current state of the program)J
86 110 :M
.766 .077(being simulated.  \(See Figure 5.\))J
1 G
161 122 288 164 rC
340 123 108 55 rF
0 G
340.5 123.5 107 54 rS
1 G
221 145 60 38 rF
0 G
221.5 145.5 59 37 rS
226 150 44 27 rC
gS
.6 .601 scale
413.339 272.345 :T
-413.339 -272.345 :T
398.339 261.345 :M
f5_14 sf
-.11(Data)A
383.339 276.327 :M
-.062(\(program)A
395.006 291.308 :M
-.065(state\))A
gR
gR
1 G
gS 161 122 288 164 rC
394 248 27 @i
0 G
394 248 26.5 @e
1 G
55 54 248.5 248 @j
0 G
54 53 248.5 248 @f
np 221 166 :M
213 168 :L
213 166 :L
213 164 :L
221 166 :L
eofill
167 167 -1 1 214 166 1 167 166 @a
np 167 248 :M
175 245 :L
175 248 :L
175 249 :L
167 248 :L
eofill
175 249 -1 1 222 248 1 175 248 @a
np 372 231 :M
364 228 :L
365 226 :L
367 224 :L
372 231 :L
eofill
280 167 -1 1 366 226 1 280 166 @a
np 394 220 :M
391 212 :L
394 212 :L
396 212 :L
394 220 :L
eofill
-1 -1 395 213 1 1 394 177 @b
np 275 248 :M
283 245 :L
283 248 :L
283 249 :L
275 248 :L
eofill
283 249 -1 1 368 248 1 283 248 @a
np 253 221 :M
251 212 :L
253 212 :L
256 212 :L
253 221 :L
eofill
-1 -1 254 213 1 1 253 183 @b
np 243 183 :M
245 191 :L
243 191 :L
240 191 :L
243 183 :L
eofill
-1 -1 244 222 1 1 243 191 @b
175 156 30 9 rC
gS
.6 .601 scale
316.004 265.668 :T
-316.004 -265.668 :T
295.004 269.668 :M
f5_14 sf
-.197(Inputs)A
gR
gR
gS 178 237 37 9 rC
gS
.6 .601 scale
326.005 400.502 :T
-326.005 -400.502 :T
300.005 404.502 :M
0 G
f5_14 sf
-.107(Outputs)A
gR
gR
gS 291 251 63 9 rC
gS
.6 .601 scale
536.674 423.807 :T
-536.674 -423.807 :T
491.674 427.807 :M
0 G
f5_14 sf
-.019(Selected data)A
gR
gR
gS 276 237 89 9 rC
gS
.6 .601 scale
532.674 400.502 :T
-532.674 -400.502 :T
466.674 404.502 :M
0 G
f5_14 sf
-.041(Selected instruction)A
gR
gR
gS 225 234 46 36 rC
gS
.6 .601 scale
412.006 420.173 :T
-412.006 -420.173 :T
380.006 401.173 :M
0 G
f5_14 sf
-.111(Simulated)A
391.673 416.154 :M
-.09(Interp-)A
388.339 431.136 :M
-.046(retation)A
390.006 446.118 :M
-.133(Engine)A
gR
gR
gS 369 237 50 27 rC
gS
.6 .601 scale
655.676 415.502 :T
-655.676 -415.502 :T
631.676 404.502 :M
0 G
f5_14 sf
-.079(Internal)A
621.676 419.484 :M
-.099(Interpreter)A
640.01 434.465 :M
-.055(State)A
gR
gR
gS 368 139 52 27 rC
gS
.6 .601 scale
655.676 254.034 :T
-655.676 -254.034 :T
626.676 243.034 :M
0 G
f5_14 sf
-.093(Program)A
636.676 258.016 :M
-.221(Being)A
620.009 272.997 :M
-.01(Interpreted)A
gR
gR
gS 286 129 45 10 rC
gS
.6 .601 scale
512.674 223.053 :T
-512.674 -223.053 :T
476.674 228.053 :M
0 G
f5_18 sf
-.2(Memory)A
gR
gR
.5 G
gS 161 122 288 164 rC
np 280 156 :M
289 141 :L
292 144 :L
295 147 :L
280 156 :L
eofill
-4 -4 295 146 4 4 295 138 @b
np 378 231 :M
364 221 :L
367 218 :L
371 215 :L
378 231 :L
4 lw
eofill
306 142 -4 4 370 216 4 306 138 @a
np 351 150 :M
334 148 :L
335 145 :L
336 141 :L
351 150 :L
eofill
316 142 -4 4 337 143 4 316 138 @a
162 193 70 11 rC
gS
.6 .601 scale
328.004 331.253 :T
-328.004 -331.253 :T
270.004 336.253 :M
0 G
f5_18 sf
-.096(Computation)A
gR
gR
gS 178 204 61 11 rC
gS
.6 .601 scale
345.671 349.564 :T
-345.671 -349.564 :T
296.671 354.564 :M
0 G
f5_18 sf
(state mach)S
gR
gR
gS 161 122 288 164 rC
np 237 231 :M
220 228 :L
222 225 :L
223 221 :L
237 231 :L
4 lw
eofill
198 217 -4 4 224 223 4 198 213 @a
270 264 68 11 rC
gS
.6 .601 scale
506.007 446.776 :T
-506.007 -446.776 :T
450.007 452.776 :M
0 G
f5_18 sf
(Data access)S
gR
gR
gS 161 122 288 164 rC
np 253 193 :M
266 204 :L
263 207 :L
259 209 :L
253 193 :L
4 lw
eofill
261 209 -4 4 304 262 4 261 205 @a
np 340 247 :M
331 262 :L
328 259 :L
325 256 :L
340 247 :L
eofill
-4 -4 326 266 4 4 326 257 @b
324 275 63 10 rC
gS
.6 .601 scale
592.008 465.087 :T
-592.008 -465.087 :T
540.008 471.087 :M
0 G
f5_18 sf
-.099(Fetch/store)A
gR
gR
gS 30 31 552 730 rC
250 302 :M
0 G
f2_12 sf
2.835 .283(Figure 5: Interpreter)J
108 324 :M
f1_12 sf
2.215 .221(Interpreters are commonly used to build virtual machines that close the)J
86 338 :M
1.543 .154(gap between the computing engine expected by the semantics of the program)J
86 352 :M
1.54 .154(and the computing engine available in hardware.  We occasionally speak of a)J
86 366 :M
.958 .096(programming language as providing, say, a \322virtual Pascal machine.\323)J
108 390 :M
1.07 .107(We will return to interpreters in more detail in the case studies.)J
86 414 :M
f3_12 sf
(3.7.)S
122 414 :M
1.218 .122(Other Familiar Architectures)J
86 438 :M
f1_12 sf
4.192 .419(There are numerous other architectural styles and patterns.  Some are)J
86 452 :M
1.954 .195(widespread and others are specific to particular domains.  While a complete)J
86 466 :M
.658 .066(treatment of these is beyond the scope of this paper, we briefly note a few of the)J
86 480 :M
1.451 .145(important categories.)J
113 503 :M
f0_12 sf
.969 .097(\245 Distributed processes:)J
f1_12 sf
.678 .068(  Distributed systems have developed a number of)J
122 517 :M
2.869 .287(common organizations for multi-process systems [37].  Some can be)J
122 531 :M
2.093 .209(characterized primarily by their topological features, such as ring and)J
122 545 :M
1.265 .126(star organizations.  Others are better characterized in terms of the kinds)J
122 559 :M
4.447 .445(of inter-process protocols that are used for communication \(e.g.,)J
122 573 :M
1.558 .156(heartbeat algorithms\).)J
86 596 :M
3.459 .346(One common form of distributed system architecture is a \322client-server\323)J
86 610 :M
1.241 .124(organization [38].  In these systems a server represents a process that provides)J
86 624 :M
1.624 .162(services to other processes \(the clients\).  Usually the server does not know in)J
86 638 :M
1.65 .165(advance the identities or number of clients that will access it at run time. On)J
86 652 :M
1.036 .104(the other hand, clients know the identity of a server \(or can find it out through)J
86 666 :M
.713 .071(some other server\) and access it by remote procedure call.)J
113 689 :M
f0_12 sf
1.894 .189(\245 Main program/subroutine organizations:)J
f1_12 sf
1.139 .114(  The primary organization of)J
122 703 :M
1.753 .175(many systems mirrors the programming language in which the system)J
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(shaw; page: 18 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(15)S
122 82 :M
1.315 .132(is written.  For languages without support for modularization this often)J
122 96 :M
2.986 .299(results in a system organized around a main program and a set of)J
122 110 :M
1.799 .18(subroutines.  The main program acts as the driver for the subroutines,)J
122 124 :M
5.514 .551(typically providing a control loop for sequencing through the)J
122 138 :M
1.411 .141(subroutines in some order.)J
113 160 :M
f0_12 sf
4.792 .479(\245 Domain-specific software architectures:)J
f1_12 sf
2.655 .265(  Recently there has been)J
122 174 :M
1.46 .146(considerable interest in developing \322reference\323 architectures for specific)J
122 188 :M
2.097 .21(domains [39].  These architectures provide an organizational structure)J
122 202 :M
2.811 .281(tailored to a family of applications, such as avionics, command and)J
122 216 :M
5.87 .587(control, or vehicle management systems.  By specializing the)J
122 230 :M
2.987 .299(architecture to the domain, it is possible to increase the descriptive)J
122 244 :M
.937 .094(power of structures. Indeed, in many cases the architecture is sufficiently)J
122 258 :M
1.216 .122(constrained that an executable system can be generated automatically or)J
122 272 :M
1.405 .141(semi-automatically from the architectural description itself.)J
113 294 :M
f0_12 sf
2.137 .214(\245 State transition systems: )J
f1_12 sf
2.295 .229( A common organization for many reactive)J
122 308 :M
1.196 .12(systems is the state transition system [40].  These systems are defined in)J
122 322 :M
1.517 .152(terms a set of states and a set of named transitions that move a system)J
122 336 :M
1.204 .12(from one state to another.)J
113 358 :M
f0_12 sf
1.427 .143(\245 Process control systems:)J
f1_12 sf
1.226 .123(  Systems intended to provide dynamic control)J
122 372 :M
.935 .093(of a physical environment are often organized as process control systems)J
122 386 :M
.476 .048([41].  These systems are roughly characterized as a feedback loop in which)J
122 400 :M
1.111 .111(inputs from sensors are used by the process control system to determine)J
122 414 :M
.924 .092(a set of outputs that will produce a new state of the environment.)J
86 437 :M
f3_12 sf
(3.8. )S
122 437 :M
2.7 .27(Heterogeneous Architectures)J
86 461 :M
f1_12 sf
3.253 .325(Thus far we have been speaking primarily of \322pure\323 architectural styles.)J
86 475 :M
2.337 .234(While  it is important to understand the individual nature of each of these)J
86 489 :M
1.044 .104(styles, most systems typically involve some combination of several styles.)J
108 513 :M
2.341 .234(There are different ways in which architectural styles can be combined.)J
86 527 :M
2.189 .219(One way is through hierarchy.  A component of a system organized in one)J
86 541 :M
4.432 .443(architectural style may have an internal structure that is developed a)J
86 555 :M
2.686 .269(completely different style.  For example, in a Unix pipeline the individual)J
86 569 :M
4.667 .467(components may be represented internally using virtually any style\321)J
86 583 :M
.931 .093(including, of course, another pipe and filter, system.)J
108 607 :M
3.02 .302(What is perhaps more surprising is that connectors, too, can often be)J
86 621 :M
5.603 .56(hierarchically decomposed.  For example, a pipe connector may be)J
86 635 :M
3.637 .364(implemented internally as a FIFO queue accessed by insert and remove)J
86 649 :M
.274(operations.)A
108 673 :M
1.071 .107(A second way for styles to be combined is to permit a single component to)J
86 687 :M
2.13 .213(use a mixture of architectural connectors.  For example, a component might)J
86 701 :M
.934 .093(access a repository through part of its interface, but interact through pipes with)J
86 715 :M
4.131 .413(other components in a system, and accept control information through)J
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(shaw; page: 19 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(16)S
86 82 :M
1.359 .136(another part of its interface.  \(In fact, Unix pipe and filter systems do this, the)J
86 96 :M
.991 .099(file system playing the role of the repository and initialization switches playing)J
86 110 :M
1.151 .115(the role of control.\))J
108 134 :M
3.125 .312(Another example is an \322active database\323.  This is a repository which)J
86 148 :M
5.986 .599(activates external components through implicit invocation.  In this)J
86 162 :M
1.506 .151(organization external components register interest in portions of the database.)J
86 176 :M
3.926 .393(The database automatically invokes the appropriate tools based on this)J
86 190 :M
.67 .067(association.  \(Blackboards are often constructed this way; knowledge sources are)J
86 204 :M
1.225 .122(associated with specific kinds of data, and are activated whenever that kind of)J
86 218 :M
.721 .072(data is modified.\))J
108 242 :M
.654 .065(A third way for styles to be combined is to completely elaborate one level of)J
86 256 :M
1.562 .156(architectural description in a completely different architectural style.  We will)J
86 270 :M
.746 .075(see examples of this in the case studies.)J
86 300 :M
f0_14 sf
.5(4.)A
122 300 :M
(Case Studies)S
86 325 :M
f1_12 sf
1.561 .156(We now present six examples to illustrate how architectural principles can be)J
86 339 :M
2.296 .23(used to increase our understanding of software systems.  The first example)J
86 353 :M
3.264 .326(shows how different architectural solutions to the same problem provide)J
86 367 :M
.963 .096(different benefits.  The second case study summarizes experience in developing)J
86 381 :M
1.317 .132(a a domain-specific architectural style for a family of industrial products.  The)J
86 395 :M
2.035 .204(third case study examines the familiar compiler architecture in a fresh light.)J
86 409 :M
1.136 .114(The remaining three case studies present examples of the use of heterogeneous)J
86 423 :M
.213(architectures.)A
86 447 :M
f3_12 sf
(4.1. )S
122 447 :M
.604 .06(Case Study 1: Key Word in Context)J
86 471 :M
f1_12 sf
.53 .053(In his paper of 1972, Parnas proposed the following problem [42]:)J
122 495 :M
.839 .084(The KWIC [Key Word in Context] index system accepts an ordered set of)J
122 509 :M
1.28 .128(lines, each line is an ordered set of words, and each word is an ordered)J
122 523 :M
2.189 .219(set of characters.  Any line may be ``circularly shifted'' by repeatedly)J
122 537 :M
1.974 .197(removing the first word and appending it at the end of the line.  The)J
122 551 :M
1.599 .16(KWIC index system outputs a listing of all circular shifts of all lines in)J
122 565 :M
.936 .094(alphabetical order.)J
108 589 :M
2.036 .204(Parnas used the problem to contrast different criteria for decomposing a)J
86 603 :M
2.452 .245(system into modules.  He describes two solutions, one based on functional)J
86 617 :M
1.405 .141(decomposition with shared access to data representations, and a second based)J
86 631 :M
2.398 .24(on a decomposition that hides design decisions.  Since its introduction, the)J
86 645 :M
1.956 .196(problem has become well-known and is widely used as a teaching device in)J
86 659 :M
2.663 .266(software engineering.  Garlan, Kaiser, and Notkin also use the problem to)J
86 673 :M
1.295 .13(illustrate modularization schemes based on implicit invocation [7].)J
108 697 :M
2.577 .258(While KWIC can be implemented as a relatively small system it is not)J
86 711 :M
2.288 .229(simply of pedagogical interest.  Practical instances of it are widely used by)J
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(shaw; page: 20 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(17)S
86 82 :M
.997 .1(computer scientists.  For example, the \322permuted\323 [sic] index for the Unix Man)J
86 96 :M
.512 .051(pages is essentially such a system.)J
108 120 :M
2.121 .212(From the point of view of software architecture, the problem derives its)J
86 134 :M
1.866 .187(appeal from the fact that it can be used to illustrate the effect of changes on)J
86 148 :M
2.353 .235(software design.  Parnas shows that different problem decompositions vary)J
86 162 :M
2.021 .202(greatly in their ability to withstand design changes.  Among the changes he)J
86 176 :M
.95 .095(considers are:)J
113 199 :M
2.937 .294(\245 Changes in processing algorithm: For example, line shifting can be)J
122 213 :M
2.119 .212(performed on each line as it is read from the input device, on all the)J
122 227 :M
3.661 .366(lines after they are read, or on demand when the alphabetization)J
122 241 :M
.754 .075(requires a new set of shifted lines.)J
113 263 :M
2.326 .233(\245 Changes in data representation:  For example, lines can be stored in)J
122 277 :M
3.444 .344(various ways.  Similarly, circular shifts can be stored explicitly or)J
122 291 :M
.631 .063(implicitly \(as pairs of index and offset\).)J
108 314 :M
.767 .077(Garlan, Kaiser, and Notkin, extend Parnas\325 analysis by considering:)J
113 337 :M
1.932 .193(\245 Enhancement to system function:  For example, modify the system so)J
122 351 :M
1.408 .141(that shifted lines to eliminate circular shifts that start with certain noise)J
122 365 :M
3.653 .365(words \(such as \322a\323, \322an\323, \322and\323, etc.\).  Change the system to be)J
122 379 :M
2.915 .291(interactive, and allow the user to delete lines from the original \(or,)J
122 393 :M
1.186 .119(alternatively, from circularly shifted\) lists.)J
113 415 :M
.829 .083(\245 Performance:  Both space and time.)J
113 437 :M
.922 .092(\245 Reuse:  To what extent can the components serve as reusable entities.)J
108 460 :M
1.488 .149(We now outline four architectural designs for the KWIC system.  All four)J
86 474 :M
2.307 .231(are grounded in published solutions \(including implementations\).  The first)J
86 488 :M
.962 .096(two are those considered in Parnas\325 original article.  The third solution is based)J
86 502 :M
2.803 .28(on the use of an implicit invocation style and represents a variant on the)J
86 516 :M
2.377 .238(solution examined by Garlan, Kaiser, and Notkin.  The fourth is a pipeline)J
86 530 :M
1.046 .105(solution inspired by the Unix index utility.)J
108 554 :M
1.896 .19(After presenting each solution and briefly summarizing its strengths and)J
86 568 :M
2.672 .267(weakness, we contrast the different architectural decompositions in a table)J
86 582 :M
1.221 .122(organized along the five design dimensions itemized above.)J
86 606 :M
f2_12 sf
3.449 .345(Solution 1: Main Program/Subroutine with Shared Data)J
86 630 :M
f1_12 sf
4.109 .411(The first solution decomposes the problem according to the four basic)J
86 644 :M
6.417 .642(functions performed: input, shift, alphabetize, and output.  These)J
86 658 :M
1.403 .14(computational components are coordinated as subroutines by a main program)J
86 672 :M
2.829 .283(that sequences through them in turn.  Data is communicated between the)J
86 686 :M
1.436 .144(components through shared storage \(\322core storage\323\). Communication between)J
86 700 :M
1.641 .164(the computational components and the shared data is an unconstrained read-)J
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(shaw; page: 21 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(18)S
86 82 :M
.919 .092(write protocol.  This is made possible by the fact that the coordinating program)J
86 96 :M
1 G
0 G
.562 .056(guarantees sequential access to the data.  \(See Figure 6.\))J
1 G
121 108 368 210 rC
272 110 85 32 rF
.86 0 .504 :F
272.5 110.5 84 31 rS
gS
.076 .076 scale
3658.372 1695.917 :M
1 G
f5_128 sf
.86 0 .504 :F
(Master Control)S
gR
1 G
139 173 62 30 rF
.86 0 .504 :F
139.5 173.5 61 29 rS
gS
.076 .076 scale
2058.654 2484.715 :M
1 G
f5_128 sf
.86 0 .504 :F
-.18(Input)A
gR
1 G
223 173 85 32 rF
.86 0 .504 :F
223.5 173.5 84 31 rS
gS
.076 .076 scale
3120.762 2484.715 :M
1 G
f5_128 sf
.86 0 .504 :F
-.036(Circular Shift)A
gR
1 G
324 174 89 32 rF
.86 0 .504 :F
324.5 174.5 88 31 rS
gS
.076 .076 scale
4484.456 2524.155 :M
1 G
f5_128 sf
.86 0 .504 :F
(Alphabetizer)S
gR
1 G
427 174 62 32 rF
.86 0 .504 :F
427.5 174.5 61 31 rS
gS
.076 .076 scale
5808.813 2511.008 :M
1 G
f5_128 sf
.86 0 .504 :F
-.063(Output)A
gR
1 G
124 282 69 36 rF
.86 0 .504 :F
124.5 282.5 68 35 rS
gS
.076 .076 scale
1914.417 3878.259 :M
f5_128 sf
-.18(Input)A
1822.63 4036.018 :M
1 G
.86 0 .504 :F
-.094(Medium)A
gR
1 G
169 238 80 35 rF
.86 0 .504 :F
169.5 238.5 79 34 rS
gS
.076 .076 scale
2399.577 3365.54 :M
1 G
f5_128 sf
.86 0 .504 :F
-.059(Characters)A
gR
1 G
280 238 63 35 rF
.86 0 .504 :F
280.5 238.5 62 34 rS
gS
.076 .076 scale
3907.509 3365.54 :M
1 G
f5_128 sf
.86 0 .504 :F
-.062(Index)A
gR
1 G
376 238 77 34 rF
.86 0 .504 :F
376.5 238.5 76 33 rS
gS
.076 .076 scale
5022.066 3312.953 :M
f5_128 sf
-.031(Alphabetized)A
5258.09 3444.42 :M
1 G
.86 0 .504 :F
-.062(Index)A
gR
1 G
417 279 72 34 rF
.86 0 .504 :F
417.5 279.5 71 33 rS
gS
.076 .076 scale
5717.026 3812.526 :M
f5_128 sf
-.063(Output)A
5677.689 3970.285 :M
-.094(Medium)A
gR
np 188 171 :M
200 163 :L
196 168 :L
202 171 :L
188 171 :L
eofill
-1 -1 197 169 1 1 281 141 @b
np 278 171 :M
285 158 :L
284 165 :L
291 164 :L
278 171 :L
eofill
-1 -1 285 166 1 1 308 142 @b
np 356 171 :M
344 164 :L
350 165 :L
349 158 :L
356 171 :L
eofill
329 144 -1 1 351 165 1 329 143 @a
np 464 172 :M
449 172 :L
454 169 :L
451 164 :L
464 172 :L
eofill
353 143 -1 1 456 169 1 353 142 @a
-1 -1 154 284 1 1 163 203 @b
474 205 -1 1 482 279 1 474 204 @a
np 201 237 :M
196 233 :L
199 232 :L
201 230 :L
201 237 :L
eofill
187 203 -1 1 199 232 1 187 202 @a
np 218 238 :M
220 231 :L
222 233 :L
224 235 :L
218 238 :L
eofill
-1 -1 222 234 1 1 252 204 @b
np 320 238 :M
313 236 :L
315 234 :L
317 232 :L
320 238 :L
eofill
285 205 -1 1 315 234 1 285 204 @a
np 232 237 :M
237 232 :L
237 235 :L
239 238 :L
232 237 :L
eofill
-1 -1 238 235 1 1 328 205 @b
np 245 238 :M
250 233 :L
250 236 :L
250 239 :L
245 238 :L
eofill
-1 -1 251 236 1 1 446 205 @b
np 429 238 :M
421 236 :L
424 233 :L
425 231 :L
429 238 :L
eofill
387 207 -1 1 424 233 1 387 206 @a
np 330 238 :M
332 231 :L
334 233 :L
336 235 :L
330 238 :L
eofill
-1 -1 334 234 1 1 358 206 @b
np 443 239 :M
443 232 :L
446 234 :L
448 235 :L
443 239 :L
eofill
-1 -1 447 235 1 1 468 204 @b
np 149 119 :M
142 122 :L
142 119 :L
142 115 :L
149 119 :L
eofill
122 119 -1 1 143 118 1 122 118 @a
gS
.076 .076 scale
2006.204 1538.157 :M
f5_128 sf
(Direct Memory Access)S
gR
122 146 -1 1 151 145 1 122 145 @a
np 150 133 :M
136 137 :L
141 133 :L
136 129 :L
150 133 :L
eofill
122 134 -1 1 142 133 1 122 133 @a
gS
.076 .076 scale
2006.204 1945.703 :M
f5_128 sf
-.052(System I/O)A
2006.204 1722.21 :M
0 G
.86 0 .504 :F
-.004(Subprogram Call)A
gR
gR
gS 30 31 552 730 rC
196 334 :M
f2_12 sf
2.399 .24(Figure 6: KWIC \320 Shared Data Solution)J
108 356 :M
f1_12 sf
1.431 .143(Using this solution data can be represented efficiently, since computations)J
86 370 :M
1.881 .188(can share the same storage.  The solution also has a certain intuitive appeal,)J
86 384 :M
1.048 .105(since distinct computational aspects are isolated in different modules.)J
108 408 :M
1.185 .119(However, as Parnas argues, it has a number of serious drawbacks in terms)J
86 422 :M
1.338 .134(of its ability to handle changes.  In particular, a change in data storage format)J
86 436 :M
3.863 .386(will affect almost all of the modules.  Similarly changes in the overall)J
86 450 :M
3.117 .312(processing algorithm and enhancements to system function are not easily)J
86 464 :M
2.392 .239(accomodated.  Finally, this decom-position is not particularly supportive of)J
86 478 :M
.291(reuse.)A
86 502 :M
f2_12 sf
2.183 .218(Solution 2: Abstract Data Types)J
86 526 :M
f1_12 sf
1.302 .13(The second solution decomposes the system into a similar set of five modules.)J
86 540 :M
1.798 .18(However, in this case data is no longer directly shared by the computational)J
86 554 :M
2.233 .223(components.  Instead, each module provides an interface that permits other)J
86 568 :M
1.294 .129(components to access data only by invoking procedures in that interface.  \(See)J
86 582 :M
2.944 .294(Figure 7, which illustrates how each of the components now has a set of)J
86 596 :M
2.906 .291(procedures that determine the form of access by other components in the)J
86 610 :M
.131(system.\))A
108 634 :M
2.984 .298(This solution provides the same logical decomposition into processing)J
86 648 :M
1.878 .188(modules as the first.  However, it has a number of advantages over the first)J
86 662 :M
1.848 .185(solution when design changes are considered.  In particular, both algorithms)J
86 676 :M
3.583 .358(and data representations can be changed in individual modules without)J
86 690 :M
1.369 .137(affecting others.  Moreover, reuse is better supported than in the first solution)J
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(shaw; page: 22 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(19)S
86 82 :M
2.016 .202(because modules make fewer assumptions about the others with which they)J
86 96 :M
1 G
0 G
.237(interact.)A
1 G
128 108 355 232 rC
282 108 84 32 rF
.86 0 .504 :F
282.5 108.5 83 31 rS
gS
.075 .075 scale
3851.923 1677.679 :M
1 G
f5_128 sf
.86 0 .504 :F
(Master Control)S
gR
1 G
166 170 60 29 rF
.86 0 .504 :F
166.5 170.5 59 28 rS
gS
.075 .075 scale
2452.435 2476.574 :M
1 G
f5_128 sf
.86 0 .504 :F
-.18(Input)A
gR
1 G
423 171 60 31 rF
.86 0 .504 :F
423.5 171.5 59 30 rS
gS
.075 .075 scale
5811.205 2489.889 :M
1 G
f5_128 sf
.86 0 .504 :F
-.063(Output)A
gR
1 G
131 304 68 35 rF
.86 0 .504 :F
131.5 304.5 67 34 rS
gS
.075 .075 scale
2025.925 4220.827 :M
f5_128 sf
-.18(Input)A
1932.626 4367.291 :M
1 G
.86 0 .504 :F
-.094(Medium)A
gR
1 G
423 307 59 33 rF
.86 0 .504 :F
423.5 307.5 58 32 rS
gS
.075 .075 scale
5811.205 4234.142 :M
f5_128 sf
-.063(Output)A
5784.548 4380.606 :M
-.094(Medium)A
gR
np 214 168 :M
225 159 :L
222 164 :L
228 166 :L
214 168 :L
eofill
-1 -1 223 165 1 1 281 139 @b
np 468 172 :M
454 171 :L
459 168 :L
456 163 :L
468 172 :L
eofill
367 138 -1 1 461 168 1 367 137 @a
-1 -1 152 304 1 1 172 200 @b
461 202 -1 1 477 305 1 461 201 @a
129 138 -1 1 157 137 1 129 137 @a
np 157 124 :M
143 128 :L
147 124 :L
143 120 :L
157 124 :L
eofill
129 125 -1 1 148 124 1 129 124 @a
gS
.075 .075 scale
2185.866 1850.773 :M
f5_128 sf
-.052(System I/O)A
2185.866 1677.679 :M
1 G
.86 0 .504 :F
-.004(Subprogram Call)A
gR
1 G
177 274 78 20 rF
.86 0 .504 :F
177.5 274.5 77 19 rS
gS
.075 .075 scale
2532.406 3834.695 :M
1 G
f5_128 sf
.86 0 .504 :F
-.059(Characters)A
gR
1 G
231 240 16 40 rF
.86 0 .504 :F
231.5 240.5 15 39 rS
233 248 23 24 rC
32 34 1 4 23 24 233 248 T T 1 :f
.86 0 .504 :i 000000000000000000000000000000000FF8000002080000020800000208000001F00000000000000200000002000000020000000100000003F80000000000000000000001F0000002080000020800000208000001F00000000000000000000003000000
00C000000038000000C000000300000000C000000038000000C000000300000000000000
%ADOeod
:j
gR
1 G
gS 128 108 355 232 rC
189 240 16 40 rF
.86 0 .504 :F
189.5 240.5 15 39 rS
190 242 23 36 rC
32 50 1 4 23 36 190 242 T T 1 :f
.86 0 .504 :i 00000000000000000200000002000000020000000100000003F80000000000000000000001F8000002880000028800000288000001700000000000000000000001F800000200000002000000010000000FF8000000000000000000000110000002080000
020800000208000001F00000000000000000000000080000020800000FF0000002000000000000000000000001D0000002480000024800000248000001F00000000000000000000001300000024800000248000002480000019000000000000000000000
%ADOeod
:j
gR
gS 128 108 355 232 rC
210 240 16 40 rF
.86 0 .504 :F
210.5 240.5 15 39 rS
212 248 23 22 rC
32 30 1 4 23 22 212 248 T T 1 :f
.86 0 .504 :i 0000000000000000000000000200000002000000020000000100000003F80000000000000000000001F8000002880000028800000288000001700000000000000000000001F800000200000002000000010000000FF80000000000000000000001100000
02080000020800000208000001F0000000000000
%ADOeod
:j
gR
gS 128 108 355 232 rC
279 276 74 18 rF
.86 0 .504 :F
279.5 276.5 73 17 rS
gS
.075 .075 scale
3798.609 3861.325 :M
1 G
f5_128 sf
.86 0 .504 :F
-.036(Circular Shift)A
gR
1 G
282 240 16 41 rF
.86 0 .504 :F
282.5 240.5 15 40 rS
283 248 23 26 rC
32 37 1 4 23 26 283 248 T T 1 :f
.86 0 .504 :i 0000000000000000000000000000000001F0000002080000020800000208000003FE0000000000000000000003F8000000100000000800000008000003F00000000000000000000000080000020800000FF0000002000000000000000000000001D00000
02480000024800000248000001F000000000000000000000013000000248000002480000024800000190000000000000
%ADOeod
:j
gR
gS 128 108 355 232 rC
301 240 16 41 rF
.86 0 .504 :F
301.5 240.5 15 40 rS
303 243 23 36 rC
32 50 1 4 23 36 303 243 T T 1 :f
.86 0 .504 :i 00000000000000000200000002000000020000000100000003F80000000000000000000001F8000002880000028800000288000001700000000000000000000001F800000200000002000000010000000FF8000000000000000000000110000002080000
020800000208000001F00000000000000000000000080000020800000FF0000002000000000000000000000001D0000002480000024800000248000001F00000000000000000000001300000024800000248000002480000019000000000000000000000
%ADOeod
:j
gR
gS 128 108 355 232 rC
320 240 16 41 rF
.86 0 .504 :F
320.5 240.5 15 40 rS
322 251 23 21 rC
32 30 1 4 23 21 322 251 T T 1 :f
.86 0 .504 :i 0000000000000000000000000200000002000000020000000100000003F80000000000000000000001F8000002880000028800000288000001700000000000000000000001F800000200000002000000010000000FF80000000000000000000001100000
02080000020800000208000001F0000000000000
%ADOeod
:j
gR
gS 128 108 355 232 rC
339 240 15 41 rF
.86 0 .504 :F
339.5 240.5 14 40 rS
341 249 23 25 rC
32 34 1 4 23 25 341 249 T T 1 :f
.86 0 .504 :i 000000000000000000000000000000000FF8000002080000020800000208000001F00000000000000200000002000000020000000100000003F80000000000000000000001F0000002080000020800000208000001F00000000000000000000003000000
00C000000038000000C000000300000000C000000038000000C000000300000000000000
%ADOeod
:j
gR
gS 128 108 355 232 rC
382 268 76 27 rF
.86 0 .504 :F
382.5 268.5 75 26 rS
gS
.075 .075 scale
5264.739 3741.49 :M
f5_128 sf
-.018(Alphabetic)A
5411.352 3901.269 :M
1 G
.86 0 .504 :F
-.093(Shifts)A
gR
1 G
420 231 16 40 rF
.86 0 .504 :F
420.5 231.5 15 39 rS
423 243 23 20 rC
32 27 1 4 23 20 423 243 T T 1 :f
.86 0 .504 :i 00000000000000000000000003F000000400000004000000020000001FF00000000000000000000000100000041000001FE00000040000000000000000000000010000000100000001000000010000000100000000000000000000000000000017F00000
0400000000000000
%ADOeod
:j
gR
gS 128 108 355 232 rC
399 230 16 41 rF
.86 0 .504 :F
399.5 230.5 15 40 rS
400 242 23 21 rC
32 29 1 4 23 21 400 242 T T 1 :f
.86 0 .504 :i 0000000000000000000000000000000001F800000200000002000000010000000FF80000000000000000000001F0000002080000020800000208000003FE00000000000000000000000000000FF8000008000000000000000000000001F8000002880000
02880000028800000170000000000000
%ADOeod
:j
gR
.86 0 .504 :F
gS 128 108 355 232 rC
np 196 240 :M
192 226 :L
196 230 :L
200 226 :L
196 240 :L
eofill
-1 -1 197 232 1 1 196 199 @b
np 217 240 :M
213 227 :L
217 231 :L
221 227 :L
217 240 :L
eofill
-1 -1 218 232 1 1 217 220 @b
np 239 240 :M
235 226 :L
239 230 :L
243 226 :L
239 240 :L
eofill
-1 -1 240 232 1 1 239 219 @b
np 327 240 :M
323 227 :L
327 231 :L
331 227 :L
327 240 :L
eofill
-1 -1 328 232 1 1 327 220 @b
np 345 241 :M
341 227 :L
345 232 :L
349 227 :L
345 241 :L
eofill
-1 -1 346 233 1 1 345 220 @b
217 220 -1 1 266 219 1 217 219 @a
-1 -1 266 283 1 1 265 219 @b
265 283 -1 1 281 282 1 265 282 @a
np 293 240 :M
289 227 :L
293 231 :L
297 227 :L
293 240 :L
eofill
-1 -1 294 232 1 1 293 139 @b
np 407 232 :M
403 218 :L
407 222 :L
411 218 :L
407 232 :L
eofill
-1 -1 408 224 1 1 407 203 @b
np 428 232 :M
424 218 :L
428 222 :L
432 218 :L
428 232 :L
eofill
-1 -1 429 224 1 1 428 202 @b
-1 -1 348 204 1 1 347 139 @b
327 221 -1 1 367 220 1 327 220 @a
-1 -1 367 285 1 1 366 220 @b
367 285 -1 1 383 284 1 367 284 @a
347 203 -1 1 409 202 1 347 202 @a
gR
gS 30 31 552 730 rC
178 356 :M
0 G
f2_12 sf
2.09 .209(Figure 7: KWIC \320 Abstract Data Type Solution)J
108 378 :M
f1_12 sf
.86 .086(On the other hand, as discussed by Garlan, Kaiser, and Notkin, the solution)J
86 392 :M
1.718 .172(is not particularly well-suited to enhancements.  The main problem is that to)J
86 406 :M
2.637 .264(add new functions to the system, the implementor must either modify the)J
86 420 :M
2.208 .221(existing modules\321compromising their simplicity and integrity\321or add new)J
86 434 :M
.706 .071(modules that lead to performance penalties.  \(See [7] for a detailed discussion.\))J
86 458 :M
f2_12 sf
3.824 .382(Solution 3: Implicit Invocation)J
86 482 :M
f1_12 sf
1.325 .132(The third solution uses a form of component integration based on shared data)J
86 496 :M
2.33 .233(similar to the first solution.  However, there are two important differences.)J
86 510 :M
2.71 .271(First, the interface to the data is more abstract.  Rather than exposing the)J
86 524 :M
2.707 .271(storage formats to the computing modules, data is accessed abstractly \(for)J
86 538 :M
.785 .078(example, as a list or a set\).  Second, computations are invoked implicitly as data)J
86 552 :M
1.387 .139(is modified.  Thus interaction is based on an active data model.  For example,)J
86 566 :M
.864 .086(the act of adding a new line to the line storage causes an event to be sent to the)J
86 580 :M
1.803 .18(shift module.  This allows it to produce circular shifts \(in a separate abstract)J
86 594 :M
3.293 .329(shared data store\).  This in turn causes the alphabetizer to be implicitly)J
86 608 :M
1.023 .102(invoked so that it can alphabetize the lines.)J
108 632 :M
3.542 .354(This solution easily supports functional enhancements to the system:)J
86 646 :M
2.159 .216(additional modules can be attached to the system by registering them to be)J
86 660 :M
1.717 .172(invoked on data-changing events.  Because data is accessed abstractly, it also)J
86 674 :M
2.624 .262(insulates computations from changes in data representation.  Reuse is also)J
86 688 :M
1.651 .165(supported, since the implicitly invoked modules only rely on the existence of)J
86 702 :M
1.01 .101(certain externally triggered events.)J
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(shaw; page: 23 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
1 G
0 G
(20)S
1 G
126 72 359 195 rC
426 233 59 33 rF
.86 0 .504 :F
426.5 233.5 58 32 rS
gS
.075 .075 scale
5852.381 3254.128 :M
f5_128 sf
-.063(Output)A
5812.387 3400.83 :M
1 G
.86 0 .504 :F
-.094(Medium)A
gR
1 G
271 72 84 32 rF
.86 0 .504 :F
271.5 72.5 83 31 rS
gS
.075 .075 scale
3706.063 1200.293 :M
1 G
f5_128 sf
.86 0 .504 :F
(Master Control)S
gR
1 G
155 133 60 29 rF
.86 0 .504 :F
155.5 133.5 59 28 rS
gS
.075 .075 scale
2306.291 1987.152 :M
1 G
f5_128 sf
.86 0 .504 :F
-.18(Input)A
gR
1 G
420 132 60 31 rF
.86 0 .504 :F
420.5 132.5 59 30 rS
gS
.075 .075 scale
5772.394 1987.152 :M
1 G
f5_128 sf
.86 0 .504 :F
-.063(Output)A
gR
1 G
145 232 69 35 rF
.86 0 .504 :F
145.5 232.5 68 34 rS
gS
.075 .075 scale
2226.304 3267.464 :M
f5_128 sf
-.18(Input)A
2146.317 3427.503 :M
-.094(Medium)A
gR
np 203 132 :M
214 123 :L
211 128 :L
217 130 :L
203 132 :L
eofill
-1 -1 212 129 1 1 270 103 @b
np 474 133 :M
460 133 :L
465 130 :L
462 125 :L
474 133 :L
eofill
356 102 -1 1 466 130 1 356 101 @a
-1 -1 184 233 1 1 183 162 @b
-1 -1 456 233 1 1 455 164 @b
np 250 210 :M
237 203 :L
243 203 :L
242 198 :L
250 210 :L
eofill
199 163 -1 1 244 204 1 199 162 @a
np 396 210 :M
401 197 :L
401 203 :L
407 202 :L
396 210 :L
eofill
-1 -1 402 204 1 1 436 163 @b
np 390 211 :M
386 198 :L
390 202 :L
393 198 :L
390 211 :L
eofill
-1 -1 391 203 1 1 390 162 @b
np 347 211 :M
344 198 :L
347 202 :L
351 198 :L
347 211 :L
eofill
-1 -1 348 203 1 1 347 162 @b
np 294 211 :M
291 198 :L
294 202 :L
298 198 :L
294 211 :L
eofill
-1 -1 295 203 1 1 294 162 @b
np 342 211 :M
330 202 :L
336 203 :L
336 198 :L
342 211 :L
eofill
301 163 -1 1 337 204 1 301 162 @a
1 G
234 247 77 19 rF
.86 0 .504 :F
234.5 247.5 76 18 rS
gS
.075 .075 scale
3452.771 3480.85 :M
1 G
f5_128 sf
.86 0 .504 :F
-.062(Lines)A
gR
1 G
288 210 16 40 rF
.86 0 .504 :F
288.5 210.5 15 39 rS
290 221 23 20 rC
32 28 1 4 23 20 290 221 T T 1 :f
.86 0 .504 :i 0000000000000000000000000000000001F800000200000002000000010000000FF80000000000000000000000080000020800000FF000000200000000000000000000000080000000800000008000000080000000800000000000000000000000000000
0BF800000200000000000000
%ADOeod
:j
gR
1 G
gS 126 72 359 195 rC
242 211 16 40 rF
.86 0 .504 :F
242.5 211.5 15 39 rS
244 217 23 29 rC
32 40 1 4 23 29 244 217 T T 1 :f
.86 0 .504 :i 00000000000000000000000000080000020800000FF0000002000000000000000200000002000000020000000100000003F80000000000000000000001D0000002480000024800000248000001F000000000000000000000013000000248000002480000
0248000001900000000000000000000001F8000002000000020000000100000003F800000000000000000000000000000BF800000200000000000000
%ADOeod
:j
gR
gS 126 72 359 195 rC
267 211 16 40 rF
.86 0 .504 :F
267.5 211.5 15 39 rS
268 216 23 29 rC
32 41 1 4 23 29 268 216 T T 1 :f
.86 0 .504 :i 00000000000000000000000001D0000002480000024800000248000001F00000000000000000000000080000020800000FF0000002000000000000000000000001D0000002480000024800000248000001F000000000000000000000000000000FF80000
08000000000000000000000001D0000002480000024800000248000001F0000000000000000000000FF8000002080000020800000208000001F0000000000000
%ADOeod
:j
gR
gS 126 72 359 195 rC
244 133 60 29 rF
.86 0 .504 :F
244.5 133.5 59 28 rS
gS
.075 .075 scale
3399.447 1933.805 :M
f5_128 sf
-.084(Circular)A
3479.434 2080.508 :M
1 G
.86 0 .504 :F
-.078(Shift)A
gR
1 G
325 133 72 29 rF
.86 0 .504 :F
325.5 133.5 71 28 rS
gS
.075 .075 scale
4412.615 2000.488 :M
1 G
f5_128 sf
.86 0 .504 :F
(Alphabetizer)S
gR
1 G
330 246 78 20 rF
.86 0 .504 :F
330.5 246.5 77 19 rS
gS
.075 .075 scale
4745.894 3467.513 :M
1 G
f5_128 sf
.86 0 .504 :F
-.062(Lines)A
gR
1 G
384 209 16 40 rF
.86 0 .504 :F
384.5 209.5 15 39 rS
386 221 23 20 rC
32 28 1 4 23 20 386 221 T T 1 :f
.86 0 .504 :i 0000000000000000000000000000000001F800000200000002000000010000000FF80000000000000000000000080000020800000FF000000200000000000000000000000080000000800000008000000080000000800000000000000000000000000000
0BF800000200000000000000
%ADOeod
:j
gR
gS 126 72 359 195 rC
339 211 16 40 rF
.86 0 .504 :F
339.5 211.5 15 39 rS
340 216 23 29 rC
32 40 1 4 23 29 340 216 T T 1 :f
.86 0 .504 :i 00000000000000000000000000080000020800000FF0000002000000000000000200000002000000020000000100000003F80000000000000000000001D0000002480000024800000248000001F000000000000000000000013000000248000002480000
0248000001900000000000000000000001F8000002000000020000000100000003F800000000000000000000000000000BF800000200000000000000
%ADOeod
:j
gR
gS 126 72 359 195 rC
363 210 16 40 rF
.86 0 .504 :F
363.5 210.5 15 39 rS
365 215 23 29 rC
32 41 1 4 23 29 365 215 T T 1 :f
.86 0 .504 :i 00000000000000000000000001D0000002480000024800000248000001F00000000000000000000000080000020800000FF0000002000000000000000000000001D0000002480000024800000248000001F000000000000000000000000000000FF80000
08000000000000000000000001D0000002480000024800000248000001F0000000000000000000000FF8000002080000020800000208000001F0000000000000
%ADOeod
:j
gR
.86 0 .504 :F
gS 126 72 359 195 rC
180 270 42 97 273.5 211 @n
-1 -1 269 170 1 1 272 162 @b
263 161 -1 1 274 160 1 263 160 @a
-1 -1 295 131 1 1 295 129 @b
-1 -1 296 130 1 1 296 127 @b
-1 -1 297 128 1 1 299 126 @b
-1 -1 300 127 1 1 301 124 @b
-1 -1 302 125 1 1 304 123 @b
-1 -1 305 124 1 1 307 122 @b
307 123 -1 1 310 122 1 307 122 @a
309 123 -1 1 313 122 1 309 122 @a
312 123 -1 1 315 122 1 312 122 @a
314 123 -1 1 316 122 1 314 122 @a
315 123 -1 1 318 122 1 315 122 @a
317 123 -1 1 321 122 1 317 122 @a
320 123 -1 1 324 123 1 320 122 @a
323 124 -1 1 328 124 1 323 123 @a
327 125 -1 1 330 126 1 327 124 @a
329 127 -1 1 333 127 1 329 126 @a
332 128 -1 1 335 129 1 332 127 @a
-1 -1 335 131 1 1 334 129 @b
334 123 -1 1 337 132 1 334 122 @a
326 130 -1 1 337 132 1 326 129 @a
127 110 -1 1 155 109 1 127 109 @a
np 155 96 :M
141 100 :L
145 96 :L
141 92 :L
155 96 :L
eofill
127 97 -1 1 147 96 1 127 96 @a
gS
.075 .075 scale
2146.317 1480.361 :M
f5_128 sf
-.052(System I/O)A
2146.317 1320.322 :M
-.004(Subprogram Call)A
gR
127 87 -1 1 157 86 1 127 86 @a
152 82 -1 1 156 86 1 152 81 @a
-1 -1 154 91 1 1 155 86 @b
gS
.075 .075 scale
2146.317 1160.283 :M
0 G
f5_128 sf
.86 0 .504 :F
-.026(Implicit Invocation)A
gR
gR
gS 30 31 552 730 rC
176 283 :M
0 G
f2_12 sf
3.039 .304(Figure 8: KWIC \320 Implicit Invocation Solution)J
108 305 :M
f1_12 sf
.901 .09(However, the solution suffers from the fact that it can be difficult to control)J
86 319 :M
2.007 .201(the order of processing of the implicitly invoked modules.  Further, because)J
86 333 :M
1.674 .167(invocations are data driven, the most natural implementations of this kind of)J
86 347 :M
4.351 .435(decomposition tend to use more space than the previously considered)J
86 361 :M
.293(decompositions.)A
86 385 :M
f2_12 sf
2.551 .255(Solution 4: Pipes and Filters)J
86 409 :M
f1_12 sf
1.315 .132(The fourth solution uses a pipeline solution.  In this case there are four filters:)J
86 423 :M
.884 .088(input, shift, alphabetize, and output.  Each filter processes the data and sends it)J
86 437 :M
1.723 .172(to the next filter.  Control is distributed:  each filter can run whenever it has)J
86 451 :M
1.755 .176(data on which to compute.  Data sharing between filters is strictly limited to)J
86 465 :M
.795 .079(that transmitted on pipes.  \(See Figure 9.\))J
108 489 :M
1.865 .186(This solution has several nice properties.  First, it maintains the intuitive)J
86 503 :M
1.383 .138(flow of processing.  Second, it supports reuse, since each filter can function in)J
86 517 :M
1.194 .119(isolation \(provided upstream filters produce data in the form it expects\).  New)J
86 531 :M
1.425 .142(functions are easily added to the system by inserting filters at the appropriate)J
86 545 :M
1.076 .108(point in the processing sequence.  Third, it supports ease of modification, since)J
86 559 :M
1 G
0 G
.956 .096(filters are logically independent of other filters.)J
1 G
134 571 342 95 rC
242 571 51 29 rF
.86 0 .504 :F
242.5 571.5 50 28 rS
gS
.075 .075 scale
3400.83 7860.57 :M
1 G
f5_128 sf
.86 0 .504 :F
-.18(Input)A
gR
1 G
348 635 52 29 rF
.86 0 .504 :F
348.5 635.5 51 28 rS
gS
.075 .075 scale
4774.499 8717.6 :M
1 G
f5_128 sf
.86 0 .504 :F
-.063(Output)A
gR
1 G
164 571 62 29 rF
.86 0 .504 :F
164.5 571.5 61 28 rS
gS
.075 .075 scale
2440.596 7780.224 :M
f5_128 sf
-.18(Input)A
2347.24 7927.526 :M
1 G
.86 0 .504 :F
-.094(Medium)A
gR
1 G
418 636 58 30 rF
.86 0 .504 :F
418.5 636.5 57 29 rS
gS
.075 .075 scale
5748.07 8677.427 :M
f5_128 sf
-.063(Output)A
5694.724 8824.729 :M
1 G
.86 0 .504 :F
-.094(Medium)A
gR
1 G
311 571 59 29 rF
.86 0 .504 :F
311.5 571.5 58 28 rS
gS
.075 .075 scale
4294.382 7807.006 :M
f5_128 sf
-.084(Circular)A
4374.401 7954.308 :M
1 G
.86 0 .504 :F
-.078(Shift)A
gR
1 G
258 635 71 30 rF
.86 0 .504 :F
258.5 635.5 70 29 rS
gS
.075 .075 scale
3520.86 8717.6 :M
f5_128 sf
(Alphabetizer)S
gR
135 640 -1 1 163 639 1 135 639 @a
np 163 626 :M
149 630 :L
153 626 :L
149 623 :L
163 626 :L
eofill
135 627 -1 1 155 626 1 135 626 @a
gS
.075 .075 scale
2267.22 8583.689 :M
f5_128 sf
-.052(System I/O)A
2267.22 8409.605 :M
-.093(Pipe)A
gR
225 586 -1 1 242 585 1 225 585 @a
np 311 585 :M
300 588 :L
304 585 :L
300 583 :L
311 585 :L
eofill
293 586 -1 1 305 585 1 293 585 @a
np 261 650 :M
250 653 :L
253 650 :L
250 648 :L
261 650 :L
eofill
243 651 -1 1 254 650 1 243 650 @a
np 349 650 :M
338 653 :L
342 650 :L
338 647 :L
349 650 :L
eofill
331 651 -1 1 343 650 1 331 650 @a
401 651 -1 1 418 650 1 401 650 @a
370 585 -1 1 391 584 1 370 584 @a
-1 -1 391 624 1 1 390 584 @b
241 624 -1 1 391 623 1 241 623 @a
-1 -1 242 652 1 1 241 623 @b
gR
gS 30 31 552 730 rC
189 682 :M
0 G
f2_12 sf
2.304 .23(Figure 9: KWIC \320 Pipe and Filter Solution)J
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(shaw; page: 24 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(21)S
108 82 :M
2.539 .254(On the other hand it has a number of drawbacks.  First, it is virtually)J
86 96 :M
.862 .086(impossible to modify the design to support an interactive system.  For example,)J
86 110 :M
.852 .085(in order to delete a line, there would have to be some persistent shared storage,)J
86 124 :M
1.782 .178(violating a basic tenet of this approach.  Second, the solution is inefficient in)J
86 138 :M
.905 .09(terms of its use of space, since each filter must copy all of the data to its output)J
86 152 :M
.101(ports.)A
86 176 :M
f2_12 sf
1.068(Comparisons)A
86 200 :M
f1_12 sf
1.033 .103(The solutions can be compared by tabulating their ability to address the design)J
86 214 :M
1.318 .132(considerations itemized earlier.  A detailed comparison would have to involve)J
86 228 :M
3.39 .339(consideration of a number of factors concerning the intended use of the)J
86 242 :M
3.126 .313(system: for example, is it batch or interactive, update-intensive or query-)J
86 256 :M
2.004 .2(intensive, etc.)J
108 280 :M
2.46 .246(Figure 10 provides an approximation to such an analysis, based on the)J
86 294 :M
.959 .096(discussion of architectural styles introduced earlier.  As Parnas pointed out, the)J
86 308 :M
2.64 .264(shared data solution is particularly weak in its support for changes in the)J
86 322 :M
2.223 .222(overall processing algorithm, data representations, and reuse.  On the other)J
86 336 :M
1.282 .128(hand it can achieve relatively good performance, by virtue of direct sharing of)J
86 350 :M
1.917 .192(data.  Further, it is relatively easy to add a new processing component \(also)J
86 364 :M
1.569 .157(accessing the shared data\).  The abstract data type solution allows changes to)J
86 378 :M
2.931 .293(data representation and supports reuse, without necessarily compromising)J
86 392 :M
1.568 .157(performance.  However, the interactions between components in that solution)J
86 406 :M
2.581 .258(are wired into the modules themselves, so changing the overall processing)J
86 420 :M
1.438 .144(algorithm or adding new functions may involve a large number of changes to)J
86 434 :M
0 .156 .624 :F
0 G
.95 .095(the existing system.)J
147 446 316 150 rC
gS
.056 .056 scale
4894.731 8654.022 :M
0 .156 .624 :F
f5_176 sf
(_)S
4894.731 9009.423 :M
(_)S
4894.731 9364.824 :M
(+)S
4894.731 9720.226 :M
(+)S
4894.731 10075.627 :M
.024 .24 .908 :F
0 .156 .624 :F
(_)S
4787.937 8067.61 :M
.024 .24 .908 :F
-.107(Shared)A
4752.339 8245.31 :M
-.13(Memory)A
5677.888 8209.77 :M
-.312(ADT)A
6389.849 8209.77 :M
(Events)S
7190.805 8209.77 :M
.86 0 .504 :F
.024 .24 .908 :F
-.026(Dataflow)A
gR
.86 0 .504 :F
-1 -1 256 597 1 1 255 459 @b
238 471 -1 1 464 470 1 238 470 @a
gS
.056 .056 scale
5802.481 8654.022 :M
0 .156 .624 :F
f5_176 sf
(_)S
5802.481 9009.423 :M
(+)S
5802.481 9364.824 :M
(_)S
5802.481 9720.226 :M
(+)S
5802.481 10075.627 :M
(+)S
6621.236 8654.022 :M
(+)S
6621.236 9009.423 :M
(_)S
6621.236 9364.824 :M
(+)S
6621.236 9720.226 :M
(_)S
6621.236 10075.627 :M
(_)S
7475.589 8654.022 :M
(+)S
7475.589 9009.423 :M
(_)S
7475.589 9364.824 :M
(+)S
7475.589 9720.226 :M
(_)S
7475.589 10075.627 :M
.024 .24 .908 :F
0 .156 .624 :F
(+)S
2723.25 8654.022 :M
.024 .24 .908 :F
-.018(Change in Algorithm)A
2669.853 9009.423 :M
-.033(Change in Data Repn)A
2812.246 9364.824 :M
-.018(Change in Function)A
3364.015 9720.226 :M
(Performance)S
3915.785 10075.627 :M
0 G
.024 .24 .908 :F
-.022(Reuse)A
gR
gR
gS 30 31 552 730 rC
183 612 :M
f2_12 sf
2.935 .294(Figure 10: KWIC \320 Comparison of Solutions)J
108 634 :M
f1_12 sf
3.553 .355(The implicit invocation solution is particularly good for adding new)J
86 648 :M
2.165 .217(functionality.  However, it suffers from some of the problems of the shared)J
86 662 :M
2.946 .295(data approach: poor support for change in data representation and reuse.)J
86 676 :M
2.681 .268(Moreover, it may introduce extra execution overhead.  The pipe and filter)J
86 690 :M
3.139 .314(solution allows new filters to be placed in the stream of text processing.)J
86 704 :M
2.42 .242(Therefore it supports changes in processing algorithm, changes in function,)J
endp
%%Page: 25 25
%%BeginPageSetup
initializepage
(shaw; page: 25 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(22)S
86 82 :M
2.463 .246(and reuse.  On the other hand, decisions about data representation will be)J
86 96 :M
1.022 .102(wired into the assumptions about the kind of data that is transmitted along the)J
86 110 :M
2.067 .207(pipes.  Further, depending on the exchange format, there may be additional)J
86 124 :M
1.12 .112(overhead involved in parsing and unparsing the data onto pipes.)J
86 148 :M
f3_12 sf
(4.2. )S
122 148 :M
.708 .071(Case Study 2: Instrumentation Software)J
86 172 :M
f1_12 sf
2.805 .28(Our second case study describes the industrial development of a software)J
86 186 :M
2.201 .22(architecture at Tektronix, Inc.  This work was carried out as a collaborative)J
86 200 :M
4.272 .427(effort between several  Tektronix product divisions and the Computer)J
86 214 :M
.432 .043(Research Laboratory over a three year period [6].)J
108 238 :M
1.733 .173(The purpose of the project was to develop a reusable system architecture)J
86 252 :M
1.889 .189(for oscilloscopes.  An oscilloscope is an instrumentation system that samples)J
86 266 :M
2.711 .271(electrical signals and displays pictures \(called traces\) of them on a screen.)J
86 280 :M
2.797 .28(Additionally, oscilloscopes perform measurements on the signals, and also)J
86 294 :M
1.992 .199(display these on the screen.  While oscilloscopes were once simple analogue)J
86 308 :M
3.233 .323(devices  involving little software, modern oscilloscopes rely primarily on)J
86 322 :M
1.147 .115(digital technology and have quite complex software.  It is not uncommon for a)J
86 336 :M
1.161 .116(modern oscilloscope to perform dozens of measurements, supply megabytes of)J
86 350 :M
1.373 .137(internal storage, interface to a network of workstations and other instruments,)J
86 364 :M
1.918 .192(and provide sophisticated user interface including a touch panel screen with)J
86 378 :M
1.024 .102(menus, built-in help facilities, and color displays.)J
108 402 :M
2.31 .231(Like many companies that have had to rely increasingly on software to)J
86 416 :M
1.67 .167(support their products, Tektronix was faced with number of problems.  First,)J
86 430 :M
1.502 .15(there was little reuse across different oscilloscope products.  Instead, different)J
86 444 :M
2.249 .225(oscilloscopes were built by different product divisions, each with their own)J
86 458 :M
1.576 .158(development conventions, software organization, programming language, and)J
86 472 :M
2.617 .262(development tools.  Moreover, even within a single product division, each)J
86 486 :M
2.083 .208(new oscilloscope typically required a redesign from scratch to accommodate)J
86 500 :M
2.099 .21(changes in hardware capability and new requirements on the user interface.)J
86 514 :M
1.897 .19(This problem was compounded by the fact that both hardware and interface)J
86 528 :M
2.116 .212(requirements were changing increasingly rapidly.  Furthermore, there was a)J
86 542 :M
1.38 .138(perceived need to address \322specialized markets\323.  To do this it would have to)J
86 556 :M
.676 .068(be possible to tailor a general-purpose instrument, to a specific set of uses.)J
108 580 :M
1.453 .145(Second, there were increasing performance problems because the software)J
86 594 :M
3.128 .313(was not rapidly configurable within the instrument.  This problem arises)J
86 608 :M
1.095 .11(because an oscilloscope can be configured in many different modes, depending)J
86 622 :M
1.129 .113(on the user\325s task.  In old oscilloscopes reconfiguration was handled simply by)J
86 636 :M
2.048 .205(loading different software to handle the new mode.  But as the total size of)J
86 650 :M
.89 .089(software was increasing, this was leading to delays between a user's request for)J
86 664 :M
1.152 .115(a new mode and a reconfigured instrument.)J
108 688 :M
2.761 .276(The goal of the project was to develop an architectural framework for)J
86 702 :M
.821 .082(oscilloscopes that would address these problems.  The result of that work was a)J
86 716 :M
4.095 .41(domain-specific software architecture that formed the basis of the next)J
endp
%%Page: 26 26
%%BeginPageSetup
initializepage
(shaw; page: 26 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(23)S
86 82 :M
2.774 .277(generation of Tektronix oscilloscopes.  Since then the framework has been)J
86 96 :M
1.349 .135(extended and adapted to accommodate a broader class of system, while at the)J
86 110 :M
3.547 .355(same time being better adapted to the specific needs of instrumentation)J
86 124 :M
.121(software.)A
108 148 :M
1.467 .147(In the remainder of this section, we outline the stages in this architectural)J
86 162 :M
.447(development.)A
86 183 :M
f2_12 sf
5.099 .51(An object-oriented model)J
86 205 :M
f1_12 sf
.872 .087(The first attempt at developing a reusable architecture focused on producing an)J
86 219 :M
1.132 .113(object-oriented model of the software domain.  This led to a clarification of the)J
86 233 :M
2.374 .237(data types used in oscilloscopes: waveforms, signals, measurements, trigger)J
86 247 :M
.86 0 .504 :F
0 G
.655 .065(modes, etc. \(See Figure 11.\))J
120 259 371 130 rC
gS
.075 .074 scale
3266.8 4583.983 :M
.86 0 .504 :F
f4_176 sf
-.086(waveform)A
3213.464 5168.883 :M
(x-y wvfm)S
4346.844 5196.088 :M
-.01(accumulate wvfm)A
1653.401 5182.486 :M
(max-min wvfm)S
gR
.86 0 .504 :F
234.5 321.5 78 21 rS
120.5 367.5 91 19 rS
237.5 369.5 62 16 rS
321.5 367.5 114 21 rS
-1 -1 190 364 1 1 229 344 @b
-1 -1 270 362 1 1 269 346 @b
306 347 -1 1 352 361 1 306 346 @a
gS
.075 .074 scale
4453.515 3699.832 :M
f4_176 sf
-.039(Oscilloscope)A
4720.192 3876.663 :M
-.096(object)A
gR
332.5 259.5 82 32 rS
-1 -1 283 312 1 1 322 292 @b
417 291 -1 1 463 305 1 417 290 @a
gS
.075 .074 scale
5946.909 4475.165 :M
0 G
f8_288 sf
0 .68 0 :F
-.138(\245\245\245)A
gR
gR
gS 30 31 552 730 rC
161 405 :M
f2_12 sf
2.863 .286(Figure 11: Oscilloscopes \320 An Object-oriented Model)J
108 427 :M
f1_12 sf
.965 .096(While this was a useful exercise, it fell far short of producing the hoped-for)J
86 441 :M
2.146 .215(results.  Although many types of data were identified, there was no overall)J
86 455 :M
1.621 .162(model that explained how the types fit together.  This led to confusion about)J
86 469 :M
3.62 .362(the partitioning of functionality.  For example, should measurements be)J
86 483 :M
1.914 .191(associated with the types of data being measured, or represented externally?)J
86 497 :M
1.219 .122(Which objects should the user interface talk to?)J
86 518 :M
f2_12 sf
4.122 .412(A layered model)J
86 540 :M
f1_12 sf
1.465 .146(The second phase attempted to correct these problems by providing a layered)J
86 554 :M
3.194 .319(model of an oscilloscope.  \(See Figure 11.\)  In this model the core layer)J
86 568 :M
1.781 .178(represented the signal manipulation functions that filter signals as they enter)J
86 582 :M
1.496 .15(the oscilloscope.  These functions are typically implemented in hardware. The)J
86 596 :M
2.565 .256(next layer represented waveform acquisition.  Within this layer signals are)J
86 610 :M
1.105 .11(digitized and stored internally for later processing. The third layer consisted of)J
86 624 :M
5.824 .582(waveform manipulation, including measurement, waveform addition,)J
86 638 :M
2.108 .211(Fourier transformation, etc.  The fourth layer consisted of display functions.)J
86 652 :M
6.588 .659(This layer was responsible for mapping digitized waveforms and)J
86 666 :M
2.472 .247(measurements to visual representations.  The outermost layer was the user)J
86 680 :M
2.601 .26(interface.  This layer was responsible for interacting with the user and for)J
86 694 :M
.786 .079(deciding which data should be shown on the screen. \(See Figure 12.\))J
endp
%%Page: 27 27
%%BeginPageSetup
initializepage
(shaw; page: 27 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
.86 0 .504 :F
0 G
(24)S
.86 0 .504 :F
2 lw
131 72 348 148 rC
114 41 305 128.5 @f
gS
.075 .075 scale
3640.889 1715.532 :M
f5_176 sf
(Hardware)S
gR
181 75 305.5 135.5 @f
gS
.075 .075 scale
3574.206 2180.987 :M
f5_176 sf
-.013(Digitization)A
gR
265 112 305.5 140 @f
gS
.075 .075 scale
3507.523 2513.455 :M
f5_176 sf
-.049(Visualization)A
gR
346 146 305 146 @f
gS
.075 .075 scale
3454.177 2806.026 :M
0 G
f5_176 sf
.86 0 .504 :F
-.033(User interface)A
gR
gR
gS 30 31 552 730 rC
186 236 :M
f2_12 sf
2.5 .25(Figure 12: Oscilloscopes \320 A Layered Model)J
108 258 :M
f1_12 sf
3.453 .345(This layered model was intuitively appealing since it partitioned the)J
86 272 :M
1.241 .124(functions of an oscilloscope into well-defined groupings.  Unfortunately it was)J
86 286 :M
1.406 .141(the wrong model for the application domain.  The main problem was that the)J
86 300 :M
1.584 .158(boundaries of abstraction enforced by the layers conflicted with the needs for)J
86 314 :M
2.084 .208(interaction between the various functions.  For example, the model suggests)J
86 328 :M
1.487 .149(that all user interactions with an oscilloscope should be in terms of the visual)J
86 342 :M
1.721 .172(representations.  But in practice real oscilloscope users need to directly affect)J
86 356 :M
5.061 .506(the functions in all layers, such as setting attenuation in the signal)J
86 370 :M
4.802 .48(manipulation layer, choosing acquisition mode and parameters in the)J
86 384 :M
6.347 .635(acquisition layer, or creating derived waveforms in the waveform)J
86 398 :M
2.295 .23(manipulation layer.)J
86 419 :M
f2_12 sf
2.531 .253(A Pipe and Filter Model)J
86 441 :M
f1_12 sf
3.475 .348(The third attempt yielded a model in which oscilloscope functions were)J
86 455 :M
2.978 .298(viewed as incremental transformers of data.  Signal transformers serve to)J
86 469 :M
5.995 .6(condition external signals. Acquisition transformers derive digitized)J
86 483 :M
1.401 .14(waveforms from these signals.  Display transformers convert these waveforms)J
86 497 :M
.86 0 .504 :F
0 G
.895 .089(into visual data. \(See Figure 13.\))J
.991 .938 .969 :F
129 509 353 70 rC
150 555 127 21 rF
.86 0 .504 :F
150.5 555.5 126 20 rS
gS
.075 .075 scale
2052.999 7611.754 :M
f5_176 sf
-.018(Trigger subsystem)A
2386.278 7036.525 :M
f4_176 sf
-.095(Couple)A
gR
174.5 513.5 52 19 rS
gS
.075 .075 scale
3372.784 7049.902 :M
f4_176 sf
-.089(Acquire)A
gR
250.5 513.5 52 19 rS
gS
.075 .075 scale
4332.628 7049.902 :M
f4_176 sf
-.173(To-XY)A
gR
318.5 515.5 52 18 rS
gS
.075 .075 scale
5359.128 7049.902 :M
f4_176 sf
(Clip)S
gR
388.5 516.5 52 18 rS
gS
.075 .075 scale
4532.596 7611.754 :M
f4_176 sf
-.082(Measure)A
gR
334.5 553.5 63 22 rS
129 509 41 70 rC
139 521 -1 1 176 520 1 139 520 @a
gR
.86 0 .504 :F
gS 129 509 353 70 rC
166 519 -1 1 176 521 1 166 518 @a
-1 -1 167 524 1 1 166 518 @b
-1 -1 167 524 1 1 175 521 @b
np 175 521 :M
166 518 :L
166 523 :L
175 521 :L
eofill
129 509 115 70 rC
224 519 -1 1 249 518 1 224 518 @a
gR
gS 129 509 353 70 rC
239 517 -1 1 249 518 1 239 516 @a
-1 -1 240 522 1 1 239 516 @b
-1 -1 240 522 1 1 248 518 @b
np 248 518 :M
239 516 :L
239 521 :L
248 518 :L
eofill
129 509 186 70 rC
300 525 -1 1 320 524 1 300 524 @a
gR
gS 129 509 353 70 rC
310 523 -1 1 320 524 1 310 522 @a
-1 -1 311 528 1 1 310 522 @b
-1 -1 311 528 1 1 319 524 @b
np 319 524 :M
310 522 :L
310 527 :L
319 524 :L
eofill
129 509 255 70 rC
372 525 -1 1 389 524 1 372 524 @a
gR
gS 129 509 353 70 rC
379 523 -1 1 389 524 1 379 522 @a
-1 -1 380 528 1 1 379 522 @b
-1 -1 380 528 1 1 388 524 @b
np 388 524 :M
379 522 :L
379 527 :L
388 524 :L
eofill
129 509 339 70 rC
440 525 -1 1 474 524 1 440 524 @a
gR
gS 129 509 353 70 rC
464 523 -1 1 474 524 1 464 522 @a
-1 -1 465 528 1 1 464 522 @b
-1 -1 465 528 1 1 473 524 @b
np 473 524 :M
464 522 :L
464 527 :L
473 524 :L
eofill
302 531 -1 1 315 530 1 302 530 @a
129 509 201 70 rC
314 566 -1 1 335 565 1 314 565 @a
gR
gS 129 509 353 70 rC
325 564 -1 1 335 566 1 325 563 @a
-1 -1 326 569 1 1 325 563 @b
-1 -1 326 569 1 1 334 566 @b
np 334 566 :M
325 563 :L
325 568 :L
334 566 :L
eofill
129 509 301 70 rC
402 564 -1 1 435 563 1 402 563 @a
gR
gS 129 509 353 70 rC
425 561 -1 1 435 563 1 425 560 @a
-1 -1 426 566 1 1 425 560 @b
-1 -1 426 566 1 1 434 563 @b
np 434 563 :M
425 560 :L
425 565 :L
434 563 :L
eofill
-1 -1 314 567 1 1 313 531 @b
-1 -1 232 558 1 1 231 527 @b
129 509 115 70 rC
232 528 -1 1 250 527 1 232 527 @a
gR
gS 129 509 353 70 rC
240 525 -1 1 250 527 1 240 524 @a
-1 -1 241 531 1 1 240 524 @b
-1 -1 241 531 1 1 249 527 @b
np 249 527 :M
240 524 :L
240 530 :L
249 527 :L
eofill
gS
.075 .075 scale
1759.714 7090.035 :M
f4_136 sf
(Signal)S
3826.044 7263.941 :M
-.067(Waveform)A
4812.55 7263.941 :M
-.134(Trace)A
5265.81 7665.264 :M
-.018(Measurement)A
2679.564 7330.828 :M
0 G
.86 0 .504 :F
-.028(Times)A
gR
gR
gS 30 31 552 730 rC
167 595 :M
0 G
f2_12 sf
2.268 .227(Figure 13: Oscilloscopes \320 A Pipe and Filter Model)J
108 617 :M
f1_12 sf
1.967 .197(This architectural model was a significant improvement over the layered)J
86 631 :M
3.154 .315(model in that it did not isolate the functions in separate partitions.  For)J
86 645 :M
1.099 .11(example, nothing in this model would prevent signal data directly feeding into)J
86 659 :M
1.181 .118(display filters.  Further, the model corresponded well to the engineers' view of)J
86 673 :M
1.835 .183(signal processing as a dataflow problem.  The main problem with the model)J
86 687 :M
1.065 .106(was that it was not clear how the user should interact with it.  If the user were)J
86 701 :M
2.437 .244(simply at one end of the system, then this would represent an even worse)J
86 715 :M
1.151 .115(decomposition than the layered system.)J
endp
%%Page: 28 28
%%BeginPageSetup
initializepage
(shaw; page: 28 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(25)S
86 82 :M
f2_12 sf
2.885 .288(A Modified Pipe and Filter Model)J
86 104 :M
f1_12 sf
1.42 .142(The fourth solution accounted for user inputs by associating with each filter a)J
86 118 :M
1.804 .18(control interface that allows an external entity to set parameters of operation)J
86 132 :M
1.959 .196(for the filter.  For example, the acquisition filter might have parameters that)J
86 146 :M
4.111 .411(determine sample rate and waveform duration.  These inputs serve as)J
86 160 :M
2.83 .283(configuration parameters for the oscilloscope.  Formally, the filters can be)J
86 174 :M
1.613 .161(modelled as \322higher-order\323 functions, for which the configuration parameters)J
86 188 :M
1.951 .195(determine what data transformation the filter will perform. \(See [17] for this)J
86 202 :M
.86 0 .504 :F
0 G
1.15 .115(interpretation of the architecture.\) Figure 14 illustrates this architecture.)J
129 214 353 100 rC
gS
.075 .075 scale
2403.521 3453.458 :M
.86 0 .504 :F
f4_176 sf
-.095(Couple)A
3404.988 3466.74 :M
-.089(Acquire)A
5354.51 3466.74 :M
(Clip)S
4393.102 3466.74 :M
-.173(To-XY)A
4580.042 4024.606 :M
-.082(Measure)A
gR
.86 0 .504 :F
174.5 247.5 52 18 rS
248.5 247.5 52 18 rS
319.5 249.5 52 18 rS
388.5 249.5 52 19 rS
337.5 287.5 63 22 rS
129 214 42 100 rC
139 255 -1 1 176 254 1 139 254 @a
gR
.86 0 .504 :F
gS 129 214 353 100 rC
166 253 -1 1 176 254 1 166 252 @a
-1 -1 167 258 1 1 166 252 @b
-1 -1 167 258 1 1 175 254 @b
np 175 254 :M
166 252 :L
166 257 :L
175 254 :L
eofill
129 214 115 100 rC
225 253 -1 1 249 252 1 225 252 @a
gR
gS 129 214 353 100 rC
239 251 -1 1 249 252 1 239 250 @a
-1 -1 240 256 1 1 239 250 @b
-1 -1 240 256 1 1 248 252 @b
np 248 252 :M
239 250 :L
239 255 :L
248 252 :L
eofill
129 214 186 100 rC
300 259 -1 1 320 258 1 300 258 @a
gR
gS 129 214 353 100 rC
310 256 -1 1 320 258 1 310 255 @a
-1 -1 311 262 1 1 310 255 @b
-1 -1 311 262 1 1 319 258 @b
np 319 258 :M
310 255 :L
310 261 :L
319 258 :L
eofill
129 214 255 100 rC
372 259 -1 1 389 258 1 372 258 @a
gR
gS 129 214 353 100 rC
379 256 -1 1 389 258 1 379 255 @a
-1 -1 380 262 1 1 379 255 @b
-1 -1 380 262 1 1 388 258 @b
np 388 258 :M
379 255 :L
379 261 :L
388 258 :L
eofill
129 214 339 100 rC
440 259 -1 1 473 258 1 440 258 @a
gR
gS 129 214 353 100 rC
463 256 -1 1 473 258 1 463 255 @a
-1 -1 464 262 1 1 463 255 @b
-1 -1 464 262 1 1 472 258 @b
np 472 258 :M
463 255 :L
463 261 :L
472 258 :L
eofill
302 265 -1 1 315 264 1 302 264 @a
129 214 201 100 rC
314 300 -1 1 335 299 1 314 299 @a
gR
gS 129 214 353 100 rC
326 298 -1 1 335 300 1 326 297 @a
-1 -1 327 303 1 1 326 297 @b
-1 -1 327 303 1 1 334 300 @b
np 334 300 :M
326 297 :L
326 302 :L
334 300 :L
eofill
129 214 301 100 rC
402 298 -1 1 435 297 1 402 297 @a
gR
gS 129 214 353 100 rC
425 295 -1 1 435 297 1 425 294 @a
-1 -1 426 300 1 1 425 294 @b
-1 -1 426 300 1 1 434 297 @b
np 434 297 :M
425 294 :L
425 300 :L
434 297 :L
eofill
-1 -1 314 301 1 1 313 265 @b
-1 -1 233 292 1 1 232 261 @b
129 214 116 100 rC
232 262 -1 1 250 261 1 232 261 @a
gR
gS 129 214 353 100 rC
240 259 -1 1 250 261 1 240 258 @a
-1 -1 241 264 1 1 240 258 @b
-1 -1 241 264 1 1 249 261 @b
np 249 261 :M
240 258 :L
240 263 :L
249 261 :L
eofill
gS
.075 .075 scale
1762.582 3506.588 :M
f4_136 sf
(Signal)S
3832.28 3679.261 :M
-.067(Waveform)A
4927.218 3679.261 :M
-.134(Trace)A
5394.569 4091.019 :M
-.018(Measurement)A
2683.932 3745.673 :M
-.028(Times)A
gR
129 214 353 29 rC
-1 -1 198 249 1 1 197 226 @b
gR
gS 129 214 353 100 rC
-1 -1 198 249 1 1 200 239 @b
195 240 -1 1 201 239 1 195 239 @a
195 240 -1 1 198 248 1 195 239 @a
np 197 248 :M
200 239 :L
195 239 :L
197 248 :L
eofill
gS
.075 .075 scale
2336.756 2962.004 :M
f4_136 sf
-.081(Coupling)A
3324.87 2962.004 :M
-.007(Kind,Rate)A
4406.455 2962.004 :M
-.134(Trans)A
5327.804 2962.004 :M
-.165(Size)A
gR
129 214 353 29 rC
-1 -1 271 249 1 1 270 226 @b
gR
gS 129 214 353 100 rC
-1 -1 272 249 1 1 273 239 @b
268 240 -1 1 274 239 1 268 239 @a
268 240 -1 1 272 248 1 268 239 @a
np 271 248 :M
273 239 :L
268 239 :L
271 248 :L
eofill
129 214 353 29 rC
-1 -1 345 249 1 1 344 226 @b
gR
gS 129 214 353 100 rC
-1 -1 345 249 1 1 346 239 @b
341 240 -1 1 347 239 1 341 239 @a
341 240 -1 1 345 248 1 341 239 @a
np 344 248 :M
346 239 :L
341 239 :L
344 248 :L
eofill
129 214 353 29 rC
-1 -1 413 249 1 1 412 226 @b
gR
gS 129 214 353 100 rC
-1 -1 414 249 1 1 415 239 @b
410 240 -1 1 416 239 1 410 239 @a
410 240 -1 1 414 248 1 410 239 @a
np 413 248 :M
415 239 :L
410 239 :L
413 248 :L
eofill
.991 .938 .969 :F
160 292 127 22 rF
.86 0 .504 :F
160.5 292.5 126 21 rS
gS
.075 .075 scale
2189.874 4064.454 :M
0 G
f5_176 sf
.86 0 .504 :F
-.018(Trigger subsystem)A
gR
gR
gS 30 31 552 730 rC
140 330 :M
0 G
f2_12 sf
2.495 .25(Figure 14: Oscilloscopes \320 A Modified Pipe and Filter Model)J
108 352 :M
f1_12 sf
3.01 .301(The introduction of a control interface solves a large part of the user)J
86 366 :M
2.541 .254(interface problem.  First, it provides a collection of settings that determine)J
86 380 :M
1.684 .168(what aspects of the oscilloscope can be modified dynamically by the user.  It)J
86 394 :M
2.407 .241(also explains how changes to oscilloscope function can be accomplished by)J
86 408 :M
3.361 .336(incremental adjustments to the software.  Second it decouples the signal)J
86 422 :M
2.779 .278(processing functions of the oscilloscope from the actual user interface: the)J
86 436 :M
1.384 .138(signal processing software makes no assumptions about how the user actually)J
86 450 :M
1.795 .18(communicates changes to its control parameters.  Conversely, the actual user)J
86 464 :M
1.162 .116(interface can treat the signal processing functions solely in terms of the control)J
86 478 :M
1.822 .182(parameters.  This allowed the designers to change the implementation of the)J
86 492 :M
3.39 .339(signal processing software and hardware without impacting an interface,)J
86 506 :M
1.398 .14(provided the control interface remained unchanged.)J
86 527 :M
f2_12 sf
5.206 .521(Further Specialization)J
86 549 :M
f1_12 sf
1.473 .147(The adapted pipe and filter model was a great improvement.  But it, too, had)J
86 563 :M
2.474 .247(some problems.  The most significant problem was that the pipe and filter)J
86 577 :M
1.814 .181(computational model led to poor performance.  In particular, waveforms can)J
86 591 :M
1.904 .19(occupy a large amount of internal storage: it is simply not practical for each)J
86 605 :M
2.693 .269(filter to copy waveforms every time they process them.  Further, different)J
86 619 :M
.936 .094(filters may run at radically different speeds: it is unacceptable to slow one filter)J
86 633 :M
.694 .069(down because another filter is still processing its data.)J
108 657 :M
1.984 .198(To handle these problems the model was further specialized.  Instead of)J
86 671 :M
1.271 .127(having a single kind of pipe, several \322colors\323 of pipes were introduced.  Some)J
86 685 :M
.489 .049(of these allowed data to be processed without copying.  Others permitted data to)J
86 699 :M
1.4 .14(be ignored by slow filters if they were in the middle of processing other data.)J
86 713 :M
3.164 .316(These additional pipes increased the stylistic vocabulary and allowed the)J
endp
%%Page: 29 29
%%BeginPageSetup
initializepage
(shaw; page: 29 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(26)S
86 82 :M
1.234 .123(pipe/filter computations to be tailored more directly to the performance needs)J
86 96 :M
.741 .074(of the product.)J
86 117 :M
f2_12 sf
1.333(Summary)A
86 139 :M
f1_12 sf
2.016 .202(This case study illustrates the issues involved in developing an architectural)J
86 153 :M
3.322 .332(style for a real application domain. It underscores the fact that different)J
86 167 :M
3.469 .347(architectural styles have different effects on the ability to solve a set of)J
86 181 :M
2.956 .296(problems.  Moreover, it illustrates that architectural designs for industrial)J
86 195 :M
1.562 .156(software must typically be adapted from pure forms to specialized styles that)J
86 209 :M
1.731 .173(meet the needs of the specific domain. In this case, the final result depended)J
86 223 :M
2.142 .214(greatly on the properties of pipe and filter architectures, but found ways to)J
86 237 :M
.662 .066(adapt that generic style so that it could also satisfy the performance needs of the)J
86 251 :M
1.027 .103(product family.)J
86 275 :M
f3_12 sf
(4.3. )S
122 275 :M
.903 .09(Case 3:  A Fresh View of Compilers)J
86 299 :M
f1_12 sf
3.193 .319(The architecture of a system can change in response to improvements in)J
86 313 :M
.802 .08(technology.  This can be seen in the way we think about compilers.)J
108 337 :M
2.227 .223(In the 1970s, compilation was regarded as a sequential process, and the)J
86 351 :M
1.244 .124(organization of a compiler was typically drawn as in Figure 15.  Text enters at)J
86 365 :M
1.669 .167(the left end and is transformed in a variety of ways\321to lexical token stream,)J
86 379 :M
1.626 .163(parse tree, intermediate code\321before emerging as machine code on the right.)J
86 393 :M
1.403 .14(We often refer to this compilation model as a pipeline, even though it was \(at)J
86 407 :M
3.959 .396(least originally\) closer to a batch sequential architecture in which each)J
86 421 :M
.844 .084(transformation \(\322pass\323\) was completed before the next one started.)J
155 433 301 27 rC
np 235 448 :M
225 451 :L
225 448 :L
225 446 :L
235 448 :L
eofill
213 449 -1 1 225 448 1 213 448 @a
np 289 448 :M
279 451 :L
279 448 :L
279 446 :L
289 448 :L
eofill
267 449 -1 1 279 448 1 267 448 @a
np 343 448 :M
332 451 :L
332 448 :L
332 446 :L
343 448 :L
eofill
320 449 -1 1 333 448 1 320 448 @a
np 397 448 :M
386 451 :L
386 448 :L
386 446 :L
397 448 :L
eofill
374 449 -1 1 387 448 1 374 448 @a
1 G
181 438 32 21 rF
0 G
180.5 437.5 33 21 rS
187 444 19 9 rC
gS
.6 .587 scale
327.229 764.386 :T
-327.229 -764.386 :T
315.229 768.386 :M
f5_14 sf
-.058(Lex)A
gR
gR
1 G
gS 155 433 301 27 rC
235 438 32 21 rF
0 G
234.5 437.5 33 21 rS
241 444 20 9 rC
gS
.6 .587 scale
417.295 764.386 :T
-417.295 -764.386 :T
405.295 768.386 :M
f5_14 sf
-.336(Syn)A
gR
gR
gS 155 433 301 27 rC
289 438 32 21 rF
0 G
288.5 437.5 33 21 rS
294 444 22 9 rC
gS
.6 .587 scale
508.692 764.386 :T
-508.692 -764.386 :T
493.692 768.386 :M
f5_14 sf
-.283(Sem)A
gR
gR
gS 155 433 301 27 rC
343 438 32 21 rF
0 G
342.5 437.5 33 21 rS
349 444 19 9 rC
gS
.6 .587 scale
598.094 764.386 :T
-598.094 -764.386 :T
587.094 768.386 :M
f5_14 sf
-.05(Opt)A
gR
gR
gS 155 433 301 27 rC
397 438 32 21 rF
0 G
396.5 437.5 33 21 rS
400 444 26 9 rC
gS
.6 .587 scale
688.156 764.386 :T
-688.156 -764.386 :T
672.156 768.386 :M
f5_14 sf
-.331(Code)A
gR
gR
0 G
gS 155 433 301 27 rC
np 181 448 :M
171 451 :L
171 448 :L
171 446 :L
181 448 :L
eofill
159 449 -1 1 171 448 1 159 448 @a
np 451 448 :M
440 451 :L
440 448 :L
440 446 :L
451 448 :L
eofill
428 449 -1 1 441 448 1 428 448 @a
156 434 22 8 rC
gS
.6 .587 scale
279.193 745.645 :T
-279.193 -745.645 :T
265.193 749.645 :M
f5_14 sf
-.259(Text)A
gR
gR
gS 424 434 31 8 rC
gS
.6 .587 scale
733.185 745.645 :T
-733.185 -745.645 :T
712.185 749.645 :M
f5_14 sf
-.155(  Code)A
gR
gR
gS 30 31 552 730 rC
198 476 :M
f2_12 sf
3.425 .342(Figure 15: Traditional Compiler Model)J
108 498 :M
f1_12 sf
1.147 .115(In fact, even the batch sequential version of this model was not completely)J
86 512 :M
.662 .066(accurate.  Most compilers created a separate symbol table during lexical analysis)J
86 526 :M
1.418 .142(and used or updated it during subsequent passes.  It was not part of the data)J
86 540 :M
1.375 .138(that flowed from one pass to another but rather existed outside all the passes.)J
86 554 :M
.709 .071(So the system structure was more properly drawn as in Figure 16.)J
155 566 301 78 rC
np 305 589 :M
307 599 :L
305 599 :L
303 599 :L
305 589 :L
eofill
np 305 621 :M
303 611 :L
305 611 :L
307 611 :L
305 621 :L
eofill
-1 -1 305 611 1 1 304 598 @b
np 300 589 :M
293 597 :L
292 595 :L
290 593 :L
300 589 :L
eofill
np 256 621 :M
263 613 :L
264 615 :L
266 617 :L
256 621 :L
eofill
-1 -1 265 616 1 1 291 594 @b
np 310 589 :M
320 593 :L
318 595 :L
317 597 :L
310 589 :L
eofill
np 353 621 :M
344 617 :L
346 615 :L
347 613 :L
353 621 :L
eofill
317 595 -1 1 346 615 1 317 594 @a
np 321 589 :M
331 590 :L
331 592 :L
329 595 :L
321 589 :L
eofill
np 413 621 :M
403 620 :L
403 618 :L
404 615 :L
413 621 :L
eofill
330 593 -1 1 404 617 1 330 592 @a
np 294 589 :M
285 594 :L
285 592 :L
284 589 :L
294 589 :L
eofill
-1 -1 197 622 1 1 284 591 @b
1 G
283 567 43 22 rF
0 G
283.5 567.5 43 21 rS
286 574 38 9 rC
gS
.6 .6 scale
508.017 962.681 :T
-508.017 -962.681 :T
482.017 966.681 :M
f5_14 sf
-.09(SymTab)A
gR
gR
gS 155 566 301 78 rC
np 235 632 :M
225 634 :L
225 632 :L
225 630 :L
235 632 :L
eofill
213 632 -1 1 225 631 1 213 631 @a
np 289 632 :M
279 634 :L
279 632 :L
279 630 :L
289 632 :L
eofill
267 632 -1 1 279 631 1 267 631 @a
np 343 632 :M
332 634 :L
332 632 :L
332 630 :L
343 632 :L
eofill
320 632 -1 1 333 631 1 320 631 @a
np 397 632 :M
386 634 :L
386 632 :L
386 630 :L
397 632 :L
eofill
374 632 -1 1 387 631 1 374 631 @a
1 G
181 621 32 22 rF
0 G
180.5 621.5 33 21 rS
187 628 19 9 rC
gS
.6 .6 scale
327.229 1052.683 :T
-327.229 -1052.683 :T
315.229 1056.683 :M
f5_14 sf
-.058(Lex)A
gR
gR
1 G
gS 155 566 301 78 rC
235 621 32 22 rF
0 G
234.5 621.5 33 21 rS
241 628 20 9 rC
gS
.6 .6 scale
417.295 1052.683 :T
-417.295 -1052.683 :T
405.295 1056.683 :M
f5_14 sf
-.336(Syn)A
gR
gR
gS 155 566 301 78 rC
289 621 32 22 rF
0 G
288.5 621.5 33 21 rS
294 628 22 9 rC
gS
.6 .6 scale
508.692 1052.683 :T
-508.692 -1052.683 :T
493.692 1056.683 :M
f5_14 sf
-.283(Sem)A
gR
gR
gS 155 566 301 78 rC
343 621 32 22 rF
0 G
342.5 621.5 33 21 rS
349 628 19 9 rC
gS
.6 .6 scale
598.094 1052.683 :T
-598.094 -1052.683 :T
587.094 1056.683 :M
f5_14 sf
-.05(Opt)A
gR
gR
gS 155 566 301 78 rC
397 621 32 22 rF
0 G
396.5 621.5 33 21 rS
400 628 26 9 rC
gS
.6 .6 scale
688.156 1052.683 :T
-688.156 -1052.683 :T
672.156 1056.683 :M
f5_14 sf
-.331(Code)A
gR
gR
0 G
gS 155 566 301 78 rC
np 181 632 :M
171 634 :L
171 632 :L
171 630 :L
181 632 :L
eofill
159 632 -1 1 171 631 1 159 631 @a
np 451 632 :M
440 634 :L
440 632 :L
440 630 :L
451 632 :L
eofill
428 632 -1 1 441 631 1 428 631 @a
156 617 22 9 rC
gS
.6 .6 scale
279.193 1036.016 :T
-279.193 -1036.016 :T
265.193 1040.016 :M
f5_14 sf
-.259(Text)A
gR
gR
gS 424 617 31 9 rC
gS
.6 .6 scale
733.185 1036.016 :T
-733.185 -1036.016 :T
712.185 1040.016 :M
f5_14 sf
-.155(  Code)A
gR
gR
gS 30 31 552 730 rC
123 660 :M
f2_12 sf
3.211 .321(Figure 16: Traditional Compiler Model with Shared Symbol Table)J
108 682 :M
f1_12 sf
3.791 .379(As time passed, compiler technology grew more sophisticated.  The)J
86 696 :M
3.94 .394(algorithms and representations of compilation grew more complex, and)J
86 710 :M
1.734 .173(increasing attention turned to the intermediate representation of the program)J
endp
%%Page: 30 30
%%BeginPageSetup
initializepage
(shaw; page: 30 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(27)S
86 82 :M
2.636 .264(during compilation.  Improved theoretical understanding, such as attribute)J
86 96 :M
1.322 .132(grammers, accelerated this trend.  The consequence was that by the mid-1980s)J
86 110 :M
1.177 .118(the intermediate representation \(for example, an attributed parse tree\), was the)J
86 124 :M
1.597 .16(center of attention.  It was created early during compilation and manipulated)J
86 138 :M
3.822 .382(during the remainder; the data structure might change in detail, but it)J
86 152 :M
3.515 .352(remained substantially one growing structure throughout.  However, we)J
86 166 :M
2.162 .216(continued \(sometimes to the present\) to model the compiler with sequential)J
86 180 :M
.482 .048(data flow as in Figure 17.)J
155 192 301 133 rC
np 305 215 :M
307 225 :L
305 225 :L
303 225 :L
305 215 :L
eofill
np 305 247 :M
303 237 :L
305 237 :L
307 237 :L
305 247 :L
eofill
-1 -1 305 238 1 1 304 224 @b
np 300 215 :M
293 223 :L
292 221 :L
290 219 :L
300 215 :L
eofill
np 256 247 :M
263 240 :L
264 241 :L
266 243 :L
256 247 :L
eofill
-1 -1 265 242 1 1 291 220 @b
np 310 215 :M
320 219 :L
318 221 :L
317 223 :L
310 215 :L
eofill
np 353 247 :M
344 243 :L
346 241 :L
347 240 :L
353 247 :L
eofill
317 221 -1 1 346 241 1 317 220 @a
np 321 215 :M
331 216 :L
331 218 :L
329 221 :L
321 215 :L
eofill
np 413 247 :M
403 246 :L
403 244 :L
404 241 :L
413 247 :L
eofill
330 219 -1 1 404 243 1 330 218 @a
np 235 258 :M
225 261 :L
225 258 :L
225 256 :L
235 258 :L
eofill
213 259 -1 1 225 258 1 213 258 @a
np 289 258 :M
279 261 :L
279 258 :L
279 256 :L
289 258 :L
eofill
267 259 -1 1 279 258 1 267 258 @a
np 343 258 :M
332 261 :L
332 258 :L
332 256 :L
343 258 :L
eofill
320 259 -1 1 333 258 1 320 258 @a
np 397 258 :M
386 261 :L
386 258 :L
386 256 :L
397 258 :L
eofill
374 259 -1 1 387 258 1 374 258 @a
np 305 269 :M
307 277 :L
305 277 :L
303 277 :L
305 269 :L
eofill
np 305 302 :M
303 293 :L
305 293 :L
307 293 :L
305 302 :L
eofill
-1 -1 306 294 1 1 305 277 @b
np 300 302 :M
291 299 :L
292 297 :L
294 295 :L
300 302 :L
eofill
np 251 269 :M
259 272 :L
258 274 :L
257 276 :L
251 269 :L
eofill
258 275 -1 1 293 297 1 258 274 @a
np 310 302 :M
316 295 :L
317 297 :L
319 299 :L
310 302 :L
eofill
np 359 269 :M
353 276 :L
352 274 :L
350 272 :L
359 269 :L
eofill
-1 -1 318 298 1 1 352 274 @b
np 316 302 :M
323 297 :L
323 299 :L
324 301 :L
316 302 :L
eofill
np 413 269 :M
406 274 :L
405 271 :L
404 270 :L
413 269 :L
eofill
-1 -1 324 300 1 1 405 271 @b
np 294 215 :M
285 220 :L
285 218 :L
284 215 :L
294 215 :L
eofill
-1 -1 197 248 1 1 284 217 @b
np 294 302 :M
286 301 :L
286 299 :L
287 297 :L
294 302 :L
eofill
197 270 -1 1 287 299 1 197 269 @a
1 G
181 247 32 22 rF
0 G
180.5 247.5 33 22 rS
187 254 19 9 rC
gS
.6 .602 scale
327.229 429.705 :T
-327.229 -429.705 :T
315.229 433.705 :M
f5_14 sf
-.058(Lex)A
gR
gR
1 G
gS 155 192 301 133 rC
235 247 32 22 rF
0 G
234.5 247.5 33 22 rS
241 254 20 9 rC
gS
.6 .602 scale
417.295 429.705 :T
-417.295 -429.705 :T
405.295 433.705 :M
f5_14 sf
-.336(Syn)A
gR
gR
gS 155 192 301 133 rC
289 247 32 22 rF
0 G
288.5 247.5 33 22 rS
294 254 22 9 rC
gS
.6 .602 scale
508.692 429.705 :T
-508.692 -429.705 :T
493.692 433.705 :M
f5_14 sf
-.283(Sem)A
gR
gR
gS 155 192 301 133 rC
343 247 32 22 rF
0 G
342.5 247.5 33 22 rS
349 254 19 9 rC
gS
.6 .602 scale
598.094 429.705 :T
-598.094 -429.705 :T
587.094 433.705 :M
f5_14 sf
-.05(Opt)A
gR
gR
gS 155 192 301 133 rC
397 247 32 22 rF
0 G
396.5 247.5 33 22 rS
400 254 26 9 rC
gS
.6 .602 scale
688.156 429.705 :T
-688.156 -429.705 :T
672.156 433.705 :M
f5_14 sf
-.331(Code)A
gR
gR
gS 155 192 301 133 rC
283 193 43 22 rF
0 G
283.5 193.5 43 21 rS
286 200 38 9 rC
gS
.6 .602 scale
508.017 338.311 :T
-508.017 -338.311 :T
482.017 342.311 :M
f5_14 sf
-.09(SymTab)A
gR
gR
gS 155 192 301 133 rC
289 302 38 22 rF
0 G
289.5 302.5 37 21 rS
295 308 24 9 rC
gS
.6 .602 scale
512.028 519.437 :T
-512.028 -519.437 :T
497.028 523.437 :M
f5_14 sf
-.187(Tree)A
gR
gR
0 G
gS 155 192 301 133 rC
np 181 258 :M
171 261 :L
171 258 :L
171 256 :L
181 258 :L
eofill
159 259 -1 1 171 258 1 159 258 @a
np 451 258 :M
440 261 :L
440 258 :L
440 256 :L
451 258 :L
eofill
428 259 -1 1 441 258 1 428 258 @a
156 243 22 9 rC
gS
.6 .602 scale
279.193 411.426 :T
-279.193 -411.426 :T
265.193 415.426 :M
f5_14 sf
-.259(Text)A
gR
gR
gS 424 243 31 9 rC
gS
.6 .602 scale
733.185 411.426 :T
-733.185 -411.426 :T
712.185 415.426 :M
f5_14 sf
-.155(  Code)A
gR
gR
gS 166 292 84 32 rC
gS
.6 .602 scale
345.879 510.512 :T
-345.879 -510.512 :T
291.879 498.512 :M
f7_18 sf
(Computations)S
280.204 516.79 :M
(\(transducers and)S
301.886 535.069 :M
-.098(transforms\))A
gR
gR
.5 G
gS 155 192 301 133 rC
np 193 269 :M
184 279 :L
183 276 :L
180 274 :L
193 269 :L
eofill
-2 -2 178 281 2 2 181 275 @b
-2 -2 178 291 2 2 176 279 @b
373 205 42 11 rC
gS
.6 .602 scale
656.455 349.605 :T
-656.455 -349.605 :T
625.455 355.605 :M
0 G
f7_18 sf
-.196(Memory)A
gR
gR
gS 155 192 301 133 rC
np 334 199 :M
347 199 :L
346 202 :L
346 205 :L
334 199 :L
2 lw
eofill
345 203 -2 2 372 208 2 345 201 @a
np 312 302 :M
318 289 :L
321 291 :L
323 294 :L
312 302 :L
eofill
-2 -2 322 292 2 2 381 219 @b
353 302 79 10 rC
gS
.6 .602 scale
654.097 509.129 :T
-654.097 -509.129 :T
592.097 515.129 :M
0 G
f7_18 sf
(Data fetch/store)S
gR
gR
gS 155 192 301 133 rC
np 339 285 :M
353 287 :L
352 290 :L
350 293 :L
339 285 :L
2 lw
eofill
350 291 -2 2 383 300 2 350 289 @a
np 377 237 :M
382 249 :L
379 250 :L
376 250 :L
377 237 :L
eofill
378 251 -2 2 388 300 2 378 249 @a
np 393 274 :M
397 288 :L
393 288 :L
389 288 :L
393 274 :L
eofill
-2 -2 394 302 2 2 392 286 @b
160 204 87 11 rC
gS
.6 .602 scale
340.197 346.282 :T
-340.197 -346.282 :T
270.197 352.282 :M
0 G
f7_18 sf
(Vestigal data flow)S
gR
gR
gS 155 192 301 133 rC
np 226 253 :M
216 244 :L
218 242 :L
221 240 :L
226 253 :L
2 lw
eofill
198 216 -2 2 219 241 2 198 214 @a
gR
gS 30 31 552 730 rC
197 341 :M
0 G
f2_12 sf
3.439 .344(Figure 17: Modern Canonical Compiler)J
108 363 :M
f1_12 sf
1.257 .126(In fact, a more appropriate view of this structure would re-direct attention)J
86 377 :M
1.855 .185(from the sequence of passes to the central shared representation.  When you)J
86 391 :M
2.066 .207(declare that the  tree is the locus of compilation information and the passes)J
86 405 :M
1.248 .125(define operations on the tree, it becomes natural to re-draw the architecture as)J
86 419 :M
1.244 .124(in Figure 18.  Now the connections between passes denote control flow, which)J
86 433 :M
3.022 .302(is a more accurate depiction; the rather stronger connections between the)J
86 447 :M
5.735 .573(passes and the tree/symbol table structure denote data access and)J
86 461 :M
1.938 .194(manipulation.  In this fashion, the architecture has become a repository, and)J
86 475 :M
.688 .069(that is indeed a more appropriate way to think about a compiler of this class.)J
108 499 :M
1.887 .189(Happily, this new view also accommodates various tools that operate on)J
86 513 :M
2.308 .231(the internal representation rather than the textual form of a program; these)J
86 527 :M
.892 .089(include syntax-directed editors and various analysis tools.)J
1 G
192 539 226 156 rC
259 601 88 55 rF
0 G
259.5 601.5 88 55 rS
259 635 -1 1 348 634 1 259 634 @a
281 640 44 11 rC
gS
.611 .609 scale
495.32 1058.385 :T
-495.32 -1058.385 :T
463.32 1063.385 :M
f4_18 sf
(SymTab)S
gR
gR
gS 289 612 28 11 rC
gS
.611 .609 scale
497.054 1013.077 :T
-497.054 -1013.077 :T
478.054 1019.077 :M
0 G
f5_18 sf
(Tree)S
gR
gR
1 G
gS 192 539 226 156 rC
193 607 33 22 rF
0 G
193.5 606.5 33 22 rS
1 G
215 568 33 22 rF
0 G
215.5 568.5 33 22 rS
1 G
259 552 33 22 rF
0 G
259.5 551.5 33 22 rS
1 G
358 568 33 22 rF
0 G
358.5 568.5 33 22 rS
1 G
380 607 33 22 rF
0 G
380.5 606.5 33 22 rS
200 613 19 9 rC
gS
.611 .609 scale
341.709 1013.436 :T
-341.709 -1013.436 :T
330.709 1017.436 :M
f5_14 sf
-.058(Lex)A
gR
gR
gS 222 575 19 9 rC
gS
.611 .609 scale
379.727 951.077 :T
-379.727 -951.077 :T
366.727 955.077 :M
0 G
f5_14 sf
-.336(Syn)A
gR
gR
gS 264 559 23 9 rC
gS
.611 .609 scale
451.125 923.179 :T
-451.125 -923.179 :T
437.125 927.179 :M
0 G
f5_14 sf
-.283(Sem)A
gR
gR
gS 362 575 25 9 rC
gS
.611 .609 scale
613.568 951.077 :T
-613.568 -951.077 :T
597.568 955.077 :M
0 G
f5_14 sf
-.294(Opt2)A
gR
gR
gS 383 613 26 9 rC
gS
.611 .609 scale
648.948 1013.436 :T
-648.948 -1013.436 :T
631.948 1017.436 :M
0 G
f5_14 sf
-.331(Code)A
gR
gR
0 G
gS 192 539 226 156 rC
np 259 629 :M
249 628 :L
249 626 :L
250 623 :L
259 629 :L
eofill
226 618 -1 1 250 625 1 226 617 @a
np 237 590 :M
247 594 :L
245 596 :L
244 598 :L
237 590 :L
eofill
np 259 607 :M
249 602 :L
251 601 :L
252 599 :L
259 607 :L
eofill
245 597 -1 1 252 600 1 245 596 @a
np 276 574 :M
278 584 :L
276 584 :L
273 584 :L
276 574 :L
eofill
np 276 601 :M
273 591 :L
276 591 :L
278 591 :L
276 601 :L
eofill
-1 -1 276 591 1 1 275 583 @b
np 331 574 :M
333 584 :L
331 584 :L
328 584 :L
331 574 :L
eofill
np 331 601 :M
328 591 :L
331 591 :L
333 591 :L
331 601 :L
eofill
-1 -1 331 591 1 1 330 583 @b
np 375 590 :M
367 598 :L
366 596 :L
364 593 :L
375 590 :L
eofill
np 347 607 :M
354 599 :L
356 601 :L
358 604 :L
347 607 :L
eofill
-1 -1 356 602 1 1 365 595 @b
np 380 618 :M
371 623 :L
370 621 :L
370 618 :L
380 618 :L
eofill
np 347 629 :M
356 623 :L
357 626 :L
358 628 :L
347 629 :L
eofill
-1 -1 357 626 1 1 370 620 @b
1 G
220 672 33 22 rF
0 G
219.5 671.5 34 22 rS
227 679 19 9 rC
gS
.611 .609 scale
387.912 1120.103 :T
-387.912 -1120.103 :T
374.912 1124.103 :M
f5_14 sf
-.146(Edit)A
gR
gR
gS 192 539 226 156 rC
np 253 672 :M
260 664 :L
261 666 :L
263 668 :L
253 672 :L
eofill
np 275 655 :M
268 663 :L
267 661 :L
265 660 :L
275 655 :L
eofill
-1 -1 261 666 1 1 267 661 @b
1 G
352 672 33 22 rF
0 G
351.5 671.5 34 22 rS
359 679 19 9 rC
gS
.611 .609 scale
604.019 1120.103 :T
-604.019 -1120.103 :T
591.019 1124.103 :M
f5_14 sf
-.336(Syn)A
gR
gR
gS 192 539 226 156 rC
np 330 655 :M
340 660 :L
338 661 :L
337 663 :L
330 655 :L
eofill
np 352 672 :M
342 668 :L
344 666 :L
345 664 :L
352 672 :L
eofill
337 662 -1 1 344 665 1 337 661 @a
np 226 590 :M
221 597 :L
219 596 :L
218 594 :L
226 590 :L
eofill
-1 -1 210 607 1 1 219 596 @b
np 259 557 :M
252 562 :L
251 560 :L
250 559 :L
259 557 :L
eofill
-1 -1 238 569 1 1 251 560 @b
np 303 557 :M
294 559 :L
294 557 :L
294 554 :L
303 557 :L
eofill
292 558 -1 1 295 557 1 292 557 @a
np 396 606 :M
391 599 :L
392 598 :L
394 598 :L
396 606 :L
eofill
391 596 -1 1 393 598 1 391 595 @a
.5 G
100 77 346.5 579 @f
1 G
342 546 75 18 rF
342 546 75 18 rC
gS
.611 .609 scale
621.656 909.846 :T
-621.656 -909.846 :T
592.656 905.846 :M
0 G
f5_14 sf
-.076(Might be)A
566.462 922.256 :M
-.036(          rule-based)A
gR
gR
1 G
gS 192 539 226 156 rC
314 552 33 22 rF
0 G
314.5 551.5 33 22 rS
318 559 25 9 rC
gS
.611 .609 scale
541.532 923.179 :T
-541.532 -923.179 :T
525.532 927.179 :M
f5_14 sf
-.294(Opt1)A
gR
gR
0 G
gS 192 539 226 156 rC
np 347 557 :M
354 561 :L
353 563 :L
351 564 :L
347 557 :L
eofill
353 564 -1 1 359 568 1 353 563 @a
np 358 573 :M
350 569 :L
351 567 :L
353 566 :L
358 573 :L
eofill
347 563 -1 1 352 567 1 347 562 @a
gR
gS 30 31 552 730 rC
191 711 :M
f2_12 sf
3.517 .352(Figure 18: Canonical Compiler, Revisited)J
endp
%%Page: 31 31
%%BeginPageSetup
initializepage
(shaw; page: 31 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(28)S
108 82 :M
2.739 .274(Note that this repository resembles a blackboard in some respects and)J
86 96 :M
2.415 .242(differs in others.  Like a blackboard, the information of the computation is)J
86 110 :M
1.196 .12(located centrally and operated on by independent computations which interact)J
86 124 :M
1.893 .189(only through the shared data.  However, whereas the execution order of the)J
86 138 :M
.922 .092(operations in a blackboard is determined by the types of the incoming database)J
86 152 :M
1.231 .123(modifications, the execution order of the compiler is predetermined.)J
86 176 :M
f3_12 sf
(4.4. )S
122 176 :M
.324 .032(Case 4:  A Layered Design with Different Styles for the Layers)J
86 200 :M
f1_12 sf
1.067 .107(The PROVOX\250 system by Fisher Controls offers distributed process control for)J
86 214 :M
2.362 .236(chemical production processes [43].  Process control capabilities range from)J
86 228 :M
1.179 .118(simple control loops that control pressure, flow, or levels to complex strategies)J
86 242 :M
1.475 .147(involving interrelated control loops.  Provisions are made for integration with)J
86 256 :M
1.266 .127(plant management and information systems in support of computer integrated)J
86 270 :M
1.686 .169(manufacturing.  The system architecture integrates process control with plant)J
86 284 :M
1.986 .199(management and information systems in a 5-level layered hierarchy.  Figure)J
86 298 :M
1.147 .115(19 shows this hierarchy: the right side is the software view, and the left side is)J
86 312 :M
1.298 .13(the hardware view.)J
132 324 346 258 rC
273 360 :M
271.663 358.661 271 358 271 358 :C
271 358 271.996 357.828 274 357.5 :C
275.996 357.161 277 357 277 357 :C
277 357 277.162 358.161 277.5 360.5 :C
277.829 362.828 278 364 278 364 :C
278 364 277.662 363.661 277 363 :C
276.329 362.328 276 362 276 362 :C
276 362 275.662 362.328 275 363 :C
274.329 363.661 274 364 274 364 :C
stroke
-1 -1 272 363 1 1 273 360 @b
159 468 -1 1 291 540 1 159 467 @a
193 431 -1 1 291 486 1 193 430 @a
261 358 -1 1 272 363 1 261 357 @a
274 365 -1 1 291 373 1 274 364 @a
gR
gS 0 0 552 730 rC
gS
.861 .86 scale
262.488 607.649 :T
28.7 rotate
-262.488 -607.649 :T
204.488 611.649 :M
f4_7 sf
-.027(PROVOXplus Controllers)A
gR
gS
.861 .86 scale
275.696 559.973 :T
29 rotate
-275.696 -559.973 :T
234.696 563.973 :M
f4_7 sf
-.048(PROVUE Consoles)A
gR
gS
.861 .86 scale
295.477 518.46 :T
29.1 rotate
-295.477 -518.46 :T
247.477 517.46 :M
f4_7 sf
-.004(ENVOX Configuration)A
gR
gS
.861 .86 scale
296.361 476.598 :T
29.5 rotate
-296.361 -476.598 :T
275.361 475.598 :M
f4_7 sf
-.087(PROVOXplus)A
264.905 487.226 :M
-.042(Application Software)A
gR
gS
.861 .86 scale
325.674 409.991 :T
29 rotate
-325.674 -409.991 :T
320.674 406.991 :M
f4_6 sf
(Corp)S
312.541 415.131 :M
-.042(Computers)A
gR
gS
.861 .86 scale
308.789 445.201 :T
29 rotate
-308.789 -445.201 :T
292.789 444.201 :M
f4_7 sf
(Interface to)S
285.818 454.667 :M
-.043(Host Computers)A
gR
132 324 346 258 rC
-1 -1 292 541 1 1 423 468 @b
-1 -1 292 487 1 1 389 432 @b
-1 -1 292 374 1 1 319 356 @b
gR
gS 0 0 552 730 rC
gS
.861 .86 scale
434.681 603.184 :T
332 rotate
-434.681 -603.184 :T
399.681 601.184 :M
f4_7 sf
-.05(Process Measurement )A
417.109 611.649 :M
-.017(and Control)A
gR
gS
.861 .86 scale
410.519 558.996 :T
331 rotate
-410.519 -558.996 :T
398.519 556.996 :M
f4_7 sf
-.047(Process)A
392.709 567.462 :M
-.056(Supervision)A
gR
gS
.861 .86 scale
383.796 509.157 :T
331 rotate
-383.796 -509.157 :T
371.796 508.157 :M
f4_7 sf
-.047(Process)A
364.825 518.623 :M
-.094(Management)A
gR
gS
.861 .86 scale
355.749 406.665 :T
330 rotate
-355.749 -406.665 :T
342.749 404.665 :M
f4_7 sf
-.055(Corp)A
342.749 416.294 :M
-.11(Mgmt.)A
gR
132 324 346 258 rC
-1 -1 292 439 1 1 358 399 @b
gR
gS 0 0 552 730 rC
gS
.861 .86 scale
364.854 459.155 :T
331 rotate
-364.854 -459.155 :T
357.854 458.155 :M
f4_7 sf
-.237(Plant)A
345.073 468.621 :M
-.094(Management)A
gR
316 334 35 8 rC
gS
.861 .86 scale
386.31 392.363 :T
-386.31 -392.363 :T
368.31 395.363 :M
f4_8 sf
-.131(Level 5)A
gR
gR
gS 348 370 34 7 rC
gS
.861 .86 scale
424.49 434.224 :T
-424.49 -434.224 :T
405.49 437.224 :M
f4_8 sf
-.131(Level 4)A
gR
gR
gS 380 406 34 7 rC
gS
.861 .86 scale
460.669 476.086 :T
-460.669 -476.086 :T
442.669 479.086 :M
f4_8 sf
-.131(Level 3)A
gR
gR
gS 409 439 35 8 rC
gS
.861 .86 scale
494.363 514.46 :T
-494.363 -514.46 :T
476.363 517.46 :M
f4_8 sf
-.131(Level 2)A
gR
gR
gS 443 473 34 8 rC
gS
.861 .86 scale
534.867 553.996 :T
-534.867 -553.996 :T
515.867 556.996 :M
f4_8 sf
-.131(Level 1)A
gR
gR
gS 132 324 346 258 rC
-1 -1 135 495 1 1 290 326 @b
-1 -1 291 582 1 1 290 327 @b
290 327 -1 1 453 500 1 290 326 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
134 495 -1 1 291 581 1 134 494 @a
-1 -1 291 582 1 1 452 499 @b
gR
gS 0 0 552 730 rC
gS
.861 .86 scale
274.419 514.46 :T
29 rotate
-274.419 -514.46 :T
261.419 517.46 :M
f4_7 sf
-.088(Software)A
gR
gR
gS 30 31 552 730 rC
181 598 :M
f2_12 sf
2.268 .227(Figure 19: PROVOX \320 Hierarchical Top Level)J
86 620 :M
f1_12 sf
2.317 .232(Each level corresponds to a different process management function with its)J
86 634 :M
1.662 .166(own decision-support requirements.)J
113 657 :M
2 .2(\245 Level 1:  Process measurement and control: direct adjustment of final)J
122 671 :M
2.368 .237(control elements.)J
113 693 :M
2.363 .236(\245 Level 2:  Process supervision: operations console for monitoring and)J
122 707 :M
1.47 .147(controlling Level 1.)J
endp
%%Page: 32 32
%%BeginPageSetup
initializepage
(shaw; page: 32 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(29)S
113 82 :M
3.687 .369(\245 Level 3:  Process management: computer-based plant automation,)J
122 96 :M
1.417 .142(including management reports, optimization strategies, and guidance to)J
122 110 :M
1.788 .179(operations console.)J
113 132 :M
3.9 .39(\245 Levels 4 and 5:  Plant and corporate management:  higher-level)J
122 146 :M
4.9 .49(functions such as cost accounting, inventory control, and order)J
122 160 :M
.12(processing/scheduling.)A
108 183 :M
.972 .097(Different kinds of computation and response times are required at different)J
86 197 :M
1.075 .107(levels of this hierarchy.  Accordingly, different computational models are used.)J
86 211 :M
4.036 .404(Levels 1 to 3 are object-oriented; Levels 4 and 5 are largely based on)J
86 225 :M
3.442 .344(conventional data-processing repository models.  For present purposes it)J
86 239 :M
1.134 .113(suffices to examine the object-oriented model of Level 2 and the repositories of)J
86 253 :M
.571 .057(Levels 4 and 5.)J
1 G
179 265 252 195 rC
216 267 214 153 rF
0 G
216.5 267.5 213 152 rS
1 G
216 267 63 24 rF
0 G
216.5 267.5 62 23 rS
240 268 19 10 rC
gS
.848 .84 scale
293.037 324.388 :T
-293.037 -324.388 :T
284.037 328.388 :M
f4_7 sf
-.195(TAG)A
gR
gR
1 G
gS 179 265 252 195 rC
218 322 67 78 rF
0 G
218.5 322.5 66 77 rS
1 G
288 324 60 29 rF
0 G
288.5 324.5 59 28 rS
1 G
288 369 60 30 rF
:a
40 <E070381C0E0783C1
><E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1
>fg bk :b
288.5 369.5 59 29 rS
:e
239 313 25 9 rC
gS
.848 .84 scale
295.859 376.74 :T
-295.859 -376.74 :T
282.859 380.74 :M
0 G
f4_7 sf
-.222(DATA)A
gR
gR
gS 301 313 47 9 rC
gS
.848 .84 scale
381.93 376.74 :T
-381.93 -376.74 :T
355.93 380.74 :M
0 G
f4_7 sf
-.088(ACTION)A
gR
gR
gS 367 313 45 9 rC
gS
.848 .84 scale
458.538 376.74 :T
-458.538 -376.74 :T
432.538 380.74 :M
0 G
f4_7 sf
-.057(SERVICES)A
gR
gR
gS 221 328 64 28 rC
gS
.848 .84 scale
297.644 406.777 :T
-297.644 -406.777 :T
261.644 399.777 :M
0 G
f4_7 sf
-.028(OPERATING)A
261.644 410.485 :M
-.165(TUNING)A
261.644 421.193 :M
-.059(CONFIGURATION)A
gR
gR
gS 299 327 43 19 rC
gS
.848 .84 scale
376.395 399.587 :T
-376.395 -399.587 :T
352.395 398.587 :M
0 G
f4_7 sf
-.076(ALGORITHM)A
352.395 409.295 :M
-.091(NAME\(S\))A
gR
gR
gS 299 378 38 9 rC
gS
.848 .84 scale
373.395 454.077 :T
-373.395 -454.077 :T
352.395 458.077 :M
0 G
f4_7 sf
-.135(TEMPLATE)A
gR
gR
gS 179 265 252 195 rC
206 279 214 154 rF
0 G
206.5 279.5 213 153 rS
1 G
206 279 63 26 rF
0 G
206.5 279.5 62 25 rS
232 282 18 9 rC
gS
.848 .84 scale
282.43 339.855 :T
-282.43 -339.855 :T
273.43 343.855 :M
f4_7 sf
-.195(TAG)A
gR
gR
gS 179 265 252 195 rC
210 332 67 78 rF
0 G
210.5 332.5 66 77 rS
1 G
281 334 59 29 rF
0 G
281.5 334.5 58 28 rS
1 G
281 379 59 30 rF
:a
40 <E070381C0E0783C1
><E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1
>fg bk :b
281.5 379.5 58 29 rS
:e
232 323 24 9 rC
gS
.848 .84 scale
286.43 389.828 :T
-286.43 -389.828 :T
273.43 393.828 :M
0 G
f4_7 sf
-.222(DATA)A
gR
gR
gS 294 323 46 9 rC
gS
.848 .84 scale
372.502 389.828 :T
-372.502 -389.828 :T
346.502 393.828 :M
0 G
f4_7 sf
-.088(ACTION)A
gR
gR
gS 358 323 47 9 rC
gS
.848 .84 scale
449.109 389.828 :T
-449.109 -389.828 :T
423.109 393.828 :M
0 G
f4_7 sf
-.057(SERVICES)A
gR
gR
gS 213 338 64 28 rC
gS
.848 .84 scale
288.216 418.675 :T
-288.216 -418.675 :T
252.216 411.675 :M
0 G
f4_7 sf
-.028(OPERATING)A
252.216 422.383 :M
-.165(TUNING)A
252.216 433.091 :M
-.059(CONFIGURATION)A
gR
gR
gS 291 337 43 19 rC
gS
.848 .84 scale
368.145 411.485 :T
-368.145 -411.485 :T
344.145 410.485 :M
0 G
f4_7 sf
-.076(ALGORITHM)A
344.145 421.193 :M
-.091(NAME\(S\))A
gR
gR
gS 291 388 38 9 rC
gS
.848 .84 scale
365.145 465.975 :T
-365.145 -465.975 :T
344.145 469.975 :M
0 G
f4_7 sf
-.135(TEMPLATE)A
gR
gR
gS 179 265 252 195 rC
193 293 214 154 rF
0 G
193.5 293.5 213 153 rS
1 G
193 293 63 25 rF
0 G
193.5 293.5 62 24 rS
218 295 19 10 rC
gS
.848 .84 scale
267.109 356.513 :T
-267.109 -356.513 :T
258.109 360.513 :M
f4_7 sf
-.195(TAG)A
gR
gR
gS 179 265 252 195 rC
198 345 67 77 rF
0 G
198.5 345.5 66 76 rS
1 G
268 346 59 30 rF
0 G
268.5 346.5 58 29 rS
1 G
268 391 59 30 rF
:a
40 <E070381C0E0783C1
><E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1
>fg bk :b
268.5 391.5 58 29 rS
:e
219 335 24 9 rC
gS
.848 .84 scale
272.287 402.915 :T
-272.287 -402.915 :T
259.287 406.915 :M
0 G
f4_7 sf
-.222(DATA)A
gR
gR
gS 281 335 46 9 rC
gS
.848 .84 scale
358.359 402.915 :T
-358.359 -402.915 :T
332.359 406.915 :M
0 G
f4_7 sf
-.088(ACTION)A
gR
gR
gS 345 335 47 9 rC
gS
.848 .84 scale
433.788 402.915 :T
-433.788 -402.915 :T
407.788 406.915 :M
0 G
f4_7 sf
-.057(SERVICES)A
gR
gR
gS 200 350 65 28 rC
gS
.848 .84 scale
273.894 431.763 :T
-273.894 -431.763 :T
236.894 424.763 :M
0 G
f4_7 sf
-.028(OPERATING)A
236.894 436.661 :M
-.165(TUNING)A
236.894 447.369 :M
-.059(CONFIGURATION)A
gR
gR
gS 278 349 44 19 rC
gS
.848 .84 scale
352.823 425.763 :T
-352.823 -425.763 :T
328.823 424.763 :M
0 G
f4_7 sf
-.076(ALGORITHM)A
328.823 435.471 :M
-.091(NAME\(S\))A
gR
gR
gS 278 400 38 10 rC
gS
.848 .84 scale
349.823 481.443 :T
-349.823 -481.443 :T
328.823 485.443 :M
0 G
f4_7 sf
-.135(TEMPLATE)A
gR
gR
gS 179 265 252 195 rC
181 305 213 154 rF
0 G
181.5 305.5 212 153 rS
1 G
181 306 62 22 rF
0 G
181.5 306.5 61 21 rS
203 310 18 10 rC
gS
.848 .84 scale
249.43 374.36 :T
-249.43 -374.36 :T
240.43 378.36 :M
f4_7 sf
-.195(TAG)A
gR
gR
gS 179 265 252 195 rC
184 357 67 79 rF
0 G
184.5 357.5 66 78 rS
1 G
320 357 65 79 rF
0 G
320.5 357.5 64 78 rS
1 G
255 359 59 30 rF
0 G
255.5 359.5 58 29 rS
1 G
255 404 59 30 rF
:a
40 <E070381C0E0783C1
><E0E0E07070703838381C1C1C0E0E0E070707838383C1C1C1
>fg bk :b
255.5 404.5 58 29 rS
:e
205 348 25 9 rC
gS
.848 .84 scale
255.787 419.573 :T
-255.787 -419.573 :T
242.787 423.573 :M
0 G
f4_7 sf
-.222(DATA)A
gR
gR
gS 267 348 47 9 rC
gS
.848 .84 scale
341.859 419.573 :T
-341.859 -419.573 :T
315.859 423.573 :M
0 G
f4_7 sf
-.088(ACTION)A
gR
gR
gS 332 348 46 9 rC
gS
.848 .84 scale
418.466 419.573 :T
-418.466 -419.573 :T
392.466 423.573 :M
0 G
f4_7 sf
-.057(SERVICES)A
gR
gR
gS 187 363 68 27 rC
gS
.848 .84 scale
259.394 447.23 :T
-259.394 -447.23 :T
220.394 440.23 :M
0 G
f4_7 sf
-.028(OPERATING)A
220.394 450.938 :M
-.165(TUNING)A
220.394 462.837 :M
-.059(CONFIGURATION)A
gR
gR
gS 323 366 72 37 rC
gS
.848 .84 scale
421.859 455.8 :T
-421.859 -455.8 :T
381.859 443.8 :M
0 G
f4_7 sf
-.054(COMMUNICATION)A
381.859 455.698 :M
-.18(TRACE)A
381.859 466.406 :M
-.156(ALARMS)A
381.859 477.114 :M
(ETC)S
gR
gR
gS 262 363 53 18 rC
gS
.848 .84 scale
338.966 441.23 :T
-338.966 -441.23 :T
309.966 440.23 :M
0 G
f4_7 sf
-.076(ALGORITHM)A
309.966 450.938 :M
-.091(NAME\(S\))A
gR
gR
gS 259 414 58 9 rC
gS
.848 .84 scale
339.43 496.911 :T
-339.43 -496.911 :T
306.43 500.911 :M
0 G
f4_7 sf
-.135(TEMPLATE)A
gR
gR
gS 30 31 552 730 rC
168 476 :M
0 G
f2_12 sf
2.436 .244(Figure 20: PROVOX \320 Object-oriented Elaboration)J
108 498 :M
f1_12 sf
1.098 .11(For the control and monitoring functions of Level 2, PROVOX uses a set of)J
86 512 :M
.831 .083(points, or loci of process control.  Figure 20 shows the canonical form of a point)J
86 526 :M
4.166 .417(definition; seven specialized forms support the most common kinds of)J
86 540 :M
5.199 .52(control.  Points are, in essence, object-oriented design elements that)J
86 554 :M
2.117 .212(encapsulate information about control points of the process.  The points are)J
86 568 :M
.863 .086(individually configured to achieve the desired control strategy.  Data associated)J
86 582 :M
1.367 .137(with a point includes:  Operating parameters, including current process value,)J
86 596 :M
4.021 .402(setpoint \(target value\), valve output, and mode \(automatic or manual\).)J
86 610 :M
2.858 .286(Tuning  parameters, such as gain, reset, derivative, and alarm trip-points.)J
86 624 :M
.945 .095(Configuration  parameters, including tag \(name\) and I/O channels.)J
108 648 :M
1.601 .16(In addition, the point's data can include a template for a control strategy.)J
86 662 :M
2.785 .278(Like any good object, a point also includes procedural definitions such as)J
86 676 :M
2.064 .206(control algorithms, communication connections, reporting services, and trace)J
86 690 :M
3.571 .357(facilities.  A collection of points implements the desired process control)J
86 704 :M
1.286 .129(strategy through the communication services and through the actual dynamics)J
endp
%%Page: 33 33
%%BeginPageSetup
initializepage
(shaw; page: 33 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(30)S
86 82 :M
1.118 .112(of the process \(e.g., if one point increases flow into a tank, the current value of)J
86 96 :M
4.218 .422(a point that senses tank level will reflect this change\).  Although the)J
86 110 :M
2.236 .224(communication through process state deviates from the usual procedural or)J
86 124 :M
1.956 .196(message-based control of objects, points are conceptually very like objects in)J
86 138 :M
1.34 .134(their encapsulation of essential state and action information.)J
108 162 :M
2.405 .241(Reports from points appear as input transactions to data collection and)J
86 176 :M
1.391 .139(analysis processes at higher design levels.  The organization of the points into)J
86 190 :M
1.564 .156(control processes can be defined by the designer to match the process control)J
86 204 :M
2.467 .247(strategy.  These can be further aggregated into Plant Process Areas \(points)J
86 218 :M
1.925 .192(related to a set of equipment such as a cooling tower\) and thence into Plant)J
86 232 :M
2.237 .224(Management Areas \(segments of a plant that would be controlled by single)J
86 246 :M
.148(operators\).)A
108 270 :M
2.562 .256(PROVOX makes provisions for integration with plant management and)J
86 284 :M
3.422 .342(business systems at Levels 4 and 5.  Selection of those systems is often)J
86 298 :M
1.932 .193(independent of process control design; PROVOX does not itself provide MIS)J
86 312 :M
1.09 .109(systems directly but does provide for integrating a conventional host computer)J
86 326 :M
3.157 .316(with conventional database management.  The data collection facilities of)J
86 340 :M
2.897 .29(Level 3, the reporting facilities of Level 2, and the network that supports)J
86 354 :M
5.338 .534(distributed implementation suffice to provide process information as)J
86 368 :M
2.435 .243(transactions to these databases.  Such databases are commonly designed as)J
86 382 :M
2.266 .227(repositories, with transaction processing functions supporting a central data)J
86 396 :M
.814 .081(store---quite a different style from the object-oriented design of Level 2.)J
108 420 :M
1.047 .105(The use of hierarchical layers at the top level of a system is fairly common.)J
86 434 :M
3.518 .352(This permits strong separation of different classes of function and clean)J
86 448 :M
2.58 .258(interfaces between the layers.  However, within each layer the interactions)J
86 462 :M
1.064 .106(among components are often too intricate to permit strict layering.)J
86 486 :M
f3_12 sf
(4.5.)S
122 486 :M
1.131 .113(Case 5: An Interpreter Using Different Idioms for the Components)J
86 510 :M
f1_12 sf
1.754 .175(Rule-based systems provide a means of codifying the problem-solving know-)J
86 524 :M
3.795 .379(how of human experts.  These experts tend to capture problem-solving)J
86 538 :M
2.459 .246(techniques as sets of situation-action rules whose execution or activation is)J
86 552 :M
1.879 .188(sequenced in response to the conditions of the computation rather than by a)J
86 566 :M
3.628 .363(predetermined scheme.  Since these rules are not directly executable by)J
86 580 :M
2.553 .255(available computers, systems for interpreting such rules must be provided.)J
86 594 :M
.704 .07(Hayes-Roth surveyed the architecture and operation of rule-based systems [44].)J
108 618 :M
.893 .089(The basic features of a rule-based system, shown in Hayes-Roth\325s rendering)J
86 632 :M
3.334 .333(as Figure 21, are essentially the features of a table-driven interpreter, as)J
86 646 :M
2.048 .205(outlined earlier.)J
113 669 :M
.71 .071(\245 The )J
f2_12 sf
.293(pseudo-code)A
f1_12 sf
1.016 .102( to be executed, in this case the knowledge base)J
113 691 :M
1.451 .145(\245 The )J
f2_12 sf
3.724 .372(interpretation engine,)J
f1_12 sf
1.912 .191( in this case the rule interpreter, the heart of)J
122 705 :M
1.796 .18(the inference engine)J
endp
%%Page: 34 34
%%BeginPageSetup
initializepage
(shaw; page: 34 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(31)S
113 82 :M
1.89 .189(\245 The )J
f2_12 sf
3.129 .313(control state of the interpretation engine,)J
f1_12 sf
2.223 .222( in this case the rule and)J
122 96 :M
1.239 .124(data element selector)J
113 118 :M
2.088 .209(\245 The )J
f2_12 sf
3.243 .324(current state of the program)J
f1_12 sf
3.211 .321( running on the virtual machine, in)J
122 132 :M
1.138 .114(this case the working memory.)J
1 G
162 143 287 163 rC
342 152 107 58 rF
0 G
342.5 152.5 106 57 rS
1 G
352 162 39 38 rF
0 G
352.5 162.5 38 37 rS
1 G
400 162 39 38 rF
0 G
400.5 162.5 38 37 rS
1 G
226 171 59 39 rF
0 G
226.5 171.5 58 38 rS
358 172 25 18 rC
gS
.599 .599 scale
619.188 302.718 :T
-619.188 -302.718 :T
604.188 298.718 :M
f5_14 sf
-.11(Rule)A
602.519 313.737 :M
-.152(Base)A
gR
gR
gS 400 172 38 18 rC
gS
.599 .599 scale
699.97 302.718 :T
-699.97 -302.718 :T
685.97 298.718 :M
f5_14 sf
-.259(Fact)A
672.618 313.737 :M
-.133(Memory)A
gR
gR
gS 358 144 74 9 rC
gS
.599 .599 scale
660.188 246.322 :T
-660.188 -246.322 :T
604.188 250.322 :M
f5_14 sf
(Knowledge Base)S
gR
gR
gS 235 182 38 18 rC
gS
.599 .599 scale
422.559 319.406 :T
-422.559 -319.406 :T
395.559 315.406 :M
f5_14 sf
-.164(Working)A
397.228 330.425 :M
-.133(Memory)A
gR
gR
1 G
gS 162 143 287 163 rC
59 58 395.5 276 @j
0 G
58 57 395.5 276 @f
1 G
59 58 255.5 276 @j
0 G
58 57 255.5 276 @f
np 226 190 :M
218 192 :L
218 190 :L
218 188 :L
226 190 :L
eofill
168 191 -1 1 219 190 1 168 190 @a
np 168 275 :M
176 274 :L
176 275 :L
176 278 :L
168 275 :L
eofill
176 276 -1 1 227 275 1 176 275 @a
np 371 257 :M
363 253 :L
365 251 :L
366 250 :L
371 257 :L
eofill
284 191 -1 1 366 251 1 284 190 @a
np 395 247 :M
393 239 :L
395 239 :L
397 239 :L
395 247 :L
eofill
-1 -1 396 240 1 1 395 209 @b
np 284 275 :M
293 274 :L
293 275 :L
293 278 :L
284 275 :L
eofill
293 276 -1 1 367 275 1 293 275 @a
np 264 247 :M
263 239 :L
264 239 :L
267 239 :L
264 247 :L
eofill
-1 -1 265 240 1 1 264 209 @b
np 245 209 :M
248 217 :L
245 217 :L
243 217 :L
245 209 :L
eofill
-1 -1 246 248 1 1 245 217 @b
176 182 30 9 rC
gS
.599 .599 scale
318.756 311.406 :T
-318.756 -311.406 :T
298.756 315.406 :M
f5_14 sf
-.197(Inputs)A
gR
gR
gS 178 267 37 9 rC
gS
.599 .599 scale
329.094 453.255 :T
-329.094 -453.255 :T
302.094 457.255 :M
0 G
f5_14 sf
-.107(Outputs)A
gR
gR
gS 296 282 63 9 rC
gS
.599 .599 scale
544.708 478.287 :T
-544.708 -478.287 :T
500.708 482.287 :M
0 G
f5_14 sf
-.019(Selected data)A
gR
gR
gS 297 267 60 9 rC
gS
.599 .599 scale
545.377 453.255 :T
-545.377 -453.255 :T
502.377 457.255 :M
0 G
f5_14 sf
-.011(Selected rule)A
gR
gR
gS 229 267 50 18 rC
gS
.599 .599 scale
422.912 461.255 :T
-422.912 -461.255 :T
408.912 457.255 :M
0 G
f5_14 sf
-.11(Rule)A
388.883 472.274 :M
-.099(Interpreter)A
gR
gR
gS 365 263 61 27 rC
gS
.599 .599 scale
658.892 459.911 :T
-658.892 -459.911 :T
630.892 448.911 :M
0 G
f5_14 sf
-.015(Rule and)A
615.871 463.93 :M
-.061(Data Element)A
629.223 478.95 :M
-.028(Selection)A
gR
gR
gS 276 149 45 11 rC
gS
.599 .599 scale
496.651 256.004 :T
-496.651 -256.004 :T
460.651 262.004 :M
0 G
f5_18 sf
-.2(Memory)A
gR
gR
.5 G
gS 162 143 287 163 rC
np 270 176 :M
279 162 :L
282 164 :L
285 167 :L
270 176 :L
eofill
-4 -4 285 166 4 4 285 158 @b
np 384 262 :M
370 252 :L
373 250 :L
377 247 :L
384 262 :L
4 lw
eofill
296 162 -4 4 375 248 4 296 158 @a
np 346 171 :M
329 169 :L
330 165 :L
332 162 :L
346 171 :L
eofill
312 162 -4 4 333 163 4 312 158 @a
163 219 70 11 rC
gS
.599 .599 scale
330.051 373.821 :T
-330.051 -373.821 :T
272.051 378.821 :M
0 G
f5_18 sf
-.096(Computation)A
gR
gR
gS 179 230 61 11 rC
gS
.599 .599 scale
347.756 392.178 :T
-347.756 -392.178 :T
298.756 397.178 :M
0 G
f5_18 sf
(state mach)S
gR
gR
gS 162 143 287 163 rC
np 238 257 :M
221 254 :L
223 250 :L
224 247 :L
238 257 :L
4 lw
eofill
199 243 -4 4 225 248 4 199 239 @a
gR
gS 30 31 552 730 rC
208 322 :M
0 G
f2_12 sf
2.665 .267(Figure 21: Basic Rule-Based System)J
108 344 :M
f1_12 sf
3.336 .334(Rule-based systems make heavy use of pattern matching and context)J
86 358 :M
2.198 .22(\(currently relevant rules\).  Adding special mechanisms for these facilities to)J
86 372 :M
1.267 .127(the design leads to the more complicated view shown in Figure 22.  In adding)J
86 386 :M
3.352 .335(this complexity, the original simple interpreter vanishes in a sea of new)J
86 400 :M
3.36 .336(interactions and data flows.  Although the interfaces among the original)J
86 414 :M
1.111 .111(modules remain, they are not distinguished from the newly-added interfaces.)J
108 438 :M
2.669 .267(However, the interpreter model can be rediscovered by identifying the)J
86 452 :M
1.91 .191(components of Figure 22 with their design antecedents in Figure 21.  This is)J
86 466 :M
1.337 .134(done in Figure 23.  Viewed in this way, the elaboration of the design becomes)J
86 480 :M
.849 .085(much easier to explain and understand.  For example, we see that:)J
113 503 :M
2.895 .29(\245 The knowledge base remains a relatively simple memory structure,)J
122 517 :M
5.212 .521(merely gaining substructure to distinguish active from inactive)J
122 531 :M
.313(contents.)A
113 553 :M
1.389 .139(\245 The rule interpreter is expanded with the interpreter idiom \(that is, the)J
122 567 :M
1.25 .125(interpretation engine of the rule-based system is itself implemented as a)J
122 581 :M
1.272 .127(table-driven interpreter\), with control procedures playing the role of the)J
122 595 :M
2.993 .299(pseudo-code to be executed and the execution stack the role of the)J
122 609 :M
1.018 .102(current program state.)J
113 631 :M
3.613 .361(\245 \322Rule and data element selection\323 is implemented primarily as a)J
122 645 :M
5.072 .507(pipeline that progressively transforms active rules and facts to)J
122 659 :M
2.577 .258(prioritized activations; in this pipeline the third filter \(\322nominators\323\))J
122 673 :M
.523 .052(also uses a fixed database of metarules.)J
113 695 :M
1.199 .12(\245 Working memory is not further elaborated.)J
endp
%%Page: 35 35
%%BeginPageSetup
initializepage
(shaw; page: 35 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(32)S
1 G
105 72 400 437 rC
107 397 57 40 rF
0 G
107.5 397.5 56 39 rS
1 G
107 306 56 40 rF
0 G
107.5 306.5 55 39 rS
1 G
250 327 26 @i
0 G
250 327 25.5 @e
1 G
51 53 249.5 412.5 @j
0 G
50 52 249.5 412.5 @f
1 G
453 219 26 @i
0 G
453 219 25.5 @e
1 G
371 85 108 71 rF
0 G
371.5 85.5 107 70 rS
-1 -1 427 155 1 1 426 85 @b
370 121 -1 1 480 120 1 370 120 @a
385 91 36 14 rC
gS
.75 .75 scale
537.332 130.407 :T
-537.332 -130.407 :T
514.332 129.407 :M
f5_8 sf
-.112(Inactive)A
514.332 137.412 :M
-.029(rules)A
gR
gR
gS 388 132 28 13 rC
gS
.75 .75 scale
535.329 183.771 :T
-535.329 -183.771 :T
518.329 182.771 :M
f5_8 sf
(Active)S
518.329 192.109 :M
-.029(rules)A
gR
gR
gS 442 132 27 13 rC
gS
.75 .75 scale
607.282 183.771 :T
-607.282 -183.771 :T
590.282 182.771 :M
f5_8 sf
(Active)S
590.282 192.109 :M
-.166(facts)A
gR
gR
gS 441 94 40 13 rC
gS
.75 .75 scale
613.95 134.075 :T
-613.95 -134.075 :T
588.95 132.075 :M
f5_8 sf
-.112(Inactive)A
588.95 141.414 :M
-.166(facts)A
gR
gR
gS 105 72 400 437 rC
426 155 :M
426 156.998 426 158 426 158 :C
426 158 429.993 161.497 438 168.5 :C
445.993 175.497 450 179 450 179 :C
450 179 450 179.497 450 180.5 :C
450 181.497 450 182 450 182 :C
stroke
440 209 42 20 rC
gS
.75 .75 scale
613.617 291.496 :T
-613.617 -291.496 :T
587.617 285.496 :M
f5_8 sf
-.111(Rule and)A
587.617 294.835 :M
-.073(fact)A
587.617 304.173 :M
-.048(compiler)A
gR
gR
gS 105 72 400 437 rC
np 453 283 :M
451 274 :L
453 274 :L
455 274 :L
453 283 :L
eofill
-1 -1 454 275 1 1 453 246 @b
1 G
425 281 63 73 rF
0 G
425.5 281.5 62 72 rS
383 247 66 21 rC
gS
.75 .75 scale
553.29 343.526 :T
-553.29 -343.526 :T
578.29 337.526 :M
f5_8 sf
-.139(Rule )A
556.971 345.53 :M
-.025(antecedent)A
538.316 354.869 :M
-.069(subexpressions)A
gR
gR
gS 105 72 400 437 rC
np 456 385 :M
454 376 :L
456 376 :L
458 376 :L
456 385 :L
eofill
-1 -1 457 377 1 1 456 353 @b
1 G
457 410 26 @i
0 G
457 410 25.5 @e
444 397 42 21 rC
gS
.75 .75 scale
618.947 543.64 :T
-618.947 -543.64 :T
592.947 537.64 :M
f5_8 sf
-.111(Rule and)A
592.947 545.644 :M
-.073(fact)A
592.947 554.983 :M
-.048(compiler)A
gR
gR
gS 105 72 400 437 rC
np 377 412 :M
386 409 :L
386 412 :L
386 414 :L
377 412 :L
eofill
386 413 -1 1 432 412 1 386 412 @a
1 G
321 391 57 41 rF
0 G
321.5 391.5 56 40 rS
334 406 32 6 rC
gS
.75 .75 scale
466.376 545.312 :T
-466.376 -545.312 :T
446.376 548.312 :M
f5_8 sf
-.066(Agenda)A
gR
gR
gS 105 72 400 437 rC
np 275 412 :M
284 409 :L
284 412 :L
284 414 :L
275 412 :L
eofill
284 413 -1 1 322 412 1 284 412 @a
233 409 42 6 rC
gS
.75 .75 scale
338.797 549.315 :T
-338.797 -549.315 :T
311.797 552.315 :M
f5_8 sf
-.084(Scheduler)A
gR
gR
gS 105 72 400 437 rC
np 249 352 :M
251 361 :L
249 361 :L
247 361 :L
249 352 :L
eofill
-1 -1 250 386 1 1 249 361 @b
233 322 41 6 rC
gS
.75 .75 scale
336.465 433.249 :T
-336.465 -433.249 :T
310.465 436.249 :M
f5_8 sf
(Interpreter)S
gR
gR
gS 105 72 400 437 rC
275 328 -3 3 350 325 3 275 325 @a
np 350 392 :M
345 374 :L
350 374 :L
354 374 :L
350 392 :L
3 lw
eofill
-3 -3 351 376 3 3 348 325 @b
272 317 -3 3 350 314 3 272 314 @a
-3 -3 351 317 3 3 348 119 @b
np 371 120 :M
353 124 :L
353 120 :L
353 115 :L
371 120 :L
eofill
349 121 -3 3 355 118 3 349 118 @a
392 163 40 27 rC
gS
.75 .75 scale
547.641 235.462 :T
-547.641 -235.462 :T
551.641 225.462 :M
f5_8 sf
(Active)S
554.306 233.466 :M
-.068(rules )A
562.301 242.805 :M
-.11(and)A
556.971 252.144 :M
-.166(facts)A
gR
gR
gS 317 97 48 13 rC
gS
.75 .75 scale
455.376 138.078 :T
-455.376 -138.078 :T
446.376 136.078 :M
f5_8 sf
-.088(Activation/)A
439.714 145.416 :M
-.061(deactivation)A
gR
gR
gS 105 72 400 437 rC
np 456 436 :M
458 445 :L
456 445 :L
454 445 :L
456 436 :L
3 lw
eofill
-1 -1 457 469 1 1 456 445 @b
1 G
430 469 57 39 rF
0 G
1 lw
430.5 469.5 56 38 rS
443 487 43 6 rC
gS
.75 .75 scale
617.282 653.374 :T
-617.282 -653.374 :T
590.282 656.374 :M
f5_8 sf
-.042(Metarules)A
gR
gR
gS 404 356 48 20 rC
gS
.75 .75 scale
569.63 487.608 :T
-569.63 -487.608 :T
567.63 481.608 :M
f5_8 sf
-.015(Matching)A
558.303 490.946 :M
-.082(<rule, data>)A
583.62 500.285 :M
-.029(pairs)A
gR
gR
gS 392 397 51 14 rC
gS
.75 .75 scale
555.327 538.64 :T
-555.327 -538.64 :T
522.327 537.64 :M
f5_8 sf
-.083(Candidate)A
522.327 545.644 :M
-.082(<rule, data>)A
gR
gR
gS 401 439 49 21 rC
gS
.75 .75 scale
567.306 599.672 :T
-567.306 -599.672 :T
554.306 593.672 :M
f5_8 sf
-.079(Preferences)A
583.62 601.676 :M
-.148(and )A
566.298 611.015 :M
-.025(priorities)A
gR
gR
gS 285 394 67 14 rC
gS
.75 .75 scale
424.085 534.637 :T
-424.085 -534.637 :T
381.085 533.637 :M
f5_8 sf
-.011(Prioritized)A
381.085 541.642 :M
-.078(activations)A
gR
gR
gS 252 362 68 14 rC
gS
.75 .75 scale
380.114 491.612 :T
-380.114 -491.612 :T
337.114 489.612 :M
f5_8 sf
-.128(Selected)A
337.114 498.951 :M
-.111(action)A
gR
gR
gS 200 378 67 13 rC
gS
.75 .75 scale
310.826 511.958 :T
-310.826 -511.958 :T
267.826 510.958 :M
f5_8 sf
-.025(Incomplete)A
267.826 520.296 :M
-.062(procedures)A
gR
gR
gS 105 72 400 437 rC
np 425 284 :M
416 286 :L
416 284 :L
416 282 :L
425 284 :L
eofill
299 285 -1 1 417 284 1 299 284 @a
-1 -1 299 285 1 1 298 113 @b
265 114 -1 1 299 113 1 265 113 @a
1 G
224 93 59 38 rF
0 G
224.5 93.5 58 37 rS
237 99 44 27 rC
gS
.75 .75 scale
344.127 148.746 :T
-344.127 -148.746 :T
317.127 138.746 :M
f5_8 sf
-.064(Multi-)A
317.127 148.084 :M
-.067(dimensional)A
317.127 157.423 :M
-.111(working)A
317.127 165.428 :M
-.023(memory)A
gR
gR
gS 105 72 400 437 rC
np 259 130 :M
261 139 :L
259 139 :L
257 139 :L
259 130 :L
eofill
-1 -1 260 302 1 1 259 139 @b
np 242 303 :M
240 294 :L
242 294 :L
245 294 :L
242 303 :L
eofill
-1 -1 243 295 1 1 242 130 @b
260 193 36 6 rC
gS
.75 .75 scale
369.774 261.15 :T
-369.774 -261.15 :T
347.774 264.15 :M
f5_8 sf
-.092(Updates)A
gR
gR
gS 221 193 21 6 rC
gS
.75 .75 scale
307.475 261.15 :T
-307.475 -261.15 :T
294.475 264.15 :M
f5_8 sf
-.111(Data)A
gR
gR
gS 105 72 400 437 rC
np 222 113 :M
213 115 :L
213 113 :L
213 111 :L
222 113 :L
eofill
162 114 -1 1 214 113 1 162 113 @a
np 225 323 :M
216 325 :L
216 323 :L
216 321 :L
225 323 :L
eofill
162 324 -1 1 217 323 1 162 323 @a
np 162 312 :M
171 310 :L
171 312 :L
171 314 :L
162 312 :L
eofill
171 313 -1 1 230 312 1 171 312 @a
119 317 38 14 rC
gS
.75 .75 scale
182.563 431.578 :T
-182.563 -431.578 :T
158.563 429.578 :M
f5_8 sf
-.028(Execution)A
158.563 438.917 :M
-.113(stack)A
gR
gR
gS 117 410 45 14 rC
gS
.75 .75 scale
185.231 555.649 :T
-185.231 -555.649 :T
157.231 553.649 :M
f5_8 sf
-.072(Control)A
157.231 562.987 :M
-.062(procedures)A
gR
gR
gS 105 72 400 437 rC
162 337 :M
181.331 337 191 337 191 337 :C
191 337 191 344.994 191 361 :C
191 376.995 191 385 191 385 :C
191 385 195.997 388.827 206 396.5 :C
215.997 404.161 221 408 221 408 :C
stroke
np 224 411 :M
215 406 :L
217 405 :L
218 403 :L
224 411 :L
eofill
215 404 -1 1 218 405 1 215 403 @a
166 328 67 7 rC
gS
.75 .75 scale
265.522 442.587 :T
-265.522 -442.587 :T
222.522 445.587 :M
f5_8 sf
-.011(Next action)A
gR
gR
gS 178 298 67 14 rC
gS
.75 .75 scale
281.511 406.564 :T
-281.511 -406.564 :T
238.511 405.564 :M
f5_8 sf
-.036(Unfinished)A
238.511 413.569 :M
(actions)S
gR
gR
gS 105 72 400 437 rC
np 224 417 :M
215 419 :L
215 417 :L
215 415 :L
224 417 :L
eofill
164 418 -1 1 216 417 1 164 417 @a
139 109 27 7 rC
gS
.75 .75 scale
203.545 150.421 :T
-203.545 -150.421 :T
186.545 153.421 :M
f5_8 sf
-.198(Inputs)A
gR
gR
gS 105 72 400 437 rC
235 306 :M
208.997 278.662 196 265 196 265 :C
196 265 196 246.83 196 210.5 :C
196 174.163 196 156 196 156 :C
196 156 189.497 156 176.5 156 :C
163.497 156 157 156 157 156 :C
stroke
np 137 156 :M
146 154 :L
146 156 :L
146 158 :L
137 156 :L
eofill
146 157 -1 1 159 156 1 146 156 @a
111 152 39 7 rC
gS
.75 .75 scale
173.236 206.453 :T
-173.236 -206.453 :T
149.236 209.453 :M
f5_8 sf
-.109(Outputs)A
gR
gR
gS 284 97 42 13 rC
gS
.75 .75 scale
405.753 138.078 :T
-405.753 -138.078 :T
379.753 136.078 :M
f5_8 sf
-.061(Triggering)A
379.753 145.416 :M
-.148(data)A
gR
gR
gS 384 412 41 7 rC
gS
.75 .75 scale
537.659 554.651 :T
-537.659 -554.651 :T
523.659 557.651 :M
f5_8 sf
-.078(activations)A
gR
gR
gS 105 72 400 437 rC
np 450 193 :M
448 184 :L
450 184 :L
452 184 :L
450 193 :L
eofill
-1 -1 451 185 1 1 450 181 @b
354 339 67 20 rC
gS
.75 .75 scale
516.025 464.928 :T
-516.025 -464.928 :T
473.025 458.928 :M
f5_8 sf
(Delete)S
473.025 468.267 :M
(completed)S
473.025 477.605 :M
-.078(activations)A
gR
gR
gS 374 73 48 6 rC
gS
.75 .75 scale
528.342 101.059 :T
-528.342 -101.059 :T
498.342 104.059 :M
f5_8 sf
-.022(Rule Memory)A
498.342 104.059 :M
-.022(Rule Memory)A
498.342 104.059 :M
-.022(Rule Memory)A
498.342 104.059 :M
-.022(Rule Memory)A
498.342 104.059 :M
-.022(Rule Memory)A
498.342 104.059 :M
-.022(Rule Memory)A
498.342 104.059 :M
-.022(Rule Memory)A
gR
gR
gS 431 73 48 6 rC
gS
.75 .75 scale
606.625 101.059 :T
-606.625 -101.059 :T
575.625 104.059 :M
f5_8 sf
-.033(Fact Memory)A
gR
gR
gS 439 298 65 34 rC
gS
.75 .75 scale
628.285 420.564 :T
-628.285 -420.564 :T
586.285 405.564 :M
f5_8 sf
(Data-flow)S
586.285 413.569 :M
-.111(network)A
586.285 422.908 :M
-.037(by partially )A
586.285 432.246 :M
-.112(evaluated)A
586.285 441.585 :M
-.045(rule activations)A
gR
gR
gS 30 31 552 730 rC
185 525 :M
f2_12 sf
3.309 .331(Figure 23: Sophisticated Rule-Based System)J
108 547 :M
f1_12 sf
2.282 .228(The interfaces among the rediscovered components are unchanged from)J
86 561 :M
2.684 .268(the simple model except for the two bold lines over which the interpreter)J
86 575 :M
1.947 .195(controls activations.)J
108 599 :M
2.356 .236(This example illustrates two points.  First, in a sophisticated rule-based)J
86 613 :M
1.008 .101(system the elements of the simple rule-based system are elaborated in response)J
86 627 :M
4.81 .481(to execution characteristics of the particular class of languages being)J
86 641 :M
2.579 .258(interpreted.  If the design is presented in this way, the original concept is)J
86 655 :M
1.26 .126(retained to guide understanding and later maintenance.  Second, as the design)J
86 669 :M
1.053 .105(is elaborated, different components of the simple model can be elaborated with)J
86 683 :M
1.744 .174(different idioms.)J
endp
%%Page: 36 36
%%BeginPageSetup
initializepage
(shaw; page: 36 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(33)S
105 72 401 487 rC
np 310 471 :M
435 557 :L
498 557 :L
498 470 :L
311 471 :L
eofill
.938 G
310 471 :M
393.327 528.325 435 557 435 557 :C
435 557 445.493 557 466.5 557 :C
487.493 557 498 557 498 557 :C
498 557 498 542.492 498 513.5 :C
498 484.492 498 470 498 470 :C
498 470 466.828 470.159 404.5 470.5 :C
342.16 470.826 311 471 311 471 :C
gS
eofill
gR
stroke
311 209 189 262 rF
311.5 209.5 188 261 rS
1 G
426 305 63 73 rF
0 G
426.5 305.5 62 72 rS
.938 G
364 93 125 95 rF
364.5 93.5 124 94 rS
210 107 83 59 rF
210.5 107.5 82 58 rS
1 G
107 422 57 39 rF
0 G
107.5 422.5 56 38 rS
1 G
107 330 56 41 rF
0 G
107.5 330.5 55 40 rS
1 G
250 351 26 @i
0 G
250 351 25.5 @e
1 G
51 53 249.5 436.5 @j
0 G
50 52 249.5 436.5 @f
1 G
453 243 26 @i
0 G
453 243 25.5 @e
1 G
371 109 109 71 rF
0 G
371.5 109.5 108 70 rS
-1 -1 427 180 1 1 426 109 @b
370 145 -1 1 481 144 1 370 144 @a
385 116 36 13 rC
gS
.751 .75 scale
537.05 162.251 :T
-537.05 -162.251 :T
514.05 161.251 :M
f5_8 sf
-.112(Inactive)A
514.05 170.58 :M
-.029(rules)A
gR
gR
gS 388 156 28 14 rC
gS
.751 .75 scale
535.045 215.558 :T
-535.045 -215.558 :T
518.045 214.558 :M
f5_8 sf
(Active)S
518.045 223.886 :M
-.029(rules)A
gR
gR
gS 442 156 27 14 rC
gS
.751 .75 scale
606.958 215.558 :T
-606.958 -215.558 :T
589.958 214.558 :M
f5_8 sf
(Active)S
589.958 223.886 :M
-.166(facts)A
gR
gR
gS 441 118 40 13 rC
gS
.751 .75 scale
613.627 165.917 :T
-613.627 -165.917 :T
588.627 163.917 :M
f5_8 sf
-.112(Inactive)A
588.627 173.245 :M
-.166(facts)A
gR
gR
gS 105 72 401 487 rC
426 179 :M
426 180.997 426 182 426 182 :C
426 182 429.993 185.497 438 192.5 :C
445.993 199.497 450 203 450 203 :C
450 203 450 203.497 450 204.5 :C
450 205.497 450 206 450 206 :C
stroke
441 233 41 21 rC
gS
.751 .75 scale
613.295 324.505 :T
-613.295 -324.505 :T
587.295 318.505 :M
f5_8 sf
-.111(Rule and)A
587.295 326.501 :M
-.073(fact)A
587.295 335.829 :M
-.048(compiler)A
gR
gR
gS 105 72 401 487 rC
np 453 308 :M
451 299 :L
453 299 :L
456 299 :L
453 308 :L
eofill
-1 -1 454 300 1 1 453 270 @b
383 272 67 20 rC
gS
.751 .75 scale
554.305 375.146 :T
-554.305 -375.146 :T
579.305 369.146 :M
f5_8 sf
-.139(Rule )A
556.665 378.474 :M
-.025(antecedent)A
538.021 386.47 :M
-.069(subexpressions)A
gR
gR
gS 105 72 401 487 rC
np 456 410 :M
454 401 :L
456 401 :L
459 401 :L
456 410 :L
eofill
-1 -1 457 402 1 1 456 377 @b
1 G
52 53 457 434.5 @j
0 G
51 52 457 434.5 @f
444 422 42 20 rC
gS
.751 .75 scale
618.622 575.044 :T
-618.622 -575.044 :T
592.622 569.044 :M
f5_8 sf
-.111(Rule and)A
592.622 578.372 :M
-.073(fact)A
592.622 586.368 :M
-.048(compiler)A
gR
gR
gS 105 72 401 487 rC
np 378 436 :M
387 434 :L
387 436 :L
387 438 :L
378 436 :L
eofill
387 437 -1 1 432 436 1 387 436 @a
1 G
321 416 57 40 rF
0 G
321.5 416.5 56 39 rS
334 430 32 7 rC
gS
.751 .75 scale
466.131 576.705 :T
-466.131 -576.705 :T
446.131 579.705 :M
f5_8 sf
-.066(Agenda)A
gR
gR
gS 105 72 401 487 rC
np 275 436 :M
284 434 :L
284 436 :L
284 438 :L
275 436 :L
eofill
284 437 -1 1 322 436 1 284 436 @a
233 433 42 7 rC
gS
.751 .75 scale
338.626 580.703 :T
-338.626 -580.703 :T
311.626 583.703 :M
f5_8 sf
-.084(Scheduler)A
gR
gR
gS 105 72 401 487 rC
np 249 376 :M
251 385 :L
249 385 :L
247 385 :L
249 376 :L
eofill
-1 -1 250 411 1 1 249 385 @b
233 346 41 7 rC
gS
.751 .75 scale
336.294 464.762 :T
-336.294 -464.762 :T
310.294 467.762 :M
f5_8 sf
(Interpreter)S
gR
gR
gS 105 72 401 487 rC
275 352 -3 3 351 349 3 275 349 @a
np 350 416 :M
345 398 :L
350 398 :L
354 398 :L
350 416 :L
3 lw
eofill
-3 -3 351 400 3 3 348 350 @b
272 341 -3 3 351 338 3 272 338 @a
-3 -3 351 341 3 3 348 143 @b
np 372 144 :M
354 149 :L
354 144 :L
354 140 :L
372 144 :L
eofill
349 146 -3 3 355 143 3 349 143 @a
392 188 40 27 rC
gS
.751 .75 scale
547.338 267.203 :T
-547.338 -267.203 :T
551.338 257.203 :M
f5_8 sf
(Active)S
555.333 266.531 :M
-.068(rules )A
561.992 274.527 :M
-.11(and)A
556.665 283.856 :M
-.166(facts)A
gR
gR
gS 318 121 48 13 rC
gS
.751 .75 scale
455.131 169.915 :T
-455.131 -169.915 :T
446.131 167.915 :M
f5_8 sf
-.088(Activation/)A
439.472 177.243 :M
-.061(deactivation)A
gR
gR
gS 105 72 401 487 rC
np 456 460 :M
459 469 :L
456 469 :L
454 469 :L
456 460 :L
3 lw
eofill
-1 -1 457 493 1 1 456 469 @b
1 G
430 493 57 40 rF
0 G
1 lw
430.5 493.5 56 39 rS
443 511 43 7 rC
gS
.751 .75 scale
618.29 684.65 :T
-618.29 -684.65 :T
591.29 687.65 :M
f5_8 sf
-.042(Metarules)A
gR
gR
gS 404 380 49 21 rC
gS
.751 .75 scale
569.319 520.405 :T
-569.319 -520.405 :T
567.319 514.405 :M
f5_8 sf
-.015(Matching)A
557.997 522.401 :M
-.082(<rule, data>)A
583.3 531.73 :M
-.029(pairs)A
gR
gR
gS 392 422 52 13 rC
gS
.751 .75 scale
556.372 570.044 :T
-556.372 -570.044 :T
523.372 569.044 :M
f5_8 sf
-.083(Candidate)A
523.372 578.372 :M
-.082(<rule, data>)A
gR
gR
gS 402 464 48 20 rC
gS
.751 .75 scale
567.002 631.015 :T
-567.002 -631.015 :T
554.002 625.015 :M
f5_8 sf
-.079(Preferences)A
583.3 634.344 :M
-.148(and )A
565.987 642.34 :M
-.025(priorities)A
gR
gR
gS 285 419 67 13 rC
gS
.751 .75 scale
423.876 566.046 :T
-423.876 -566.046 :T
380.876 565.046 :M
f5_8 sf
-.011(Prioritized)A
380.876 574.375 :M
-.078(activations)A
gR
gR
gS 252 386 68 14 rC
gS
.751 .75 scale
379.929 524.401 :T
-379.929 -524.401 :T
336.929 522.401 :M
f5_8 sf
-.128(Selected)A
336.929 530.397 :M
-.111(action)A
gR
gR
gS 200 402 67 14 rC
gS
.751 .75 scale
310.679 543.391 :T
-310.679 -543.391 :T
267.679 542.391 :M
f5_8 sf
-.025(Incomplete)A
267.679 551.719 :M
-.062(procedures)A
gR
gR
gS 105 72 401 487 rC
np 425 308 :M
416 311 :L
416 308 :L
416 306 :L
425 308 :L
eofill
299 309 -1 1 417 308 1 299 308 @a
-1 -1 299 309 1 1 298 137 @b
265 138 -1 1 299 137 1 265 137 @a
1 G
224 117 59 38 rF
0 G
224.5 117.5 58 37 rS
237 123 44 27 rC
gS
.751 .75 scale
343.953 180.58 :T
-343.953 -180.58 :T
316.953 170.58 :M
f5_8 sf
-.064(Multi-)A
316.953 179.908 :M
-.067(dimensional)A
316.953 189.237 :M
-.111(working)A
316.953 198.566 :M
-.023(memory)A
gR
gR
gS 105 72 401 487 rC
np 259 154 :M
261 163 :L
259 163 :L
257 163 :L
259 154 :L
eofill
-1 -1 260 327 1 1 259 163 @b
np 242 327 :M
240 318 :L
242 318 :L
245 318 :L
242 327 :L
eofill
-1 -1 243 319 1 1 242 155 @b
260 217 36 7 rC
gS
.751 .75 scale
369.583 292.85 :T
-369.583 -292.85 :T
347.583 295.85 :M
f5_8 sf
-.092(Updates)A
gR
gR
gS 221 217 21 7 rC
gS
.751 .75 scale
307.313 292.85 :T
-307.313 -292.85 :T
294.313 295.85 :M
f5_8 sf
-.111(Data)A
gR
gR
gS 105 72 401 487 rC
np 222 137 :M
213 140 :L
213 137 :L
213 135 :L
222 137 :L
eofill
162 138 -1 1 214 137 1 162 137 @a
np 225 347 :M
216 350 :L
216 347 :L
216 345 :L
225 347 :L
eofill
162 348 -1 1 217 347 1 162 347 @a
np 162 336 :M
171 334 :L
171 336 :L
171 338 :L
162 336 :L
eofill
171 337 -1 1 230 336 1 171 336 @a
119 341 38 14 rC
gS
.751 .75 scale
182.476 464.431 :T
-182.476 -464.431 :T
158.476 462.431 :M
f5_8 sf
-.028(Execution)A
158.476 470.427 :M
-.113(stack)A
gR
gR
gS 117 434 45 14 rC
gS
.751 .75 scale
185.145 588.368 :T
-185.145 -588.368 :T
157.145 586.368 :M
f5_8 sf
-.072(Control)A
157.145 594.364 :M
-.062(procedures)A
gR
gR
gS 105 72 401 487 rC
162 362 :M
181.331 362 191 362 191 362 :C
191 362 191 369.994 191 386 :C
191 401.994 191 410 191 410 :C
191 410 195.997 413.66 206 421 :C
215.997 428.327 221 432 221 432 :C
stroke
np 224 435 :M
215 431 :L
217 429 :L
218 428 :L
224 435 :L
eofill
215 429 -1 1 218 429 1 215 428 @a
166 353 67 6 rC
gS
.751 .75 scale
265.4 474.091 :T
-265.4 -474.091 :T
222.4 477.091 :M
f5_8 sf
-.011(Next action)A
gR
gR
gS 178 323 67 13 rC
gS
.751 .75 scale
281.381 438.111 :T
-281.381 -438.111 :T
238.381 437.111 :M
f5_8 sf
-.036(Unfinished)A
238.381 446.44 :M
(actions)S
gR
gR
gS 105 72 401 487 rC
np 224 441 :M
215 443 :L
215 441 :L
215 439 :L
224 441 :L
eofill
164 442 -1 1 216 441 1 164 441 @a
139 134 27 6 rC
gS
.751 .75 scale
203.443 182.239 :T
-203.443 -182.239 :T
186.443 185.239 :M
f5_8 sf
-.198(Inputs)A
gR
gR
gS 105 72 401 487 rC
235 330 :M
208.997 303.329 196 290 196 290 :C
196 290 196 271.663 196 235 :C
196 198.329 196 180 196 180 :C
196 180 189.497 180 176.5 180 :C
163.497 180 157 180 157 180 :C
stroke
np 137 180 :M
146 178 :L
146 180 :L
146 182 :L
137 180 :L
eofill
146 181 -1 1 159 180 1 146 180 @a
111 176 39 7 rC
gS
.751 .75 scale
173.154 239.543 :T
-173.154 -239.543 :T
149.154 242.543 :M
f5_8 sf
-.109(Outputs)A
gR
gR
gS 284 121 42 13 rC
gS
.751 .75 scale
405.544 169.915 :T
-405.544 -169.915 :T
379.544 167.915 :M
f5_8 sf
-.061(Triggering)A
379.544 177.243 :M
-.148(data)A
gR
gR
gS 384 437 41 6 rC
gS
.751 .75 scale
537.372 586.034 :T
-537.372 -586.034 :T
523.372 589.034 :M
f5_8 sf
-.078(activations)A
gR
gR
gS 105 72 401 487 rC
np 450 217 :M
448 208 :L
450 208 :L
453 208 :L
450 217 :L
eofill
-1 -1 451 209 1 1 450 205 @b
354 363 67 20 rC
gS
.751 .75 scale
515.766 496.417 :T
-515.766 -496.417 :T
472.766 490.417 :M
f5_8 sf
(Delete)S
472.766 499.746 :M
(completed)S
472.766 509.074 :M
-.078(activations)A
gR
gR
gS 219 85 52 16 rC
gS
.751 .75 scale
325.982 124.272 :T
-325.982 -124.272 :T
292.982 121.272 :M
f9_9 sf
-.081(Working )A
292.982 131.933 :M
-.065(Memory)A
gR
gR
gS 390 73 52 16 rC
gS
.751 .75 scale
553.708 108.28 :T
-553.708 -108.28 :T
520.708 105.28 :M
f9_9 sf
(Knowledge)S
520.708 115.941 :M
-.055(Base)A
gR
gR
gS 372 98 48 7 rC
gS
.751 .75 scale
526.737 135.596 :T
-526.737 -135.596 :T
496.737 138.596 :M
f5_8 sf
-.022(Rule Memory)A
gR
gR
gS 430 98 48 7 rC
gS
.751 .75 scale
604.978 135.596 :T
-604.978 -135.596 :T
573.978 138.596 :M
f5_8 sf
-.033(Fact Memory)A
gR
gR
gS 324 512 51 25 rC
gS
.751 .75 scale
464.482 698.316 :T
-464.482 -698.316 :T
431.482 690.316 :M
f9_9 sf
-.005(Rule and data )A
431.482 702.309 :M
-.13(element )A
431.482 712.971 :M
-.103(selection)A
gR
gR
gS 164 485 74 9 rC
gS
.751 .75 scale
267.736 651.334 :T
-267.736 -651.334 :T
219.736 654.334 :M
f9_9 sf
-.049(Rule Interpreter)A
gR
gR
gS 440 323 65 34 rC
gS
.751 .75 scale
629.295 453.444 :T
-629.295 -453.444 :T
587.295 438.444 :M
f5_8 sf
(Data-flow)S
587.295 446.44 :M
-.111(network)A
587.295 455.768 :M
-.037(by partially )A
587.295 465.097 :M
-.112(evaluated)A
587.295 474.425 :M
-.045(rule activations)A
gR
gR
gS 30 31 552 730 rC
154 575 :M
f2_12 sf
3.575 .357(Figure 23: Simplified Sophisticated Rule-Based System)J
108 597 :M
f1_12 sf
.641 .064(Note that the rule-based model is itself a design structure: it calls for a set of)J
86 611 :M
1.664 .166(rules whose control relations are determined during execution by the state of)J
86 625 :M
2.723 .272(the computation.  A rule-based system provides a virtual machine\321a rule)J
86 639 :M
1.33 .133(executor\321to support this model.)J
86 663 :M
f3_12 sf
(4.6.)S
122 663 :M
-.021(Case 6: A Blackboard Globally Recast as Interpreter)A
86 687 :M
f1_12 sf
1.123 .112(The blackboard model of problem solving is a highly structured special case of)J
86 701 :M
1.536 .154(opportunistic problem solving.  In this model, the solution space is organized)J
86 715 :M
2.083 .208(into several application-dependent hierarchies and the domain knowledge is)J
endp
%%Page: 37 37
%%BeginPageSetup
initializepage
(shaw; page: 37 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(34)S
86 82 :M
5.365 .537(partitioned into independent modules of knowledge that operate on)J
86 96 :M
3.849 .385(knowledge within and between levels [34].  Figure 4 showed the basic)J
86 110 :M
3.974 .397(architecture of a blackboard system and outlined its three major parts:)J
86 124 :M
.688 .069(knowledge sources, the blackboard data structure, and control.)J
1 G
156 136 299 294 rC
335 198 68 15 rF
0 G
335.5 198.5 67 14 rS
1 G
335 168 68 16 rF
0 G
335.5 168.5 67 15 rS
226 421 112 8 rC
gS
.901 .899 scale
312.057 471.931 :T
-312.057 -471.931 :T
252.057 474.931 :M
f4_8 sf
-.016(\(      Control flow-----Data flow\))A
gR
gR
1 G
gS 156 136 299 294 rC
158 160 89 31 rF
0 G
158.5 160.5 88 30 rS
169 174 28 8 rC
gS
.901 .899 scale
202.765 197.205 :T
-202.765 -197.205 :T
188.765 200.205 :M
f4_8 sf
-.131(Level n)A
gR
gR
gS 156 136 299 294 rC
158 160 89 31 rF
0 G
158.5 160.5 88 30 rS
169 174 28 8 rC
gS
.901 .899 scale
202.765 197.205 :T
-202.765 -197.205 :T
188.765 200.205 :M
f4_8 sf
-.131(Level n)A
gR
gR
gS 156 136 299 294 rC
335 152 68 15 rF
0 G
335.5 152.5 67 14 rS
350 155 36 8 rC
gS
.901 .899 scale
408.745 176.072 :T
-408.745 -176.072 :T
389.745 179.072 :M
f4_8 sf
-.098(Condition)A
gR
gR
gS 355 172 27 8 rC
gS
.901 .899 scale
409.297 194.981 :T
-409.297 -194.981 :T
395.297 197.981 :M
0 G
f4_8 sf
-.046(Action)A
gR
gR
gS 352 201 43 8 rC
gS
.901 .899 scale
413.966 227.236 :T
-413.966 -227.236 :T
391.966 230.236 :M
0 G
f4_8 sf
-.098(Condition)A
gR
gR
0 G
gS 156 136 299 294 rC
np 335 184 :M
324 185 :L
324 183 :L
324 180 :L
335 184 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
324 183 246 173 :r
[] 0 :q
246 173 :M
psb
pse
:e
0 G
np 246 231 :M
254 224 :L
256 227 :L
257 230 :L
246 231 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
256 227 334 185 :r
[] 0 :q
334 185 :M
psb
pse
:e
0 G
np 335 212 :M
327 221 :L
325 218 :L
324 216 :L
335 212 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
325 218 246 263 :r
[] 0 :q
246 263 :M
psb
pse
:e
1 G
246 322 46 29 rF
0 G
246.5 322.5 45 28 rS
1 G
324 322 45 29 rF
0 G
324.5 322.5 44 28 rS
251 327 51 16 rC
gS
.901 .899 scale
305.706 371.379 :T
-305.706 -371.379 :T
278.706 370.379 :M
f4_8 sf
(Blackboard)S
278.706 379.277 :M
-.111(Monitor)A
gR
gR
gS 330 327 46 16 rC
gS
.901 .899 scale
391.537 371.379 :T
-391.537 -371.379 :T
367.537 370.379 :M
f4_8 sf
-.063(Scheduling)A
367.537 379.277 :M
(Queue)S
gR
gR
gS 156 136 299 294 rC
np 324 336 :M
313 339 :L
313 336 :L
313 334 :L
324 336 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
313 336 291 336 :r
[] 0 :q
291 336 :M
psb
pse
:e
1 G
246 387 46 29 rF
0 G
246.5 387.5 45 28 rS
1 G
324 387 45 29 rF
0 G
324.5 387.5 44 28 rS
253 389 36 24 rC
gS
.901 .899 scale
300.038 445.339 :T
-300.038 -445.339 :T
282.038 439.339 :M
f4_8 sf
-.096(Focus of)A
282.038 448.237 :M
-.13(Control)A
282.038 457.135 :M
-.033(Database)A
gR
gR
gS 330 396 42 8 rC
gS
.901 .899 scale
389.537 444.125 :T
-389.537 -444.125 :T
367.537 447.125 :M
f4_8 sf
(Scheduler)S
gR
gR
gS 156 136 299 294 rC
np 324 401 :M
314 404 :L
314 401 :L
314 399 :L
324 401 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
314 401 291 401 :r
[] 0 :q
291 401 :M
psb
pse
:e
176 146 53 8 rC
gS
.901 .899 scale
224.538 166.062 :T
-224.538 -166.062 :T
196.538 169.062 :M
0 G
f5_8 sf
-.062(Blackboard)A
gR
gR
gS 334 137 120 8 rC
gS
.901 .899 scale
436.979 156.052 :T
-436.979 -156.052 :T
371.979 159.052 :M
f5_8 sf
-.028(Knowledge Sources)A
gR
gR
gS 156 136 299 294 rC
np 401 160 :M
412 158 :L
412 160 :L
412 163 :L
401 160 :L
eofill
412 161 -1 1 446 160 1 412 160 @a
np 401 176 :M
412 174 :L
412 176 :L
412 179 :L
401 176 :L
eofill
412 177 -1 1 446 176 1 412 176 @a
np 401 204 :M
412 202 :L
412 204 :L
412 207 :L
401 204 :L
eofill
412 205 -1 1 446 204 1 412 204 @a
np 401 222 :M
412 220 :L
412 222 :L
412 225 :L
401 222 :L
eofill
412 223 -1 1 446 222 1 412 222 @a
np 401 255 :M
412 252 :L
412 255 :L
412 257 :L
401 255 :L
eofill
412 256 -1 1 446 255 1 412 255 @a
np 401 272 :M
412 269 :L
412 272 :L
412 274 :L
401 272 :L
eofill
412 273 -1 1 446 272 1 412 272 @a
-1 -1 447 295 1 1 446 160 @b
np 269 349 :M
272 360 :L
269 360 :L
267 360 :L
269 349 :L
eofill
np 269 387 :M
267 376 :L
269 376 :L
272 376 :L
269 387 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
269 376 269 360 :r
[] 0 :q
269 360 :M
psb
pse
:e
0 G
np 347 349 :M
350 360 :L
347 360 :L
344 360 :L
347 349 :L
eofill
np 347 388 :M
344 377 :L
347 377 :L
350 377 :L
347 388 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 4 ] 0 :q
347 377 347 360 :r
[] 0 :q
347 360 :M
psb
pse
:e
0 G
np 260 321 :M
257 310 :L
260 310 :L
262 310 :L
260 321 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
260 310 259 225 :r
[] 0 :q
259 225 :M
psb
pse
:e
1 G
257 283 41 16 rF
257 283 41 16 rC
gS
.901 .899 scale
307.479 323.44 :T
-307.479 -323.44 :T
286.479 321.44 :M
0 G
f7_8 sf
(Blackboard)S
286.479 330.338 :M
(Change)S
gR
gR
gS 156 136 299 294 rC
np 302 336 :M
299 326 :L
302 326 :L
305 326 :L
302 336 :L
eofill
-1 -1 303 327 1 1 302 271 @b
274 262 54 8 rC
gS
.901 .899 scale
334.356 295.083 :T
-334.356 -295.083 :T
305.356 298.083 :M
f7_8 sf
-.052(Condition Part)A
gR
gR
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
gS 156 136 299 294 rC
[9 4 ] 0 :q
330 224 335 219 :r
[] 0 :q
335 219 :M
psb
pse
:e
0 G
np 329 323 :M
326 312 :L
329 312 :L
332 312 :L
329 323 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
329 312 329 227 :r
[] 0 :q
329 227 :M
psb
pse
:e
0 G
-1 -1 447 390 1 1 446 294 @b
369 390 -2 2 447 388 2 369 388 @a
1 G
158 211 89 31 rF
0 G
158.5 211.5 88 30 rS
169 224 28 8 rC
gS
.901 .899 scale
202.765 252.818 :T
-202.765 -252.818 :T
188.765 255.818 :M
f4_8 sf
-.131(Level 3)A
gR
gR
:e
1 G
gS 156 136 299 294 rC
158 241 89 31 rF
0 G
158.5 241.5 88 30 rS
169 255 28 8 rC
gS
.901 .899 scale
202.765 287.297 :T
-202.765 -287.297 :T
188.765 290.297 :M
f4_8 sf
-.131(Level 2)A
gR
gR
gS 156 136 299 294 rC
158 271 89 31 rF
0 G
158.5 271.5 88 30 rS
169 284 28 8 rC
gS
.901 .899 scale
202.765 320.665 :T
-202.765 -320.665 :T
188.765 323.665 :M
f4_8 sf
-.131(Level 1)A
gR
gR
0 G
gS 156 136 299 294 rC
158 211 :M
158 204.33 158.331 201.997 159 204 :C
159.664 205.997 160.997 207.163 163 207.5 :C
164.998 207.83 167.331 207.497 170 206.5 :C
172.664 205.497 175.164 204.83 177.5 204.5 :C
179.831 204.164 182.497 204.33 185.5 205 :C
188.497 205.664 191.83 206.33 195.5 207 :C
199.164 207.664 205.33 206.997 214 205 :C
stroke
215 205 :M
220.33 205.664 223.83 206.164 225.5 206.5 :C
227.163 206.83 228.663 206.83 230 206.5 :C
231.33 206.164 232.83 205.83 234.5 205.5 :C
236.163 205.164 237.83 205 239.5 205 :C
241.163 205 242.496 204.664 243.5 204 :C
244.496 203.33 245.163 202.83 245.5 202.5 :C
245.83 202.164 246 204.997 246 211 :C
stroke
158 191 :M
158 197.664 158.331 199.83 159 197.5 :C
159.664 195.164 160.997 193.83 163 193.5 :C
164.998 193.164 167.331 193.33 170 194 :C
172.664 194.664 175.164 195.33 177.5 196 :C
179.831 196.664 182.497 196.497 185.5 195.5 :C
188.497 194.497 191.83 193.83 195.5 193.5 :C
199.164 193.164 205.33 193.997 214 196 :C
stroke
215 196 :M
220.997 194.664 224.83 194 226.5 194 :C
228.163 194 229.496 194 230.5 194 :C
231.496 194 232.83 194.33 234.5 195 :C
236.163 195.664 237.83 195.83 239.5 195.5 :C
241.163 195.164 242.663 195.497 244 196.5 :C
245.33 197.497 246 198.164 246 198.5 :C
246 198.83 246 196.33 246 191 :C
stroke
1 G
335 214 68 16 rF
0 G
335.5 214.5 67 15 rS
355 218 27 8 rC
gS
.901 .899 scale
409.297 246.144 :T
-409.297 -246.144 :T
395.297 249.144 :M
f4_8 sf
-.046(Action)A
gR
gR
1 G
gS 156 136 299 294 rC
335 246 68 15 rF
0 G
335.5 246.5 67 14 rS
352 249 43 8 rC
gS
.901 .899 scale
413.966 281.736 :T
-413.966 -281.736 :T
391.966 284.736 :M
f4_8 sf
-.098(Condition)A
gR
gR
gS 156 136 299 294 rC
335 263 68 15 rF
0 G
335.5 263.5 67 14 rS
355 266 27 8 rC
gS
.901 .899 scale
409.297 300.644 :T
-409.297 -300.644 :T
395.297 303.644 :M
f4_8 sf
-.046(Action)A
gR
gR
gS 156 136 299 294 rC
325 287 62 16 rF
325 287 62 16 rC
gS
.901 .899 scale
394.985 326.889 :T
-394.985 -326.889 :T
361.985 325.889 :M
0 G
f7_8 sf
-.111(Stimulus )A
361.985 334.787 :M
-.026(Response Frame)A
gR
gR
0 G
gS 156 136 299 294 rC
230 427 -2 2 241 425 2 230 425 @a
gR
gS 30 31 552 730 rC
249 446 :M
f2_12 sf
2.006 .201(Figure 24: Hearsay-II)J
108 468 :M
f1_12 sf
1.057 .106(The first major blackboard system was the HEARSAY-II speech recognition)J
86 482 :M
1.376 .138(system.  Nii's schematic of the HEARSAY-II architecture appears as Figure 24.)J
86 496 :M
1.644 .164(The blackboard structure is a six- to eight-level hierarchy in which each level)J
86 510 :M
1.382 .138(abstracts information on its adjacent lower level and blackboard elements rep-)J
86 524 :M
1.093 .109(resent hypotheses about the interpretation of an utterance.  Knowledge sources)J
86 538 :M
1.44 .144(correspond to such tasks as segmenting the raw signal, identifying phonemes,)J
86 552 :M
1.538 .154(generating word candidates, hypothesizing syntactic segments, and proposing)J
86 566 :M
1.777 .178(semantic interpretations.  Each knowledge source is organized as a condition)J
86 580 :M
2.891 .289(part that specifies when it is applicable and an action part that processes)J
86 594 :M
1.174 .117(relevant blackboard elements and generates new ones.  The control component)J
86 608 :M
.948 .095(is realized as a blackboard monitor and a scheduler; the scheduler monitors the)J
86 622 :M
2.65 .265(blackboard and calculates priorities for applying the knowledge sources to)J
86 636 :M
1.254 .125(various elements on the blackboard.)J
108 660 :M
1.836 .184(HEARSAY-II was implemented between 1971 and 1976 on DEC PDP-10s;)J
86 674 :M
1.852 .185(these machines were not directly capable of condition-triggered control, so it)J
86 688 :M
4.4 .44(should not be surprising to find that an implementation provides the)J
86 702 :M
4.685 .468(mechanisms of a virtual machine that realizes the implicit invocation)J
86 716 :M
.654 .065(semantics required by the blackboard model.)J
endp
%%Page: 38 38
%%BeginPageSetup
initializepage
(shaw; page: 38 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(35)S
1 G
141 72 329 309 rC
240 262 139 105 rF
0 G
240.5 262.5 138 104 rS
.938 G
322 137 131 42 rF
322.5 137.5 130 41 rS
322 185 131 42 rF
322.5 185.5 130 41 rS
322 91 131 42 rF
322.5 91.5 130 41 rS
143 87 118 171 rF
143.5 87.5 117 170 rS
1 G
337 142 67 16 rF
0 G
337.5 142.5 66 15 rS
1 G
337 113 67 15 rF
0 G
337.5 113.5 66 14 rS
228 372 111 8 rC
gS
.901 .901 scale
312.949 416.59 :T
-312.949 -416.59 :T
252.949 419.59 :M
f4_8 sf
-.016(\(      Control flow-----Data flow\))A
gR
gR
1 G
gS 141 72 329 309 rC
159 104 89 32 rF
0 G
159.5 104.5 88 31 rS
170 118 28 8 rC
gS
.901 .901 scale
203.712 134.643 :T
-203.712 -134.643 :T
189.712 137.643 :M
f4_8 sf
-.131(Level n)A
gR
gR
gS 141 72 329 309 rC
159 104 89 32 rF
0 G
159.5 104.5 88 31 rS
170 118 28 8 rC
gS
.901 .901 scale
203.712 134.643 :T
-203.712 -134.643 :T
189.712 137.643 :M
f4_8 sf
-.131(Level n)A
gR
gR
gS 141 72 329 309 rC
337 96 67 16 rF
0 G
337.5 96.5 66 15 rS
352 100 35 8 rC
gS
.901 .901 scale
409.627 114.663 :T
-409.627 -114.663 :T
391.627 117.663 :M
f4_8 sf
-.098(Condition)A
gR
gR
gS 356 117 27 8 rC
gS
.901 .901 scale
410.065 133.533 :T
-410.065 -133.533 :T
396.065 136.533 :M
0 G
f4_8 sf
-.046(Action)A
gR
gR
gS 354 146 42 8 rC
gS
.901 .901 scale
415.846 165.724 :T
-415.846 -165.724 :T
393.846 168.724 :M
0 G
f4_8 sf
-.098(Condition)A
gR
gR
0 G
gS 141 72 329 309 rC
np 337 129 :M
326 130 :L
326 127 :L
326 124 :L
337 129 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
326 127 247 117 :r
[] 0 :q
247 117 :M
psb
pse
:e
0 G
np 247 177 :M
255 169 :L
257 171 :L
258 174 :L
247 177 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
257 171 336 130 :r
[] 0 :q
336 130 :M
psb
pse
:e
0 G
np 337 158 :M
328 165 :L
328 163 :L
326 160 :L
337 158 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
328 163 247 207 :r
[] 0 :q
247 207 :M
psb
pse
:e
1 G
247 267 46 28 rF
0 G
247.5 267.5 45 27 rS
1 G
326 267 45 28 rF
0 G
326.5 267.5 44 27 rS
252 272 51 16 rC
gS
.901 .901 scale
307.685 309.588 :T
-307.685 -309.588 :T
280.685 308.588 :M
f4_8 sf
(Blackboard)S
280.685 317.468 :M
-.111(Monitor)A
gR
gR
gS 331 271 46 16 rC
gS
.901 .901 scale
392.329 309.477 :T
-392.329 -309.477 :T
368.329 307.477 :M
f4_8 sf
-.063(Scheduling)A
368.329 317.468 :M
(Queue)S
gR
gR
gS 141 72 329 309 rC
np 325 282 :M
314 285 :L
314 282 :L
314 279 :L
325 282 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
314 282 292 282 :r
[] 0 :q
292 282 :M
psb
pse
:e
1 G
247 331 46 29 rF
0 G
247.5 331.5 45 28 rS
1 G
326 331 45 29 rF
0 G
326.5 331.5 44 28 rS
255 333 36 25 rC
gS
.901 .901 scale
300.904 383.409 :T
-300.904 -383.409 :T
282.904 377.409 :M
f4_8 sf
-.096(Focus of)A
282.904 386.289 :M
-.13(Control)A
282.904 395.17 :M
-.033(Database)A
gR
gR
gS 331 340 43 9 rC
gS
.901 .901 scale
390.329 382.179 :T
-390.329 -382.179 :T
368.329 385.179 :M
f4_8 sf
(Scheduler)S
gR
gR
gS 141 72 329 309 rC
np 326 347 :M
315 349 :L
315 347 :L
315 344 :L
326 347 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
315 347 292 347 :r
[] 0 :q
292 347 :M
psb
pse
:e
178 90 52 8 rC
gS
.901 .901 scale
226.587 103.563 :T
-226.587 -103.563 :T
198.587 106.563 :M
0 G
f5_8 sf
-.062(Blackboard)A
gR
gR
gS 336 81 120 8 rC
gS
.901 .901 scale
438.876 93.572 :T
-438.876 -93.572 :T
373.876 96.572 :M
f5_8 sf
-.028(Knowledge Sources)A
gR
gR
gS 141 72 329 309 rC
np 402 104 :M
413 102 :L
413 104 :L
413 107 :L
402 104 :L
eofill
413 105 -1 1 448 104 1 413 104 @a
np 402 121 :M
413 118 :L
413 121 :L
413 123 :L
402 121 :L
eofill
413 122 -1 1 448 121 1 413 121 @a
np 402 149 :M
413 147 :L
413 149 :L
413 152 :L
402 149 :L
eofill
413 150 -1 1 448 149 1 413 149 @a
np 402 167 :M
413 165 :L
413 167 :L
413 170 :L
402 167 :L
eofill
413 168 -1 1 448 167 1 413 167 @a
np 402 199 :M
413 196 :L
413 199 :L
413 202 :L
402 199 :L
eofill
413 200 -1 1 448 199 1 413 199 @a
np 402 217 :M
413 214 :L
413 217 :L
413 220 :L
402 217 :L
eofill
413 218 -1 1 448 217 1 413 217 @a
-1 -1 448 241 1 1 447 104 @b
np 271 295 :M
274 305 :L
271 305 :L
268 305 :L
271 295 :L
eofill
np 271 331 :M
268 321 :L
271 321 :L
274 321 :L
271 331 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
271 321 271 305 :r
[] 0 :q
271 305 :M
psb
pse
:e
0 G
np 348 295 :M
351 305 :L
348 305 :L
346 305 :L
348 295 :L
eofill
np 348 332 :M
346 322 :L
348 322 :L
351 322 :L
348 332 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 4 ] 0 :q
348 322 348 305 :r
[] 0 :q
348 305 :M
psb
pse
:e
0 G
np 261 266 :M
258 255 :L
261 255 :L
264 255 :L
261 266 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
261 255 260 169 :r
[] 0 :q
260 169 :M
psb
pse
:e
1 G
258 228 42 16 rF
258 228 42 16 rC
gS
.901 .901 scale
308.341 261.746 :T
-308.341 -261.746 :T
287.341 259.746 :M
0 G
f7_8 sf
(Blackboard)S
287.341 268.627 :M
(Change)S
gR
gR
gS 141 72 329 309 rC
np 304 281 :M
301 270 :L
304 270 :L
307 270 :L
304 281 :L
eofill
-1 -1 305 271 1 1 304 215 @b
275 207 54 8 rC
gS
.901 .901 scale
335.202 233.436 :T
-335.202 -233.436 :T
306.202 236.436 :M
f7_8 sf
-.052(Condition Part)A
gR
gR
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
gS 141 72 329 309 rC
[9 4 ] 0 :q
331 168 337 163 :r
[] 0 :q
337 163 :M
psb
pse
:e
0 G
np 330 267 :M
328 257 :L
330 257 :L
333 257 :L
330 267 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
330 257 330 171 :r
[] 0 :q
330 171 :M
psb
pse
:e
0 G
-1 -1 448 334 1 1 447 239 @b
371 334 -2 2 449 332 2 371 332 @a
1 G
159 155 89 31 rF
0 G
159.5 155.5 88 30 rS
170 168 28 9 rC
gS
.901 .901 scale
203.712 191.255 :T
-203.712 -191.255 :T
189.712 194.255 :M
f4_8 sf
-.131(Level 3)A
gR
gR
:e
1 G
gS 141 72 329 309 rC
159 186 89 31 rF
0 G
159.5 186.5 88 30 rS
170 199 28 8 rC
gS
.901 .901 scale
203.712 224.556 :T
-203.712 -224.556 :T
189.712 227.556 :M
f4_8 sf
-.131(Level 2)A
gR
gR
gS 141 72 329 309 rC
159 216 89 31 rF
0 G
159.5 216.5 88 30 rS
170 230 28 8 rC
gS
.901 .901 scale
203.712 258.966 :T
-203.712 -258.966 :T
189.712 261.966 :M
f4_8 sf
-.131(Level 1)A
gR
gR
0 G
gS 141 72 329 309 rC
159 155 :M
159 148.331 159.331 146.164 160 148.5 :C
160.664 150.831 161.997 152 164 152 :C
165.998 152 168.331 151.664 171 151 :C
173.664 150.331 176.164 149.831 178.5 149.5 :C
180.831 149.164 183.497 149.331 186.5 150 :C
189.497 150.664 192.83 151.164 196.5 151.5 :C
200.164 151.831 206.33 150.998 215 149 :C
stroke
216 149 :M
221.33 150.331 224.83 151 226.5 151 :C
228.163 151 229.663 151 231 151 :C
232.33 151 233.83 150.664 235.5 150 :C
237.163 149.331 238.83 149.164 240.5 149.5 :C
242.163 149.831 243.496 149.498 244.5 148.5 :C
245.496 147.498 246.163 146.831 246.5 146.5 :C
246.83 146.164 247 148.998 247 155 :C
stroke
159 135 :M
159 141.664 159.331 143.998 160 142 :C
160.664 139.998 161.997 138.831 164 138.5 :C
165.998 138.165 168.331 138.331 171 139 :C
173.664 139.665 176.164 140.165 178.5 140.5 :C
180.831 140.831 183.497 140.831 186.5 140.5 :C
189.497 140.165 192.83 139.665 196.5 139 :C
200.164 138.331 206.33 138.665 215 140 :C
stroke
216 140 :M
221.997 140 225.83 139.831 227.5 139.5 :C
229.163 139.165 230.496 139.165 231.5 139.5 :C
232.496 139.831 233.83 140 235.5 140 :C
237.163 140 238.83 140 240.5 140 :C
242.163 140 243.663 140.498 245 141.5 :C
246.33 142.498 247 143.164 247 143.5 :C
247 143.831 247 140.998 247 135 :C
stroke
1 G
337 159 67 15 rF
0 G
337.5 159.5 66 14 rS
356 163 27 8 rC
gS
.901 .901 scale
410.065 184.595 :T
-410.065 -184.595 :T
396.065 187.595 :M
f4_8 sf
-.046(Action)A
gR
gR
1 G
gS 141 72 329 309 rC
337 191 67 14 rF
0 G
337.5 191.5 66 13 rS
354 194 42 8 rC
gS
.901 .901 scale
415.846 219.005 :T
-415.846 -219.005 :T
393.846 222.005 :M
f4_8 sf
-.098(Condition)A
gR
gR
gS 141 72 329 309 rC
337 208 67 14 rF
0 G
337.5 208.5 66 13 rS
356 212 27 8 rC
gS
.901 .901 scale
410.065 238.986 :T
-410.065 -238.986 :T
396.065 241.986 :M
f4_8 sf
-.046(Action)A
gR
gR
gS 141 72 329 309 rC
327 231 62 17 rF
327 231 62 17 rC
gS
.901 .901 scale
396.892 266.186 :T
-396.892 -266.186 :T
363.892 264.186 :M
0 G
f7_8 sf
-.111(Stimulus )A
363.892 273.067 :M
-.026(Response Frame)A
gR
gR
0 G
gS 141 72 329 309 rC
230 377 -2 2 242 375 2 230 375 @a
455 111 14 10 rC
gS
.901 .901 scale
511.008 127.983 :T
-511.008 -127.983 :T
507.008 130.983 :M
f9_9 sf
-.337(KS)A
gR
gR
gS 455 154 14 10 rC
gS
.901 .901 scale
511.008 175.714 :T
-511.008 -175.714 :T
507.008 178.714 :M
f9_9 sf
-.337(KS)A
gR
gR
gS 455 204 14 9 rC
gS
.901 .901 scale
511.008 231.216 :T
-511.008 -231.216 :T
507.008 234.216 :M
f9_9 sf
-.337(KS)A
gR
gR
gS 176 73 51 10 rC
gS
.901 .901 scale
223.478 85.802 :T
-223.478 -85.802 :T
197.478 88.802 :M
f9_9 sf
-.019(Blackboard)A
gR
gR
gS 188 281 50 40 rC
gS
.901 .901 scale
235.681 332.688 :T
-235.681 -332.688 :T
209.681 319.688 :M
f9_9 sf
-.135(Not )A
209.681 330.788 :M
-.059(relevant to )A
209.681 341.888 :M
(blackboard)S
209.681 352.989 :M
-.125(model)A
gR
gR
gS 141 72 329 309 rC
-1 -1 241 286 1 1 264 262 @b
-1 -1 241 310 1 1 290 262 @b
-1 -1 242 334 1 1 311 262 @b
-1 -1 242 360 1 1 337 262 @b
-1 -1 258 366 1 1 361 262 @b
-1 -1 291 367 1 1 378 272 @b
-1 -1 355 367 1 1 378 338 @b
-1 -1 326 366 1 1 378 304 @b
gR
gS 30 31 552 730 rC
193 397 :M
f2_12 sf
2.58 .258(Figure 25: Blackboard View of Hearsay-II)J
108 419 :M
f1_12 sf
1.006 .101(Figure 24 not only elaborates the individual components of Figure 4; it also)J
86 433 :M
3.733 .373(adds components for the previously-implicit control component.  In the)J
86 447 :M
.794 .079(process, the figure becomes rather complex.  This complexity arises because it is)J
86 461 :M
2.275 .228(now illustrating two concepts: the blackboard model and realization of that)J
86 475 :M
2.245 .224(model by a virtual machine.  The blackboard model can be recovered as in)J
86 489 :M
4.913 .491(Figure 25 by suppressing the control mechanism and regrouping the)J
86 503 :M
1.132 .113(conditions and actions into knowledge sources.)J
108 527 :M
1.389 .139(The virtual machine can be seen to be realized by an interpreter using the)J
86 541 :M
1.353 .135(assignment of function in Figure 26.  Here the blackboard cleanly corresponds)J
86 555 :M
3.089 .309(to the current state of the recognition task.  The collection of knowledge)J
86 569 :M
3.186 .319(sources roughly supplies the pseudocode of the interpreter; however, the)J
86 583 :M
1.553 .155(actions also contribute to the interpretation engine.  The interpretation engine)J
86 597 :M
1.07 .107(includes several components that appear explicitly in Figure 24: the blackboard)J
86 611 :M
1.517 .152(monitor, the focus of control database, and the scheduler, but also the actions)J
86 625 :M
1.694 .169(of the knowledge sources.  The scheduling queue corresponds roughly to the)J
86 639 :M
1.513 .151(control state.  To the extent that execution of conditions determines priorities,)J
86 653 :M
.99 .099(the conditions contribute to rule selection as well as forming pseudocode.)J
108 677 :M
2.429 .243(Here we see a system initially designed with one model \(blackboard, a)J
86 691 :M
5.267 .527(special form of repository\), then realized through a different model)J
86 705 :M
1.773 .177(\(interpreter\).  The realization is not a component-by-component expansion as)J
endp
%%Page: 39 39
%%BeginPageSetup
initializepage
(shaw; page: 39 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(36)S
86 82 :M
3.755 .376(in the previous two examples; the view as an interpreter is a different)J
86 96 :M
.821 .082(aggregation of components from the view as blackboard.)J
.938 G
128 108 355 327 rC
287 380 79 40 rF
287.5 380.5 78 39 rS
226 353 61 66 rF
226.5 353.5 60 65 rS
227 312 60 42 rF
227.5 312.5 59 41 rS
306 312 60 42 rF
306.5 312.5 59 41 rS
309 191 144 42 rF
309.5 191.5 143 41 rS
309 239 144 42 rF
309.5 239.5 143 41 rS
309 138 144 49 rF
309.5 138.5 143 48 rS
130 141 118 171 rF
130.5 141.5 117 170 rS
1 G
324 196 67 16 rF
0 G
324.5 196.5 66 15 rS
1 G
324 167 67 15 rF
0 G
324.5 167.5 66 14 rS
214 426 112 8 rC
gS
.901 .901 scale
298.623 476.548 :T
-298.623 -476.548 :T
238.623 479.548 :M
f4_8 sf
-.016(\(      Control flow-----Data flow\))A
gR
gR
1 G
gS 128 108 355 327 rC
146 158 89 32 rF
0 G
146.5 158.5 88 31 rS
157 172 28 8 rC
gS
.901 .901 scale
189.361 194.592 :T
-189.361 -194.592 :T
175.361 197.592 :M
f4_8 sf
-.131(Level n)A
gR
gR
gS 128 108 355 327 rC
146 158 89 32 rF
0 G
146.5 158.5 88 31 rS
157 172 28 8 rC
gS
.901 .901 scale
189.361 194.592 :T
-189.361 -194.592 :T
175.361 197.592 :M
f4_8 sf
-.131(Level n)A
gR
gR
gS 128 108 355 327 rC
324 150 67 16 rF
0 G
324.5 150.5 66 15 rS
339 154 35 8 rC
gS
.901 .901 scale
395.358 174.61 :T
-395.358 -174.61 :T
377.358 177.61 :M
f4_8 sf
-.098(Condition)A
gR
gR
gS 343 171 27 8 rC
gS
.901 .901 scale
395.798 193.481 :T
-395.798 -193.481 :T
381.798 196.481 :M
0 G
f4_8 sf
-.046(Action)A
gR
gR
gS 341 200 42 8 rC
gS
.901 .901 scale
401.578 225.673 :T
-401.578 -225.673 :T
379.578 228.673 :M
0 G
f4_8 sf
-.098(Condition)A
gR
gR
0 G
gS 128 108 355 327 rC
np 324 183 :M
313 184 :L
313 181 :L
313 178 :L
324 183 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
313 181 234 171 :r
[] 0 :q
234 171 :M
psb
pse
:e
0 G
np 234 231 :M
242 223 :L
244 225 :L
245 228 :L
234 231 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
244 225 323 184 :r
[] 0 :q
323 184 :M
psb
pse
:e
0 G
np 324 212 :M
315 219 :L
315 217 :L
313 214 :L
324 212 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
315 217 234 261 :r
[] 0 :q
234 261 :M
psb
pse
:e
1 G
234 321 46 28 rF
0 G
234.5 321.5 45 27 rS
1 G
313 321 45 28 rF
0 G
313.5 321.5 44 27 rS
239 326 51 16 rC
gS
.901 .901 scale
293.37 369.541 :T
-293.37 -369.541 :T
266.37 368.541 :M
f4_8 sf
(Blackboard)S
266.37 377.422 :M
-.111(Monitor)A
gR
gR
gS 318 325 46 16 rC
gS
.901 .901 scale
378.051 369.431 :T
-378.051 -369.431 :T
354.051 367.431 :M
f4_8 sf
-.063(Scheduling)A
354.051 377.422 :M
(Queue)S
gR
gR
gS 128 108 355 327 rC
np 312 336 :M
301 339 :L
301 336 :L
301 333 :L
312 336 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
301 336 279 336 :r
[] 0 :q
279 336 :M
psb
pse
:e
1 G
234 385 46 29 rF
0 G
234.5 385.5 45 28 rS
1 G
313 385 45 29 rF
0 G
313.5 385.5 44 28 rS
242 387 36 25 rC
gS
.901 .901 scale
286.59 443.365 :T
-286.59 -443.365 :T
268.59 437.365 :M
f4_8 sf
-.096(Focus of)A
268.59 446.246 :M
-.13(Control)A
268.59 455.127 :M
-.033(Database)A
gR
gR
gS 318 394 42 9 rC
gS
.901 .901 scale
376.051 442.136 :T
-376.051 -442.136 :T
354.051 445.136 :M
f4_8 sf
(Scheduler)S
gR
gR
gS 128 108 355 327 rC
np 313 401 :M
302 403 :L
302 401 :L
302 398 :L
313 401 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
302 401 279 401 :r
[] 0 :q
279 401 :M
psb
pse
:e
165 144 52 8 rC
gS
.901 .901 scale
212.24 163.51 :T
-212.24 -163.51 :T
184.24 166.51 :M
0 G
f5_8 sf
-.062(Blackboard)A
gR
gR
gS 323 139 119 8 rC
gS
.901 .901 scale
424.6 157.959 :T
-424.6 -157.959 :T
359.6 160.959 :M
f5_8 sf
-.028(Knowledge Sources)A
gR
gR
gS 128 108 355 327 rC
np 389 158 :M
400 156 :L
400 158 :L
400 161 :L
389 158 :L
eofill
400 159 -1 1 434 158 1 400 158 @a
np 389 175 :M
400 172 :L
400 175 :L
400 177 :L
389 175 :L
eofill
400 176 -1 1 434 175 1 400 175 @a
np 389 203 :M
400 201 :L
400 203 :L
400 206 :L
389 203 :L
eofill
400 204 -1 1 434 203 1 400 203 @a
np 389 222 :M
400 219 :L
400 222 :L
400 224 :L
389 222 :L
eofill
400 223 -1 1 434 222 1 400 222 @a
np 389 253 :M
400 250 :L
400 253 :L
400 256 :L
389 253 :L
eofill
400 254 -1 1 434 253 1 400 253 @a
np 389 271 :M
400 268 :L
400 271 :L
400 274 :L
389 271 :L
eofill
400 272 -1 1 434 271 1 400 271 @a
-1 -1 435 295 1 1 434 158 @b
np 258 349 :M
260 359 :L
258 359 :L
255 359 :L
258 349 :L
eofill
np 258 385 :M
255 375 :L
258 375 :L
260 375 :L
258 385 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
258 375 258 359 :r
[] 0 :q
258 359 :M
psb
pse
:e
0 G
np 335 349 :M
338 359 :L
335 359 :L
333 359 :L
335 349 :L
eofill
np 335 386 :M
333 376 :L
335 376 :L
338 376 :L
335 386 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 4 ] 0 :q
335 376 335 359 :r
[] 0 :q
335 359 :M
psb
pse
:e
0 G
np 248 320 :M
245 309 :L
248 309 :L
251 309 :L
248 320 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
248 309 247 223 :r
[] 0 :q
247 223 :M
psb
pse
:e
1 G
245 282 42 16 rF
245 282 42 16 rC
gS
.901 .901 scale
294.03 321.699 :T
-294.03 -321.699 :T
273.03 319.699 :M
0 G
f7_8 sf
(Blackboard)S
273.03 328.579 :M
(Change)S
gR
gR
gS 128 108 355 327 rC
np 291 335 :M
288 324 :L
291 324 :L
294 324 :L
291 335 :L
eofill
-1 -1 292 325 1 1 291 269 @b
262 261 54 8 rC
gS
.901 .901 scale
320.898 293.387 :T
-320.898 -293.387 :T
291.898 296.387 :M
f7_8 sf
-.052(Condition Part)A
gR
gR
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
gS 128 108 355 327 rC
[9 4 ] 0 :q
318 222 324 217 :r
[] 0 :q
324 217 :M
psb
pse
:e
0 G
np 317 321 :M
315 311 :L
317 311 :L
320 311 :L
317 321 :L
eofill
:a
0 <FFFFFFFFFFFFFFFF
><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>fg bk :b
[9 2 ] 0 :q
317 311 317 225 :r
[] 0 :q
317 225 :M
psb
pse
:e
0 G
-1 -1 435 388 1 1 434 293 @b
358 388 -2 2 435 386 2 358 386 @a
1 G
146 209 89 31 rF
0 G
146.5 209.5 88 30 rS
157 222 28 9 rC
gS
.901 .901 scale
189.361 251.205 :T
-189.361 -251.205 :T
175.361 254.205 :M
f4_8 sf
-.131(Level 3)A
gR
gR
:e
1 G
gS 128 108 355 327 rC
146 240 89 31 rF
0 G
146.5 240.5 88 30 rS
157 253 28 8 rC
gS
.901 .901 scale
189.361 284.507 :T
-189.361 -284.507 :T
175.361 287.507 :M
f4_8 sf
-.131(Level 2)A
gR
gR
gS 128 108 355 327 rC
146 270 89 31 rF
0 G
146.5 270.5 88 30 rS
157 284 28 8 rC
gS
.901 .901 scale
189.361 318.919 :T
-189.361 -318.919 :T
175.361 321.919 :M
f4_8 sf
-.131(Level 1)A
gR
gR
0 G
gS 128 108 355 327 rC
146 209 :M
146 202.33 146.331 200.164 147 202.5 :C
147.664 204.83 148.998 206 151 206 :C
152.998 206 155.331 205.664 158 205 :C
160.664 204.33 163.164 203.83 165.5 203.5 :C
167.831 203.164 170.497 203.33 173.5 204 :C
176.497 204.664 179.83 205.164 183.5 205.5 :C
187.164 205.83 193.33 204.997 202 203 :C
stroke
203 203 :M
208.33 204.33 211.83 205 213.5 205 :C
215.163 205 216.663 205 218 205 :C
219.33 205 220.83 204.664 222.5 204 :C
224.163 203.33 225.83 203.164 227.5 203.5 :C
229.163 203.83 230.496 203.497 231.5 202.5 :C
232.496 201.497 233.163 200.83 233.5 200.5 :C
233.83 200.164 234 202.997 234 209 :C
stroke
146 189 :M
146 195.664 146.331 197.997 147 196 :C
147.664 193.997 148.998 192.83 151 192.5 :C
152.998 192.164 155.331 192.33 158 193 :C
160.664 193.664 163.164 194.164 165.5 194.5 :C
167.831 194.83 170.497 194.83 173.5 194.5 :C
176.497 194.164 179.83 193.664 183.5 193 :C
187.164 192.33 193.33 192.664 202 194 :C
stroke
203 194 :M
208.997 194 212.83 193.83 214.5 193.5 :C
216.163 193.164 217.497 193.164 218.5 193.5 :C
219.497 193.83 220.83 194 222.5 194 :C
224.163 194 225.83 194 227.5 194 :C
229.163 194 230.663 194.497 232 195.5 :C
233.33 196.497 234 197.164 234 197.5 :C
234 197.83 234 194.997 234 189 :C
stroke
1 G
324 213 67 15 rF
0 G
324.5 213.5 66 14 rS
343 217 27 8 rC
gS
.901 .901 scale
395.798 244.544 :T
-395.798 -244.544 :T
381.798 247.544 :M
f4_8 sf
-.046(Action)A
gR
gR
1 G
gS 128 108 355 327 rC
324 245 67 14 rF
0 G
324.5 245.5 66 13 rS
341 248 42 8 rC
gS
.901 .901 scale
401.578 278.956 :T
-401.578 -278.956 :T
379.578 281.956 :M
f4_8 sf
-.098(Condition)A
gR
gR
gS 128 108 355 327 rC
324 262 67 14 rF
0 G
324.5 262.5 66 13 rS
343 266 27 8 rC
gS
.901 .901 scale
395.798 298.938 :T
-395.798 -298.938 :T
381.798 301.938 :M
f4_8 sf
-.046(Action)A
gR
gR
gS 128 108 355 327 rC
314 285 62 17 rF
314 285 62 17 rC
gS
.901 .901 scale
382.611 326.139 :T
-382.611 -326.139 :T
349.611 324.139 :M
0 G
f7_8 sf
-.111(Stimulus )A
349.611 333.019 :M
-.026(Response Frame)A
gR
gR
0 G
gS 128 108 355 327 rC
218 431 -2 2 229 429 2 218 429 @a
143 109 109 20 rC
gS
.901 .901 scale
218.822 131.767 :T
-218.822 -131.767 :T
159.822 128.767 :M
f9_9 sf
-.02(Program State)A
159.822 139.868 :M
-.024(\(Working Meomory\))A
gR
gR
gS 158 340 71 19 rC
gS
.901 .901 scale
214.47 388.192 :T
-214.47 -388.192 :T
176.47 385.192 :M
f9_9 sf
-.063(Interpretation)A
176.47 396.293 :M
-.03(Engine)A
gR
gR
gS 320 109 109 20 rC
gS
.901 .901 scale
415.27 131.767 :T
-415.27 -131.767 :T
356.27 128.767 :M
f9_9 sf
-.082(Pseudo-Code)A
356.27 139.868 :M
-.049(\(Knowledge Base\))A
gR
gR
2 lw
gS 0 0 552 730 rC
gS
.901 .901 scale
523.17 237.334 :T
270 rotate
-523.17 -237.334 :T
446.17 235.334 :M
f9_9 sf
-.023(Note:  Actions are also part of )A
446.17 246.434 :M
-.011(interpretation engine)A
gR
1 G
128 108 355 327 rC
423 311 33 20 rF
423 311 33 20 rC
gS
.901 .901 scale
487.588 356.001 :T
-487.588 -356.001 :T
470.588 353.001 :M
0 G
f9_9 sf
-.138(Control)A
470.588 364.101 :M
-.083(State)A
gR
gR
gS 30 31 552 730 rC
194 451 :M
f2_12 sf
2.487 .249(Figure 26: Interpreter View of Hearsay-II)J
86 479 :M
f0_14 sf
.5(5.)A
122 479 :M
.104 .01(Past, Present, and Future)J
86 504 :M
f1_12 sf
1.138 .114(We have outlined a number of architectural styles and shown how they can be)J
86 518 :M
2.868 .287(applied and adapted to specific software systems.  We hope that this has)J
86 532 :M
1.454 .145(convinced the reader that analysis and design of systems in terms of software)J
86 546 :M
1.261 .126(architecture is both viable and worth doing.  Further we hope to have made it)J
86 560 :M
1.513 .151(clear that an understanding of the emerging vocabulary of architectural styles)J
86 574 :M
1.158 .116(is a significant\321if not necessary\321intellectual tool for the software engineer.)J
108 598 :M
1.455 .146(There is, of course, much more to software architecture than we have had)J
86 612 :M
1.361 .136(space to cover.  In particular, we have said very little about existing results in)J
86 626 :M
3.934 .393(the areas of analysis, formal specification, domain-specific architectures,)J
86 640 :M
1.411 .141(module interconnection languages, and special-architecture tools.)J
108 664 :M
.854 .085(This is not to say that more work isn't needed. Indeed, we can expect to see)J
86 678 :M
1.06 .106(significant advances in a number of areas including:)J
113 701 :M
.938 .094(\245 Better taxonomies of architectures and architectural styles.)J
endp
%%Page: 40 40
%%BeginPageSetup
initializepage
(shaw; page: 40 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(37)S
113 82 :M
1.014 .101(\245 Formal models for characterizing and analyzing architectures.)J
113 104 :M
3 .3(\245 Better understanding of the primitive semantic entities from which)J
122 118 :M
.667 .067(these styles are composed.)J
113 140 :M
.84 .084(\245 Notations for describing architectural designs.)J
113 162 :M
1.317 .132(\245 Tools and environments for developing architectural designs.)J
113 184 :M
1.136 .114(\245 Techniques for extracting architectural information from existing code.)J
113 206 :M
.817 .082(\245 Better understanding of the role of architectures in the life-cycle process.)J
108 229 :M
1.081 .108(These are all areas of active research both in industry and academia. Given)J
86 243 :M
4.476 .448(the increasing interest in this emerging field, we can expect that our)J
86 257 :M
3.149 .315(understanding of the principles and practice of software architecture will)J
86 271 :M
1.927 .193(improve considerably over time. However, as we have illustrated, even with)J
86 285 :M
1.751 .175(the basic concepts that we now have in hand, design at the level of software)J
86 299 :M
3.534 .353(architecture can provide direct and substantial benefit to the practice of)J
86 313 :M
1.577 .158(software engineering.)J
86 343 :M
f0_14 sf
-.367(Acknowledgements)A
108 368 :M
f1_12 sf
1.54 .154(We gratefully acknowledge our many colleagues who have contributed to)J
86 382 :M
1.406 .141(the ideas presented in this paper.  In particular, we would like to thank Chris)J
86 396 :M
1.056 .106(Okasaki, Curtis Scott, and Roy Swonger for their help in developing the course)J
86 410 :M
1.446 .145(from which much of this material was drawn. We thank David Notkin, Kevin)J
86 424 :M
1.676 .168(Sullivan, and Gail Kaiser for their contribution towards understanding event-)J
86 438 :M
1.085 .108(based systems. Rob Allen helped develop a rigorous understanding of the pipe)J
86 452 :M
1.843 .184(and filter style. We would like to acknowledge the oscilloscope development)J
86 466 :M
1.117 .112(team at Tektronix, and especially Norm Delisle, for their part in demonstrating)J
86 480 :M
3.492 .349(the value of domain-specific architectural styles in an industrial context.)J
86 494 :M
1.108 .111(Finally, we would like to thank Barry Boehm, Larry Druffel, and Dilip Soni for)J
86 508 :M
1.026 .103(their constructive comments on early drafts of the paper.)J
86 538 :M
f0_14 sf
-.342(Bibliography)A
86 560 :M
f1_13 sf
.522 .052([1]  D. Garlan, M. Shaw, C. Okasaki, C. Scott, and R. Swonger, \322Experience)J
104 574 :M
.951(with)A
f1_10 sf
2.285 .228( a course on architectures for software systems,\323 in )J
f2_10 sf
2.462 .246(Proceedings of the Sixth SEI)J
104 587 :M
1.197 .12(Conference on Software Engineering Education,)J
f1_10 sf
1.095 .11( Springer-Verlag, LNCS 376, October 1992.)J
86 604 :M
1.54 .154([2]  M. Shaw, \322Toward higher-level abstractions for software systems,\323 in )J
f2_10 sf
1.912 .191(Data & Knowledge)J
104 616 :M
.177(Engineering,)A
f1_10 sf
.712 .071( vol. 5, pp. 119-128, North Holland: Elsevier Science Publishers B.V., 1990.)J
86 633 :M
1.602 .16([3]  M. Shaw, \322Heterogeneous design idioms for software architecture,\323 in )J
f2_10 sf
1.761 .176(Proceedings of the)J
104 645 :M
4.579 .458(Sixth International Workshop on Software Specification and Design, IEEE Computer)J
104 657 :M
1.361 .136(Society, Software Engineering Notes,)J
f1_10 sf
1.063 .106( \(Como, Italy\), pp. 158-165, October 25-26, 1991.)J
86 674 :M
2.434 .243([4]  M. Shaw, \322Software architectures for shared information systems,\323 in )J
f2_10 sf
3.746 .375(Mind Matters:)J
104 686 :M
1.294 .129(Contributions to Cognitive and Computer Science in Honor of  Allen Newell,)J
f1_10 sf
1.535 .154( Erlbaum, 1993.)J
86 703 :M
1.432 .143([5]  R. Allen and D. Garlan, \322A formal approach to software architectures,\323 in )J
f2_10 sf
2.308 .231(Proceedings of)J
104 715 :M
.104(IFIP\32592)A
f1_10 sf
.433 .043( \(J. van Leeuwen, ed.\), Elsevier Science Publishers B.V., September 1992.)J
endp
%%Page: 41 41
%%BeginPageSetup
initializepage
(shaw; page: 41 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(38)S
86 81 :M
f1_10 sf
.808 .081([6]  D. Garlan and D. Notkin, \322Formalizing design spaces:  Implicit invocation mechanisms,\323 in)J
104 93 :M
f2_10 sf
2.917 .292(VDM\32591: Formal Software Development Methods.)J
f1_10 sf
2.691 .269(  \(Noordwijkerhout, The Netherlands\),)J
104 105 :M
.468 .047(pp. 31-44, Springer-Verlag, LNCS 551, October 1991.)J
86 122 :M
.927 .093([7]  D. Garlan, G. E. Kaiser, and D. Notkin, \322Using tool abstraction to compose systems,\323 )J
f2_10 sf
.426(IEEE)A
104 134 :M
.095(Computer,)A
f1_10 sf
.274 .027( vol. 25, June 1992.)J
86 151 :M
.602 .06([8]  A. Z. Spector )J
f2_10 sf
.699 .07(et al.,)J
f1_10 sf
.892 .089( \322Camelot:  A distributed transaction facility for Mach and the Internet -)J
104 163 :M
.381 .038(an interim report,\323 Tech. Rep. CMU-CS-87-129, Carnegie Mellon University, June 1987.)J
86 180 :M
1.422 .142([9]  M. Fridrich and W. Older, \322Helix:  The architecture of the XMS distributed file system,\323)J
104 192 :M
f2_10 sf
1.257 .126(IEEE Software,)J
f1_10 sf
.672 .067( vol. 2, pp. 21-29, May 1985.)J
86 209 :M
.851 .085([10]  M. A. Linton, \322Distributed management of a software database,\323 )J
f2_10 sf
1.272 .127(IEEE Software,)J
f1_10 sf
.551 .055( vol. 4, pp.)J
104 221 :M
.094 .009(70-76, November 1987.)J
86 238 :M
1.725 .173([11]  V. Seshadri et al., \322Sematic analysis in a concurrent compiler,\323 in )J
f2_10 sf
2.578 .258(Proceedings of ACM)J
104 250 :M
3.489 .349(SIGPLAN \32588 Conference on Programming Language Design and Implementation,)J
f1_10 sf
3.273 .327( ACM)J
104 262 :M
.761 .076(SIGPLAN Notices, 1988.)J
86 279 :M
.305 .031([12]  M. C. Paulk, \322The ARC Network:  A case study,\323 )J
f2_10 sf
.569 .057(IEEE Software,)J
f1_10 sf
.304 .03( vol. 2, pp. 61-69, May 1985.)J
86 296 :M
.31 .031([13]  M. Chen and R. J. Norman, \322A framework for integrated case,\323 IEEE Software, vol. 9, pp. 18-)J
104 308 :M
.393 .039(22, March 1992.)J
86 325 :M
.436 .044([14]  NIST/ECMA reference model for frameworks of software engineering environments.\323 NIST)J
104 337 :M
.516 .052(Special Publication 500-201, December 1991.)J
86 354 :M
.573 .057([15]  R. W. Scheifler and J. Gettys, \322The X window system,\323 )J
f2_10 sf
.906 .091(AACM Transactions on Graphics,)J
f1_10 sf
.53 .053( vol.)J
104 366 :M
.478 .048(5, pp. 79-109, April 1986.)J
86 383 :M
1.42 .142([16]  M. J. Bach, )J
f2_10 sf
2.428 .243(The Design of the UNIX Operating System,)J
f1_10 sf
2.038 .204( ch. 5.12, pp. 111-119.  Software)J
104 395 :M
1.731 .173(Series, Prentice-Hall, 1986.)J
86 412 :M
2.191 .219([17]  N. Delisle and D. Garlan, \322Applying formal specification to industrial problems:  A)J
104 424 :M
.706 .071(specification of an oscilloscope,\323 )J
f2_10 sf
.941 .094(IEEE Software,)J
f1_10 sf
.775 .078( September 1990.)J
86 441 :M
1.693 .169([18]  G. Kahn, \322The semantics of a simple language for parallel programming,\323 )J
f2_10 sf
.485(Information)A
104 453 :M
.176(Processing,)A
f1_10 sf
.702 .07( 1974.)J
86 470 :M
.812 .081([19]  M. R. Barbacci, C. B. Weinstock, and J. M. Wing, \322Programming at the processor-memory-)J
104 482 :M
1.838 .184(switch level,\323 in )J
f2_10 sf
2.378 .238(Proceedings of the 10th International Conference on Software Engineering,)J
104 494 :M
f1_10 sf
.364 .036(\(Singapore\), pp. 19-28, IEEE Computer Society Press, April 1988.)J
86 511 :M
2.03 .203([20]  G. E. Kaiser and D. Garlan, \322Synthesizing programming environments from reusable)J
104 523 :M
.772 .077(features,\323 in Software Reusability \(T. J. Biggerstaff and A. J. Perlis, eds.\), vol. 2, ACM Press,)J
104 535 :M
.125(1989.)A
86 552 :M
.851 .085([21]  W. Harrison, \322RPDE:  A framework for integrating tool fragments,\323 IEEE Software, vol. 4,)J
104 564 :M
-.023(November 1987.)A
86 581 :M
.62 .062([22]  C. Hewitt, \322Planner:  A language for proving theorems in robots,\323 in )J
f2_10 sf
.73 .073(Proceedings of the First)J
104 593 :M
2.383 .238(International Joint Conference in Artificial Intelligence,)J
f1_10 sf
1.912 .191( 1969.)J
86 610 :M
1.43 .143([23]  S. P. Reiss, \322Connecting tools using message passing in the field program development)J
104 622 :M
.865 .087(environment,\323 )J
f2_10 sf
.802 .08(IEEE Software,)J
f1_10 sf
.468 .047( July 1990.)J
86 639 :M
1.044 .104([24]  C. Gerety, \322HP Softbench:  A new generation of software development tools,\323 Tech. Rep.)J
104 651 :M
3.57 .357(SESD-89-25, Hewlett-Packard Software Engineering Systems Division, Fort Collins,)J
104 663 :M
.063 .006(Colorado, November 1989.)J
86 680 :M
.969 .097([25]  R. M. Balzer, \322Living with the next generation operating system,\323 in )J
f2_10 sf
1.064 .106(Proceedings of the 4th)J
104 692 :M
1.61 .161(World Computer Conference,)J
f1_10 sf
1.337 .134( September 1986.)J
endp
%%Page: 42 42
%%BeginPageSetup
initializepage
(shaw; page: 42 of 42)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
86 752 :M
f1_12 sf
1.146 .115(Garlan & Shaw:  An Introduction to Software Architecture)J
506 752 :M
(39)S
86 81 :M
f1_10 sf
1.267 .127([26]  G. Krasner and S. Pope, \322A cookbook for using the model-view-controller user interface)J
104 93 :M
2.127 .213(paradigm in Smalltalk-80,\323 Journal of Object Oriented Programming, vol. 1, pp. 26-49,)J
104 105 :M
-.102(August/September 1988.)A
86 122 :M
1.592 .159([27]  M. Shaw, E. Borison, M. Horowitz, T. Lane, D. Nichols, and R. Pausch, \322Descartes:  A)J
104 134 :M
4.124 .412(programming-language approach to interactive display interfaces,\323 )J
f2_10 sf
4.374 .437(Proceedings of)J
104 146 :M
2.877 .288(SIGPLAN \32583:  Symposium on Programming Language Issues in Software Systems, ACM)J
104 158 :M
1.01 .101(SIGPLAN Notices,)J
f1_10 sf
.501 .05( vol. 18, pp. 100-111, June 1983.)J
86 175 :M
.541 .054([28]  A. N. Habermann and D. S. Notkin, \322Gandalf:  Software development environments,\323 )J
f2_10 sf
.219(IEEE)A
104 187 :M
1.004 .1(Transactions on Software Engineering,)J
f1_10 sf
.786 .079( vol. SE-12, pp. 1117-1127, December 1986.)J
86 204 :M
2.125 .213([29]  A. N. Habermann, D. Garlan, and D. Notkin, \322Generation of integrated task-specific)J
104 216 :M
1.834 .183(software environments,\323 in )J
f2_10 sf
1.53 .153(CMU Computer Science:  A 25th Commemorative )J
f1_10 sf
1.51 .151(\(R. F. Rashid,)J
104 228 :M
.36 .036(ed.\), Anthology Series, pp. 69-98, ACM Press, 1991.)J
86 245 :M
3.037 .304([30]  K. Sullivan and D. Notkin, \322Reconciling environment integration and component)J
104 257 :M
3.923 .392(independence,\323 in )J
f2_10 sf
3.546 .355(Proceedings of ACM SIGSOFT90:  Fourth Symposium on Software)J
104 269 :M
1.448 .145(Development Environments,)J
f1_10 sf
.79 .079( pp. 22-23, December 1990.)J
86 286 :M
1.469 .147([31]  G. R. McClain, ed., )J
f2_10 sf
2.951 .295(Open Systems Interconnection Handbook.)J
f1_10 sf
1.607 .161(  New York, NY:  Intertext)J
104 298 :M
.474 .047(Publications McGraw-Hill Book Company, 1991.)J
86 315 :M
2.033 .203([32]  D. Batory and S. O\325Malley, \322The design and implementation of hierarchical software)J
104 327 :M
.497 .05(systems using reusable components,\323 Tech. Rep. TR-91-22, Department of Computer Science,)J
104 339 :M
.12 .012(University of Texas, Austin, June 1991.)J
86 356 :M
.679 .068([33]  H. C. Lauer and E. H. Satterthwaite, \322Impact of MESA on system design,\323 in )J
f2_10 sf
1.145 .114(Proceedings of)J
104 368 :M
3.08 .308(the Third International Conference on Software Engineering,)J
f1_10 sf
2.678 .268( \(Atlanta, GA\), pp. 174-175,)J
104 380 :M
.054 .005(IEEE Computer Society Press, May 1979.)J
86 397 :M
.403 .04([34]  H. P. Nii, \322Blackboard systems Parts 1 & 2,\323 AI Magazine, vol. 7 nos 3 \(pp. 38-53\) and 4 \(pp.)J
104 409 :M
.838 .084(62-69\), 1986.)J
86 426 :M
.869 .087([35]  V. Ambriola, P. Ciancarini, and C. Montangero, \322Software process enactment in oikos,\323 in)J
104 438 :M
f2_10 sf
5.731 .573(Proceedings of the Fourth ACM SIGSOFT Symposium on Software Development)J
104 450 :M
.318(Environments,)A
f1_10 sf
1.423 .142( SIGSOFT Software Engineering Notes, \(Irvine, CA\), pp. 183-192, December)J
104 462 :M
.125(1990.)A
86 479 :M
.73 .073([36]  D. R. Barstow, H. E. Shrobe, and E. Sandewall, eds., )J
f2_10 sf
1.532 .153(Interactive Programming Environments.)J
104 491 :M
f1_10 sf
.658 .066(McGraw-Hill Book Co., 1984.)J
86 508 :M
.132 .013([37]  G. R. Andrews, \322Paradigms for process interaction in distributed programs,\323 )J
f2_10 sf
.24 .024(ACM Computing)J
104 520 :M
.16(Surveys,)A
f1_10 sf
.54 .054( vol. 23, pp. 49-90, March 1991.)J
86 537 :M
.836 .084([38]  A. Berson, )J
f2_10 sf
2.03 .203(Client/Server Architecture.)J
f1_10 sf
1.278 .128(  McGraw-Hill, 1992.)J
86 554 :M
1.473 .147([39]  E. Mettala and M. H. Graham, eds., )J
f2_10 sf
2.607 .261(The Domain-Specific Software Architecture Program.)J
104 566 :M
f1_10 sf
.297 .03(No. CMU/SEI-92-SR-9, Carnegie Mellon Software Engineering Institute, June 1992.)J
86 583 :M
1.596 .16([40]  D. Harel, \322Statecharts:  A visual formalism for complex systems,\323  )J
f2_10 sf
2.231 .223(Science of Computer)J
104 595 :M
.16(Programming,)A
f1_10 sf
.468 .047( vol. 8, pp. 231-274, 1987.)J
86 612 :M
1.835 .184([41]  K. J. \201str\232m and B. Wittenmark, )J
f2_10 sf
3.684 .368(Computer-Controlled Systems Design.)J
f1_10 sf
1.875 .187(  Prentice Hall,)J
104 624 :M
-.078(second ed., 1990.)A
86 641 :M
2.681 .268([42]  D. L. Parnas, \322On the criteria to be used in decomposing systems into modules,\323)J
104 653 :M
f2_10 sf
.776 .078(Communications of the ACM,)J
f1_10 sf
.625 .062( vol. 15, pp. 1053-1058, December 1972.)J
86 670 :M
.107 .011([43]  \322PROVOX plus Instrumentation System:  System overview,\323 1989.)J
86 687 :M
1.232 .123([44]  F. Hayes-Roth, \324Rule-based systems,\323 Communications of the ACM, vol. 28, pp. 921-932,)J
104 699 :M
.339 .034(September 1985.)J
endp
%%Trailer
end		% md
%%EOF
